
bin\Debug\LCD_4bit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001d24  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  00001d24  00001db8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .fuse         00000002  00820000  00820000  00001dc6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .debug_aranges 00000160  00000000  00000000  00001dc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000021c  00000000  00000000  00001f28  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000022e1  00000000  00000000  00002144  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001078  00000000  00000000  00004425  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000015a2  00000000  00000000  0000549d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e0  00000000  00000000  00006a40  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000371  00000000  00000000  00006c20  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007ce  00000000  00000000  00006f91  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  0000775f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e2       	ldi	r30, 0x24	; 36
      68:	fd e1       	ldi	r31, 0x1D	; 29
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 36       	cpi	r26, 0x6E	; 110
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <main>
      7a:	0c 94 90 0e 	jmp	0x1d20	; 0x1d20 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <LCD_data>:
#define set_E  PORTD=(PORTD |(1<<PD6))
#define clear_E  PORTD=(PORTD &~(1<<PD6))
#include <avr/io.h>
#include <util/delay.h>
void LCD_data(unsigned char data)
{
      82:	0f 93       	push	r16
      84:	1f 93       	push	r17
      86:	df 93       	push	r29
      88:	cf 93       	push	r28
      8a:	cd b7       	in	r28, 0x3d	; 61
      8c:	de b7       	in	r29, 0x3e	; 62
      8e:	c3 56       	subi	r28, 0x63	; 99
      90:	d0 40       	sbci	r29, 0x00	; 0
      92:	0f b6       	in	r0, 0x3f	; 63
      94:	f8 94       	cli
      96:	de bf       	out	0x3e, r29	; 62
      98:	0f be       	out	0x3f, r0	; 63
      9a:	cd bf       	out	0x3d, r28	; 61
      9c:	fe 01       	movw	r30, r28
      9e:	ed 59       	subi	r30, 0x9D	; 157
      a0:	ff 4f       	sbci	r31, 0xFF	; 255
      a2:	80 83       	st	Z, r24
  set_RS;
      a4:	a2 e3       	ldi	r26, 0x32	; 50
      a6:	b0 e0       	ldi	r27, 0x00	; 0
      a8:	e2 e3       	ldi	r30, 0x32	; 50
      aa:	f0 e0       	ldi	r31, 0x00	; 0
      ac:	80 81       	ld	r24, Z
      ae:	80 61       	ori	r24, 0x10	; 16
      b0:	8c 93       	st	X, r24
  clear_RW;
      b2:	a2 e3       	ldi	r26, 0x32	; 50
      b4:	b0 e0       	ldi	r27, 0x00	; 0
      b6:	e2 e3       	ldi	r30, 0x32	; 50
      b8:	f0 e0       	ldi	r31, 0x00	; 0
      ba:	80 81       	ld	r24, Z
      bc:	8f 7d       	andi	r24, 0xDF	; 223
      be:	8c 93       	st	X, r24
      c0:	fe 01       	movw	r30, r28
      c2:	e1 5a       	subi	r30, 0xA1	; 161
      c4:	ff 4f       	sbci	r31, 0xFF	; 255
      c6:	80 e0       	ldi	r24, 0x00	; 0
      c8:	90 e0       	ldi	r25, 0x00	; 0
      ca:	a0 e8       	ldi	r26, 0x80	; 128
      cc:	bf e3       	ldi	r27, 0x3F	; 63
      ce:	80 83       	st	Z, r24
      d0:	91 83       	std	Z+1, r25	; 0x01
      d2:	a2 83       	std	Z+2, r26	; 0x02
      d4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
      d6:	8e 01       	movw	r16, r28
      d8:	05 5a       	subi	r16, 0xA5	; 165
      da:	1f 4f       	sbci	r17, 0xFF	; 255
      dc:	fe 01       	movw	r30, r28
      de:	e1 5a       	subi	r30, 0xA1	; 161
      e0:	ff 4f       	sbci	r31, 0xFF	; 255
      e2:	60 81       	ld	r22, Z
      e4:	71 81       	ldd	r23, Z+1	; 0x01
      e6:	82 81       	ldd	r24, Z+2	; 0x02
      e8:	93 81       	ldd	r25, Z+3	; 0x03
      ea:	20 e0       	ldi	r18, 0x00	; 0
      ec:	30 e0       	ldi	r19, 0x00	; 0
      ee:	4a e7       	ldi	r20, 0x7A	; 122
      f0:	55 e4       	ldi	r21, 0x45	; 69
      f2:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
      f6:	dc 01       	movw	r26, r24
      f8:	cb 01       	movw	r24, r22
      fa:	f8 01       	movw	r30, r16
      fc:	80 83       	st	Z, r24
      fe:	91 83       	std	Z+1, r25	; 0x01
     100:	a2 83       	std	Z+2, r26	; 0x02
     102:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     104:	fe 01       	movw	r30, r28
     106:	e5 5a       	subi	r30, 0xA5	; 165
     108:	ff 4f       	sbci	r31, 0xFF	; 255
     10a:	60 81       	ld	r22, Z
     10c:	71 81       	ldd	r23, Z+1	; 0x01
     10e:	82 81       	ldd	r24, Z+2	; 0x02
     110:	93 81       	ldd	r25, Z+3	; 0x03
     112:	20 e0       	ldi	r18, 0x00	; 0
     114:	30 e0       	ldi	r19, 0x00	; 0
     116:	40 e8       	ldi	r20, 0x80	; 128
     118:	5f e3       	ldi	r21, 0x3F	; 63
     11a:	0e 94 2f 0c 	call	0x185e	; 0x185e <__ltsf2>
     11e:	88 23       	and	r24, r24
     120:	44 f4       	brge	.+16     	; 0x132 <LCD_data+0xb0>
		__ticks = 1;
     122:	fe 01       	movw	r30, r28
     124:	e7 5a       	subi	r30, 0xA7	; 167
     126:	ff 4f       	sbci	r31, 0xFF	; 255
     128:	81 e0       	ldi	r24, 0x01	; 1
     12a:	90 e0       	ldi	r25, 0x00	; 0
     12c:	91 83       	std	Z+1, r25	; 0x01
     12e:	80 83       	st	Z, r24
     130:	64 c0       	rjmp	.+200    	; 0x1fa <LCD_data+0x178>
	else if (__tmp > 65535)
     132:	fe 01       	movw	r30, r28
     134:	e5 5a       	subi	r30, 0xA5	; 165
     136:	ff 4f       	sbci	r31, 0xFF	; 255
     138:	60 81       	ld	r22, Z
     13a:	71 81       	ldd	r23, Z+1	; 0x01
     13c:	82 81       	ldd	r24, Z+2	; 0x02
     13e:	93 81       	ldd	r25, Z+3	; 0x03
     140:	20 e0       	ldi	r18, 0x00	; 0
     142:	3f ef       	ldi	r19, 0xFF	; 255
     144:	4f e7       	ldi	r20, 0x7F	; 127
     146:	57 e4       	ldi	r21, 0x47	; 71
     148:	0e 94 cf 0b 	call	0x179e	; 0x179e <__gtsf2>
     14c:	18 16       	cp	r1, r24
     14e:	0c f0       	brlt	.+2      	; 0x152 <LCD_data+0xd0>
     150:	43 c0       	rjmp	.+134    	; 0x1d8 <LCD_data+0x156>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     152:	fe 01       	movw	r30, r28
     154:	e1 5a       	subi	r30, 0xA1	; 161
     156:	ff 4f       	sbci	r31, 0xFF	; 255
     158:	60 81       	ld	r22, Z
     15a:	71 81       	ldd	r23, Z+1	; 0x01
     15c:	82 81       	ldd	r24, Z+2	; 0x02
     15e:	93 81       	ldd	r25, Z+3	; 0x03
     160:	20 e0       	ldi	r18, 0x00	; 0
     162:	30 e0       	ldi	r19, 0x00	; 0
     164:	40 e2       	ldi	r20, 0x20	; 32
     166:	51 e4       	ldi	r21, 0x41	; 65
     168:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     16c:	dc 01       	movw	r26, r24
     16e:	cb 01       	movw	r24, r22
     170:	8e 01       	movw	r16, r28
     172:	07 5a       	subi	r16, 0xA7	; 167
     174:	1f 4f       	sbci	r17, 0xFF	; 255
     176:	bc 01       	movw	r22, r24
     178:	cd 01       	movw	r24, r26
     17a:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     17e:	dc 01       	movw	r26, r24
     180:	cb 01       	movw	r24, r22
     182:	f8 01       	movw	r30, r16
     184:	91 83       	std	Z+1, r25	; 0x01
     186:	80 83       	st	Z, r24
     188:	1f c0       	rjmp	.+62     	; 0x1c8 <LCD_data+0x146>
     18a:	fe 01       	movw	r30, r28
     18c:	e9 5a       	subi	r30, 0xA9	; 169
     18e:	ff 4f       	sbci	r31, 0xFF	; 255
     190:	80 e9       	ldi	r24, 0x90	; 144
     192:	91 e0       	ldi	r25, 0x01	; 1
     194:	91 83       	std	Z+1, r25	; 0x01
     196:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     198:	fe 01       	movw	r30, r28
     19a:	e9 5a       	subi	r30, 0xA9	; 169
     19c:	ff 4f       	sbci	r31, 0xFF	; 255
     19e:	80 81       	ld	r24, Z
     1a0:	91 81       	ldd	r25, Z+1	; 0x01
     1a2:	01 97       	sbiw	r24, 0x01	; 1
     1a4:	f1 f7       	brne	.-4      	; 0x1a2 <LCD_data+0x120>
     1a6:	fe 01       	movw	r30, r28
     1a8:	e9 5a       	subi	r30, 0xA9	; 169
     1aa:	ff 4f       	sbci	r31, 0xFF	; 255
     1ac:	91 83       	std	Z+1, r25	; 0x01
     1ae:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1b0:	de 01       	movw	r26, r28
     1b2:	a7 5a       	subi	r26, 0xA7	; 167
     1b4:	bf 4f       	sbci	r27, 0xFF	; 255
     1b6:	fe 01       	movw	r30, r28
     1b8:	e7 5a       	subi	r30, 0xA7	; 167
     1ba:	ff 4f       	sbci	r31, 0xFF	; 255
     1bc:	80 81       	ld	r24, Z
     1be:	91 81       	ldd	r25, Z+1	; 0x01
     1c0:	01 97       	sbiw	r24, 0x01	; 1
     1c2:	11 96       	adiw	r26, 0x01	; 1
     1c4:	9c 93       	st	X, r25
     1c6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1c8:	fe 01       	movw	r30, r28
     1ca:	e7 5a       	subi	r30, 0xA7	; 167
     1cc:	ff 4f       	sbci	r31, 0xFF	; 255
     1ce:	80 81       	ld	r24, Z
     1d0:	91 81       	ldd	r25, Z+1	; 0x01
     1d2:	00 97       	sbiw	r24, 0x00	; 0
     1d4:	d1 f6       	brne	.-76     	; 0x18a <LCD_data+0x108>
     1d6:	27 c0       	rjmp	.+78     	; 0x226 <LCD_data+0x1a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1d8:	8e 01       	movw	r16, r28
     1da:	07 5a       	subi	r16, 0xA7	; 167
     1dc:	1f 4f       	sbci	r17, 0xFF	; 255
     1de:	fe 01       	movw	r30, r28
     1e0:	e5 5a       	subi	r30, 0xA5	; 165
     1e2:	ff 4f       	sbci	r31, 0xFF	; 255
     1e4:	60 81       	ld	r22, Z
     1e6:	71 81       	ldd	r23, Z+1	; 0x01
     1e8:	82 81       	ldd	r24, Z+2	; 0x02
     1ea:	93 81       	ldd	r25, Z+3	; 0x03
     1ec:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     1f0:	dc 01       	movw	r26, r24
     1f2:	cb 01       	movw	r24, r22
     1f4:	f8 01       	movw	r30, r16
     1f6:	91 83       	std	Z+1, r25	; 0x01
     1f8:	80 83       	st	Z, r24
     1fa:	de 01       	movw	r26, r28
     1fc:	ab 5a       	subi	r26, 0xAB	; 171
     1fe:	bf 4f       	sbci	r27, 0xFF	; 255
     200:	fe 01       	movw	r30, r28
     202:	e7 5a       	subi	r30, 0xA7	; 167
     204:	ff 4f       	sbci	r31, 0xFF	; 255
     206:	80 81       	ld	r24, Z
     208:	91 81       	ldd	r25, Z+1	; 0x01
     20a:	8d 93       	st	X+, r24
     20c:	9c 93       	st	X, r25
     20e:	fe 01       	movw	r30, r28
     210:	eb 5a       	subi	r30, 0xAB	; 171
     212:	ff 4f       	sbci	r31, 0xFF	; 255
     214:	80 81       	ld	r24, Z
     216:	91 81       	ldd	r25, Z+1	; 0x01
     218:	01 97       	sbiw	r24, 0x01	; 1
     21a:	f1 f7       	brne	.-4      	; 0x218 <LCD_data+0x196>
     21c:	fe 01       	movw	r30, r28
     21e:	eb 5a       	subi	r30, 0xAB	; 171
     220:	ff 4f       	sbci	r31, 0xFF	; 255
     222:	91 83       	std	Z+1, r25	; 0x01
     224:	80 83       	st	Z, r24
  _delay_ms(1);
  set_E;
     226:	a2 e3       	ldi	r26, 0x32	; 50
     228:	b0 e0       	ldi	r27, 0x00	; 0
     22a:	e2 e3       	ldi	r30, 0x32	; 50
     22c:	f0 e0       	ldi	r31, 0x00	; 0
     22e:	80 81       	ld	r24, Z
     230:	80 64       	ori	r24, 0x40	; 64
     232:	8c 93       	st	X, r24
     234:	fe 01       	movw	r30, r28
     236:	ef 5a       	subi	r30, 0xAF	; 175
     238:	ff 4f       	sbci	r31, 0xFF	; 255
     23a:	80 e0       	ldi	r24, 0x00	; 0
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	a0 e8       	ldi	r26, 0x80	; 128
     240:	bf e3       	ldi	r27, 0x3F	; 63
     242:	80 83       	st	Z, r24
     244:	91 83       	std	Z+1, r25	; 0x01
     246:	a2 83       	std	Z+2, r26	; 0x02
     248:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     24a:	8e 01       	movw	r16, r28
     24c:	03 5b       	subi	r16, 0xB3	; 179
     24e:	1f 4f       	sbci	r17, 0xFF	; 255
     250:	fe 01       	movw	r30, r28
     252:	ef 5a       	subi	r30, 0xAF	; 175
     254:	ff 4f       	sbci	r31, 0xFF	; 255
     256:	60 81       	ld	r22, Z
     258:	71 81       	ldd	r23, Z+1	; 0x01
     25a:	82 81       	ldd	r24, Z+2	; 0x02
     25c:	93 81       	ldd	r25, Z+3	; 0x03
     25e:	20 e0       	ldi	r18, 0x00	; 0
     260:	30 e0       	ldi	r19, 0x00	; 0
     262:	4a e7       	ldi	r20, 0x7A	; 122
     264:	55 e4       	ldi	r21, 0x45	; 69
     266:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     26a:	dc 01       	movw	r26, r24
     26c:	cb 01       	movw	r24, r22
     26e:	f8 01       	movw	r30, r16
     270:	80 83       	st	Z, r24
     272:	91 83       	std	Z+1, r25	; 0x01
     274:	a2 83       	std	Z+2, r26	; 0x02
     276:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     278:	fe 01       	movw	r30, r28
     27a:	e3 5b       	subi	r30, 0xB3	; 179
     27c:	ff 4f       	sbci	r31, 0xFF	; 255
     27e:	60 81       	ld	r22, Z
     280:	71 81       	ldd	r23, Z+1	; 0x01
     282:	82 81       	ldd	r24, Z+2	; 0x02
     284:	93 81       	ldd	r25, Z+3	; 0x03
     286:	20 e0       	ldi	r18, 0x00	; 0
     288:	30 e0       	ldi	r19, 0x00	; 0
     28a:	40 e8       	ldi	r20, 0x80	; 128
     28c:	5f e3       	ldi	r21, 0x3F	; 63
     28e:	0e 94 2f 0c 	call	0x185e	; 0x185e <__ltsf2>
     292:	88 23       	and	r24, r24
     294:	44 f4       	brge	.+16     	; 0x2a6 <LCD_data+0x224>
		__ticks = 1;
     296:	fe 01       	movw	r30, r28
     298:	e5 5b       	subi	r30, 0xB5	; 181
     29a:	ff 4f       	sbci	r31, 0xFF	; 255
     29c:	81 e0       	ldi	r24, 0x01	; 1
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	91 83       	std	Z+1, r25	; 0x01
     2a2:	80 83       	st	Z, r24
     2a4:	64 c0       	rjmp	.+200    	; 0x36e <LCD_data+0x2ec>
	else if (__tmp > 65535)
     2a6:	fe 01       	movw	r30, r28
     2a8:	e3 5b       	subi	r30, 0xB3	; 179
     2aa:	ff 4f       	sbci	r31, 0xFF	; 255
     2ac:	60 81       	ld	r22, Z
     2ae:	71 81       	ldd	r23, Z+1	; 0x01
     2b0:	82 81       	ldd	r24, Z+2	; 0x02
     2b2:	93 81       	ldd	r25, Z+3	; 0x03
     2b4:	20 e0       	ldi	r18, 0x00	; 0
     2b6:	3f ef       	ldi	r19, 0xFF	; 255
     2b8:	4f e7       	ldi	r20, 0x7F	; 127
     2ba:	57 e4       	ldi	r21, 0x47	; 71
     2bc:	0e 94 cf 0b 	call	0x179e	; 0x179e <__gtsf2>
     2c0:	18 16       	cp	r1, r24
     2c2:	0c f0       	brlt	.+2      	; 0x2c6 <LCD_data+0x244>
     2c4:	43 c0       	rjmp	.+134    	; 0x34c <LCD_data+0x2ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2c6:	fe 01       	movw	r30, r28
     2c8:	ef 5a       	subi	r30, 0xAF	; 175
     2ca:	ff 4f       	sbci	r31, 0xFF	; 255
     2cc:	60 81       	ld	r22, Z
     2ce:	71 81       	ldd	r23, Z+1	; 0x01
     2d0:	82 81       	ldd	r24, Z+2	; 0x02
     2d2:	93 81       	ldd	r25, Z+3	; 0x03
     2d4:	20 e0       	ldi	r18, 0x00	; 0
     2d6:	30 e0       	ldi	r19, 0x00	; 0
     2d8:	40 e2       	ldi	r20, 0x20	; 32
     2da:	51 e4       	ldi	r21, 0x41	; 65
     2dc:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     2e0:	dc 01       	movw	r26, r24
     2e2:	cb 01       	movw	r24, r22
     2e4:	8e 01       	movw	r16, r28
     2e6:	05 5b       	subi	r16, 0xB5	; 181
     2e8:	1f 4f       	sbci	r17, 0xFF	; 255
     2ea:	bc 01       	movw	r22, r24
     2ec:	cd 01       	movw	r24, r26
     2ee:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     2f2:	dc 01       	movw	r26, r24
     2f4:	cb 01       	movw	r24, r22
     2f6:	f8 01       	movw	r30, r16
     2f8:	91 83       	std	Z+1, r25	; 0x01
     2fa:	80 83       	st	Z, r24
     2fc:	1f c0       	rjmp	.+62     	; 0x33c <LCD_data+0x2ba>
     2fe:	fe 01       	movw	r30, r28
     300:	e7 5b       	subi	r30, 0xB7	; 183
     302:	ff 4f       	sbci	r31, 0xFF	; 255
     304:	80 e9       	ldi	r24, 0x90	; 144
     306:	91 e0       	ldi	r25, 0x01	; 1
     308:	91 83       	std	Z+1, r25	; 0x01
     30a:	80 83       	st	Z, r24
     30c:	fe 01       	movw	r30, r28
     30e:	e7 5b       	subi	r30, 0xB7	; 183
     310:	ff 4f       	sbci	r31, 0xFF	; 255
     312:	80 81       	ld	r24, Z
     314:	91 81       	ldd	r25, Z+1	; 0x01
     316:	01 97       	sbiw	r24, 0x01	; 1
     318:	f1 f7       	brne	.-4      	; 0x316 <LCD_data+0x294>
     31a:	fe 01       	movw	r30, r28
     31c:	e7 5b       	subi	r30, 0xB7	; 183
     31e:	ff 4f       	sbci	r31, 0xFF	; 255
     320:	91 83       	std	Z+1, r25	; 0x01
     322:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     324:	de 01       	movw	r26, r28
     326:	a5 5b       	subi	r26, 0xB5	; 181
     328:	bf 4f       	sbci	r27, 0xFF	; 255
     32a:	fe 01       	movw	r30, r28
     32c:	e5 5b       	subi	r30, 0xB5	; 181
     32e:	ff 4f       	sbci	r31, 0xFF	; 255
     330:	80 81       	ld	r24, Z
     332:	91 81       	ldd	r25, Z+1	; 0x01
     334:	01 97       	sbiw	r24, 0x01	; 1
     336:	11 96       	adiw	r26, 0x01	; 1
     338:	9c 93       	st	X, r25
     33a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     33c:	fe 01       	movw	r30, r28
     33e:	e5 5b       	subi	r30, 0xB5	; 181
     340:	ff 4f       	sbci	r31, 0xFF	; 255
     342:	80 81       	ld	r24, Z
     344:	91 81       	ldd	r25, Z+1	; 0x01
     346:	00 97       	sbiw	r24, 0x00	; 0
     348:	d1 f6       	brne	.-76     	; 0x2fe <LCD_data+0x27c>
     34a:	27 c0       	rjmp	.+78     	; 0x39a <LCD_data+0x318>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     34c:	8e 01       	movw	r16, r28
     34e:	05 5b       	subi	r16, 0xB5	; 181
     350:	1f 4f       	sbci	r17, 0xFF	; 255
     352:	fe 01       	movw	r30, r28
     354:	e3 5b       	subi	r30, 0xB3	; 179
     356:	ff 4f       	sbci	r31, 0xFF	; 255
     358:	60 81       	ld	r22, Z
     35a:	71 81       	ldd	r23, Z+1	; 0x01
     35c:	82 81       	ldd	r24, Z+2	; 0x02
     35e:	93 81       	ldd	r25, Z+3	; 0x03
     360:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     364:	dc 01       	movw	r26, r24
     366:	cb 01       	movw	r24, r22
     368:	f8 01       	movw	r30, r16
     36a:	91 83       	std	Z+1, r25	; 0x01
     36c:	80 83       	st	Z, r24
     36e:	de 01       	movw	r26, r28
     370:	a9 5b       	subi	r26, 0xB9	; 185
     372:	bf 4f       	sbci	r27, 0xFF	; 255
     374:	fe 01       	movw	r30, r28
     376:	e5 5b       	subi	r30, 0xB5	; 181
     378:	ff 4f       	sbci	r31, 0xFF	; 255
     37a:	80 81       	ld	r24, Z
     37c:	91 81       	ldd	r25, Z+1	; 0x01
     37e:	8d 93       	st	X+, r24
     380:	9c 93       	st	X, r25
     382:	fe 01       	movw	r30, r28
     384:	e9 5b       	subi	r30, 0xB9	; 185
     386:	ff 4f       	sbci	r31, 0xFF	; 255
     388:	80 81       	ld	r24, Z
     38a:	91 81       	ldd	r25, Z+1	; 0x01
     38c:	01 97       	sbiw	r24, 0x01	; 1
     38e:	f1 f7       	brne	.-4      	; 0x38c <LCD_data+0x30a>
     390:	fe 01       	movw	r30, r28
     392:	e9 5b       	subi	r30, 0xB9	; 185
     394:	ff 4f       	sbci	r31, 0xFF	; 255
     396:	91 83       	std	Z+1, r25	; 0x01
     398:	80 83       	st	Z, r24
  _delay_ms(1);
  PORTC =data&0xf0;
     39a:	a5 e3       	ldi	r26, 0x35	; 53
     39c:	b0 e0       	ldi	r27, 0x00	; 0
     39e:	fe 01       	movw	r30, r28
     3a0:	ed 59       	subi	r30, 0x9D	; 157
     3a2:	ff 4f       	sbci	r31, 0xFF	; 255
     3a4:	80 81       	ld	r24, Z
     3a6:	80 7f       	andi	r24, 0xF0	; 240
     3a8:	8c 93       	st	X, r24
     3aa:	fe 01       	movw	r30, r28
     3ac:	ed 5b       	subi	r30, 0xBD	; 189
     3ae:	ff 4f       	sbci	r31, 0xFF	; 255
     3b0:	80 e0       	ldi	r24, 0x00	; 0
     3b2:	90 e0       	ldi	r25, 0x00	; 0
     3b4:	a0 e8       	ldi	r26, 0x80	; 128
     3b6:	bf e3       	ldi	r27, 0x3F	; 63
     3b8:	80 83       	st	Z, r24
     3ba:	91 83       	std	Z+1, r25	; 0x01
     3bc:	a2 83       	std	Z+2, r26	; 0x02
     3be:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     3c0:	8e 01       	movw	r16, r28
     3c2:	01 5c       	subi	r16, 0xC1	; 193
     3c4:	1f 4f       	sbci	r17, 0xFF	; 255
     3c6:	fe 01       	movw	r30, r28
     3c8:	ed 5b       	subi	r30, 0xBD	; 189
     3ca:	ff 4f       	sbci	r31, 0xFF	; 255
     3cc:	60 81       	ld	r22, Z
     3ce:	71 81       	ldd	r23, Z+1	; 0x01
     3d0:	82 81       	ldd	r24, Z+2	; 0x02
     3d2:	93 81       	ldd	r25, Z+3	; 0x03
     3d4:	20 e0       	ldi	r18, 0x00	; 0
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	4a e7       	ldi	r20, 0x7A	; 122
     3da:	55 e4       	ldi	r21, 0x45	; 69
     3dc:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     3e0:	dc 01       	movw	r26, r24
     3e2:	cb 01       	movw	r24, r22
     3e4:	f8 01       	movw	r30, r16
     3e6:	80 83       	st	Z, r24
     3e8:	91 83       	std	Z+1, r25	; 0x01
     3ea:	a2 83       	std	Z+2, r26	; 0x02
     3ec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     3ee:	fe 01       	movw	r30, r28
     3f0:	ff 96       	adiw	r30, 0x3f	; 63
     3f2:	60 81       	ld	r22, Z
     3f4:	71 81       	ldd	r23, Z+1	; 0x01
     3f6:	82 81       	ldd	r24, Z+2	; 0x02
     3f8:	93 81       	ldd	r25, Z+3	; 0x03
     3fa:	20 e0       	ldi	r18, 0x00	; 0
     3fc:	30 e0       	ldi	r19, 0x00	; 0
     3fe:	40 e8       	ldi	r20, 0x80	; 128
     400:	5f e3       	ldi	r21, 0x3F	; 63
     402:	0e 94 2f 0c 	call	0x185e	; 0x185e <__ltsf2>
     406:	88 23       	and	r24, r24
     408:	2c f4       	brge	.+10     	; 0x414 <LCD_data+0x392>
		__ticks = 1;
     40a:	81 e0       	ldi	r24, 0x01	; 1
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	9e af       	std	Y+62, r25	; 0x3e
     410:	8d af       	std	Y+61, r24	; 0x3d
     412:	46 c0       	rjmp	.+140    	; 0x4a0 <__stack+0x41>
	else if (__tmp > 65535)
     414:	fe 01       	movw	r30, r28
     416:	ff 96       	adiw	r30, 0x3f	; 63
     418:	60 81       	ld	r22, Z
     41a:	71 81       	ldd	r23, Z+1	; 0x01
     41c:	82 81       	ldd	r24, Z+2	; 0x02
     41e:	93 81       	ldd	r25, Z+3	; 0x03
     420:	20 e0       	ldi	r18, 0x00	; 0
     422:	3f ef       	ldi	r19, 0xFF	; 255
     424:	4f e7       	ldi	r20, 0x7F	; 127
     426:	57 e4       	ldi	r21, 0x47	; 71
     428:	0e 94 cf 0b 	call	0x179e	; 0x179e <__gtsf2>
     42c:	18 16       	cp	r1, r24
     42e:	64 f5       	brge	.+88     	; 0x488 <__stack+0x29>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     430:	fe 01       	movw	r30, r28
     432:	ed 5b       	subi	r30, 0xBD	; 189
     434:	ff 4f       	sbci	r31, 0xFF	; 255
     436:	60 81       	ld	r22, Z
     438:	71 81       	ldd	r23, Z+1	; 0x01
     43a:	82 81       	ldd	r24, Z+2	; 0x02
     43c:	93 81       	ldd	r25, Z+3	; 0x03
     43e:	20 e0       	ldi	r18, 0x00	; 0
     440:	30 e0       	ldi	r19, 0x00	; 0
     442:	40 e2       	ldi	r20, 0x20	; 32
     444:	51 e4       	ldi	r21, 0x41	; 65
     446:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     44a:	dc 01       	movw	r26, r24
     44c:	cb 01       	movw	r24, r22
     44e:	bc 01       	movw	r22, r24
     450:	cd 01       	movw	r24, r26
     452:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     456:	dc 01       	movw	r26, r24
     458:	cb 01       	movw	r24, r22
     45a:	9e af       	std	Y+62, r25	; 0x3e
     45c:	8d af       	std	Y+61, r24	; 0x3d
     45e:	0f c0       	rjmp	.+30     	; 0x47e <__stack+0x1f>
     460:	80 e9       	ldi	r24, 0x90	; 144
     462:	91 e0       	ldi	r25, 0x01	; 1
     464:	9c af       	std	Y+60, r25	; 0x3c
     466:	8b af       	std	Y+59, r24	; 0x3b
     468:	8b ad       	ldd	r24, Y+59	; 0x3b
     46a:	9c ad       	ldd	r25, Y+60	; 0x3c
     46c:	01 97       	sbiw	r24, 0x01	; 1
     46e:	f1 f7       	brne	.-4      	; 0x46c <__stack+0xd>
     470:	9c af       	std	Y+60, r25	; 0x3c
     472:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     474:	8d ad       	ldd	r24, Y+61	; 0x3d
     476:	9e ad       	ldd	r25, Y+62	; 0x3e
     478:	01 97       	sbiw	r24, 0x01	; 1
     47a:	9e af       	std	Y+62, r25	; 0x3e
     47c:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     47e:	8d ad       	ldd	r24, Y+61	; 0x3d
     480:	9e ad       	ldd	r25, Y+62	; 0x3e
     482:	00 97       	sbiw	r24, 0x00	; 0
     484:	69 f7       	brne	.-38     	; 0x460 <__stack+0x1>
     486:	16 c0       	rjmp	.+44     	; 0x4b4 <__stack+0x55>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     488:	fe 01       	movw	r30, r28
     48a:	ff 96       	adiw	r30, 0x3f	; 63
     48c:	60 81       	ld	r22, Z
     48e:	71 81       	ldd	r23, Z+1	; 0x01
     490:	82 81       	ldd	r24, Z+2	; 0x02
     492:	93 81       	ldd	r25, Z+3	; 0x03
     494:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     498:	dc 01       	movw	r26, r24
     49a:	cb 01       	movw	r24, r22
     49c:	9e af       	std	Y+62, r25	; 0x3e
     49e:	8d af       	std	Y+61, r24	; 0x3d
     4a0:	8d ad       	ldd	r24, Y+61	; 0x3d
     4a2:	9e ad       	ldd	r25, Y+62	; 0x3e
     4a4:	9a af       	std	Y+58, r25	; 0x3a
     4a6:	89 af       	std	Y+57, r24	; 0x39
     4a8:	89 ad       	ldd	r24, Y+57	; 0x39
     4aa:	9a ad       	ldd	r25, Y+58	; 0x3a
     4ac:	01 97       	sbiw	r24, 0x01	; 1
     4ae:	f1 f7       	brne	.-4      	; 0x4ac <__stack+0x4d>
     4b0:	9a af       	std	Y+58, r25	; 0x3a
     4b2:	89 af       	std	Y+57, r24	; 0x39
  _delay_ms(1);
  clear_E ;
     4b4:	a2 e3       	ldi	r26, 0x32	; 50
     4b6:	b0 e0       	ldi	r27, 0x00	; 0
     4b8:	e2 e3       	ldi	r30, 0x32	; 50
     4ba:	f0 e0       	ldi	r31, 0x00	; 0
     4bc:	80 81       	ld	r24, Z
     4be:	8f 7b       	andi	r24, 0xBF	; 191
     4c0:	8c 93       	st	X, r24
     4c2:	80 e0       	ldi	r24, 0x00	; 0
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	a0 e8       	ldi	r26, 0x80	; 128
     4c8:	bf e3       	ldi	r27, 0x3F	; 63
     4ca:	8d ab       	std	Y+53, r24	; 0x35
     4cc:	9e ab       	std	Y+54, r25	; 0x36
     4ce:	af ab       	std	Y+55, r26	; 0x37
     4d0:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     4d2:	6d a9       	ldd	r22, Y+53	; 0x35
     4d4:	7e a9       	ldd	r23, Y+54	; 0x36
     4d6:	8f a9       	ldd	r24, Y+55	; 0x37
     4d8:	98 ad       	ldd	r25, Y+56	; 0x38
     4da:	20 e0       	ldi	r18, 0x00	; 0
     4dc:	30 e0       	ldi	r19, 0x00	; 0
     4de:	4a e7       	ldi	r20, 0x7A	; 122
     4e0:	55 e4       	ldi	r21, 0x45	; 69
     4e2:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     4e6:	dc 01       	movw	r26, r24
     4e8:	cb 01       	movw	r24, r22
     4ea:	89 ab       	std	Y+49, r24	; 0x31
     4ec:	9a ab       	std	Y+50, r25	; 0x32
     4ee:	ab ab       	std	Y+51, r26	; 0x33
     4f0:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     4f2:	69 a9       	ldd	r22, Y+49	; 0x31
     4f4:	7a a9       	ldd	r23, Y+50	; 0x32
     4f6:	8b a9       	ldd	r24, Y+51	; 0x33
     4f8:	9c a9       	ldd	r25, Y+52	; 0x34
     4fa:	20 e0       	ldi	r18, 0x00	; 0
     4fc:	30 e0       	ldi	r19, 0x00	; 0
     4fe:	40 e8       	ldi	r20, 0x80	; 128
     500:	5f e3       	ldi	r21, 0x3F	; 63
     502:	0e 94 2f 0c 	call	0x185e	; 0x185e <__ltsf2>
     506:	88 23       	and	r24, r24
     508:	2c f4       	brge	.+10     	; 0x514 <__stack+0xb5>
		__ticks = 1;
     50a:	81 e0       	ldi	r24, 0x01	; 1
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	98 ab       	std	Y+48, r25	; 0x30
     510:	8f a7       	std	Y+47, r24	; 0x2f
     512:	3f c0       	rjmp	.+126    	; 0x592 <__stack+0x133>
	else if (__tmp > 65535)
     514:	69 a9       	ldd	r22, Y+49	; 0x31
     516:	7a a9       	ldd	r23, Y+50	; 0x32
     518:	8b a9       	ldd	r24, Y+51	; 0x33
     51a:	9c a9       	ldd	r25, Y+52	; 0x34
     51c:	20 e0       	ldi	r18, 0x00	; 0
     51e:	3f ef       	ldi	r19, 0xFF	; 255
     520:	4f e7       	ldi	r20, 0x7F	; 127
     522:	57 e4       	ldi	r21, 0x47	; 71
     524:	0e 94 cf 0b 	call	0x179e	; 0x179e <__gtsf2>
     528:	18 16       	cp	r1, r24
     52a:	4c f5       	brge	.+82     	; 0x57e <__stack+0x11f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     52c:	6d a9       	ldd	r22, Y+53	; 0x35
     52e:	7e a9       	ldd	r23, Y+54	; 0x36
     530:	8f a9       	ldd	r24, Y+55	; 0x37
     532:	98 ad       	ldd	r25, Y+56	; 0x38
     534:	20 e0       	ldi	r18, 0x00	; 0
     536:	30 e0       	ldi	r19, 0x00	; 0
     538:	40 e2       	ldi	r20, 0x20	; 32
     53a:	51 e4       	ldi	r21, 0x41	; 65
     53c:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     540:	dc 01       	movw	r26, r24
     542:	cb 01       	movw	r24, r22
     544:	bc 01       	movw	r22, r24
     546:	cd 01       	movw	r24, r26
     548:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     54c:	dc 01       	movw	r26, r24
     54e:	cb 01       	movw	r24, r22
     550:	98 ab       	std	Y+48, r25	; 0x30
     552:	8f a7       	std	Y+47, r24	; 0x2f
     554:	0f c0       	rjmp	.+30     	; 0x574 <__stack+0x115>
     556:	80 e9       	ldi	r24, 0x90	; 144
     558:	91 e0       	ldi	r25, 0x01	; 1
     55a:	9e a7       	std	Y+46, r25	; 0x2e
     55c:	8d a7       	std	Y+45, r24	; 0x2d
     55e:	8d a5       	ldd	r24, Y+45	; 0x2d
     560:	9e a5       	ldd	r25, Y+46	; 0x2e
     562:	01 97       	sbiw	r24, 0x01	; 1
     564:	f1 f7       	brne	.-4      	; 0x562 <__stack+0x103>
     566:	9e a7       	std	Y+46, r25	; 0x2e
     568:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     56a:	8f a5       	ldd	r24, Y+47	; 0x2f
     56c:	98 a9       	ldd	r25, Y+48	; 0x30
     56e:	01 97       	sbiw	r24, 0x01	; 1
     570:	98 ab       	std	Y+48, r25	; 0x30
     572:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     574:	8f a5       	ldd	r24, Y+47	; 0x2f
     576:	98 a9       	ldd	r25, Y+48	; 0x30
     578:	00 97       	sbiw	r24, 0x00	; 0
     57a:	69 f7       	brne	.-38     	; 0x556 <__stack+0xf7>
     57c:	14 c0       	rjmp	.+40     	; 0x5a6 <__stack+0x147>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     57e:	69 a9       	ldd	r22, Y+49	; 0x31
     580:	7a a9       	ldd	r23, Y+50	; 0x32
     582:	8b a9       	ldd	r24, Y+51	; 0x33
     584:	9c a9       	ldd	r25, Y+52	; 0x34
     586:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     58a:	dc 01       	movw	r26, r24
     58c:	cb 01       	movw	r24, r22
     58e:	98 ab       	std	Y+48, r25	; 0x30
     590:	8f a7       	std	Y+47, r24	; 0x2f
     592:	8f a5       	ldd	r24, Y+47	; 0x2f
     594:	98 a9       	ldd	r25, Y+48	; 0x30
     596:	9c a7       	std	Y+44, r25	; 0x2c
     598:	8b a7       	std	Y+43, r24	; 0x2b
     59a:	8b a5       	ldd	r24, Y+43	; 0x2b
     59c:	9c a5       	ldd	r25, Y+44	; 0x2c
     59e:	01 97       	sbiw	r24, 0x01	; 1
     5a0:	f1 f7       	brne	.-4      	; 0x59e <__stack+0x13f>
     5a2:	9c a7       	std	Y+44, r25	; 0x2c
     5a4:	8b a7       	std	Y+43, r24	; 0x2b
    _delay_ms(1);
    set_E;
     5a6:	a2 e3       	ldi	r26, 0x32	; 50
     5a8:	b0 e0       	ldi	r27, 0x00	; 0
     5aa:	e2 e3       	ldi	r30, 0x32	; 50
     5ac:	f0 e0       	ldi	r31, 0x00	; 0
     5ae:	80 81       	ld	r24, Z
     5b0:	80 64       	ori	r24, 0x40	; 64
     5b2:	8c 93       	st	X, r24
     5b4:	80 e0       	ldi	r24, 0x00	; 0
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	a0 e8       	ldi	r26, 0x80	; 128
     5ba:	bf e3       	ldi	r27, 0x3F	; 63
     5bc:	8f a3       	std	Y+39, r24	; 0x27
     5be:	98 a7       	std	Y+40, r25	; 0x28
     5c0:	a9 a7       	std	Y+41, r26	; 0x29
     5c2:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     5c4:	6f a1       	ldd	r22, Y+39	; 0x27
     5c6:	78 a5       	ldd	r23, Y+40	; 0x28
     5c8:	89 a5       	ldd	r24, Y+41	; 0x29
     5ca:	9a a5       	ldd	r25, Y+42	; 0x2a
     5cc:	20 e0       	ldi	r18, 0x00	; 0
     5ce:	30 e0       	ldi	r19, 0x00	; 0
     5d0:	4a e7       	ldi	r20, 0x7A	; 122
     5d2:	55 e4       	ldi	r21, 0x45	; 69
     5d4:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     5d8:	dc 01       	movw	r26, r24
     5da:	cb 01       	movw	r24, r22
     5dc:	8b a3       	std	Y+35, r24	; 0x23
     5de:	9c a3       	std	Y+36, r25	; 0x24
     5e0:	ad a3       	std	Y+37, r26	; 0x25
     5e2:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     5e4:	6b a1       	ldd	r22, Y+35	; 0x23
     5e6:	7c a1       	ldd	r23, Y+36	; 0x24
     5e8:	8d a1       	ldd	r24, Y+37	; 0x25
     5ea:	9e a1       	ldd	r25, Y+38	; 0x26
     5ec:	20 e0       	ldi	r18, 0x00	; 0
     5ee:	30 e0       	ldi	r19, 0x00	; 0
     5f0:	40 e8       	ldi	r20, 0x80	; 128
     5f2:	5f e3       	ldi	r21, 0x3F	; 63
     5f4:	0e 94 2f 0c 	call	0x185e	; 0x185e <__ltsf2>
     5f8:	88 23       	and	r24, r24
     5fa:	2c f4       	brge	.+10     	; 0x606 <__stack+0x1a7>
		__ticks = 1;
     5fc:	81 e0       	ldi	r24, 0x01	; 1
     5fe:	90 e0       	ldi	r25, 0x00	; 0
     600:	9a a3       	std	Y+34, r25	; 0x22
     602:	89 a3       	std	Y+33, r24	; 0x21
     604:	3f c0       	rjmp	.+126    	; 0x684 <__stack+0x225>
	else if (__tmp > 65535)
     606:	6b a1       	ldd	r22, Y+35	; 0x23
     608:	7c a1       	ldd	r23, Y+36	; 0x24
     60a:	8d a1       	ldd	r24, Y+37	; 0x25
     60c:	9e a1       	ldd	r25, Y+38	; 0x26
     60e:	20 e0       	ldi	r18, 0x00	; 0
     610:	3f ef       	ldi	r19, 0xFF	; 255
     612:	4f e7       	ldi	r20, 0x7F	; 127
     614:	57 e4       	ldi	r21, 0x47	; 71
     616:	0e 94 cf 0b 	call	0x179e	; 0x179e <__gtsf2>
     61a:	18 16       	cp	r1, r24
     61c:	4c f5       	brge	.+82     	; 0x670 <__stack+0x211>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     61e:	6f a1       	ldd	r22, Y+39	; 0x27
     620:	78 a5       	ldd	r23, Y+40	; 0x28
     622:	89 a5       	ldd	r24, Y+41	; 0x29
     624:	9a a5       	ldd	r25, Y+42	; 0x2a
     626:	20 e0       	ldi	r18, 0x00	; 0
     628:	30 e0       	ldi	r19, 0x00	; 0
     62a:	40 e2       	ldi	r20, 0x20	; 32
     62c:	51 e4       	ldi	r21, 0x41	; 65
     62e:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     632:	dc 01       	movw	r26, r24
     634:	cb 01       	movw	r24, r22
     636:	bc 01       	movw	r22, r24
     638:	cd 01       	movw	r24, r26
     63a:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     63e:	dc 01       	movw	r26, r24
     640:	cb 01       	movw	r24, r22
     642:	9a a3       	std	Y+34, r25	; 0x22
     644:	89 a3       	std	Y+33, r24	; 0x21
     646:	0f c0       	rjmp	.+30     	; 0x666 <__stack+0x207>
     648:	80 e9       	ldi	r24, 0x90	; 144
     64a:	91 e0       	ldi	r25, 0x01	; 1
     64c:	98 a3       	std	Y+32, r25	; 0x20
     64e:	8f 8f       	std	Y+31, r24	; 0x1f
     650:	8f 8d       	ldd	r24, Y+31	; 0x1f
     652:	98 a1       	ldd	r25, Y+32	; 0x20
     654:	01 97       	sbiw	r24, 0x01	; 1
     656:	f1 f7       	brne	.-4      	; 0x654 <__stack+0x1f5>
     658:	98 a3       	std	Y+32, r25	; 0x20
     65a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     65c:	89 a1       	ldd	r24, Y+33	; 0x21
     65e:	9a a1       	ldd	r25, Y+34	; 0x22
     660:	01 97       	sbiw	r24, 0x01	; 1
     662:	9a a3       	std	Y+34, r25	; 0x22
     664:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     666:	89 a1       	ldd	r24, Y+33	; 0x21
     668:	9a a1       	ldd	r25, Y+34	; 0x22
     66a:	00 97       	sbiw	r24, 0x00	; 0
     66c:	69 f7       	brne	.-38     	; 0x648 <__stack+0x1e9>
     66e:	14 c0       	rjmp	.+40     	; 0x698 <__stack+0x239>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     670:	6b a1       	ldd	r22, Y+35	; 0x23
     672:	7c a1       	ldd	r23, Y+36	; 0x24
     674:	8d a1       	ldd	r24, Y+37	; 0x25
     676:	9e a1       	ldd	r25, Y+38	; 0x26
     678:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     67c:	dc 01       	movw	r26, r24
     67e:	cb 01       	movw	r24, r22
     680:	9a a3       	std	Y+34, r25	; 0x22
     682:	89 a3       	std	Y+33, r24	; 0x21
     684:	89 a1       	ldd	r24, Y+33	; 0x21
     686:	9a a1       	ldd	r25, Y+34	; 0x22
     688:	9e 8f       	std	Y+30, r25	; 0x1e
     68a:	8d 8f       	std	Y+29, r24	; 0x1d
     68c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     68e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     690:	01 97       	sbiw	r24, 0x01	; 1
     692:	f1 f7       	brne	.-4      	; 0x690 <__stack+0x231>
     694:	9e 8f       	std	Y+30, r25	; 0x1e
     696:	8d 8f       	std	Y+29, r24	; 0x1d
     _delay_ms(1);
   PORTC =(data<<4)&0xf0;
     698:	a5 e3       	ldi	r26, 0x35	; 53
     69a:	b0 e0       	ldi	r27, 0x00	; 0
     69c:	fe 01       	movw	r30, r28
     69e:	ed 59       	subi	r30, 0x9D	; 157
     6a0:	ff 4f       	sbci	r31, 0xFF	; 255
     6a2:	80 81       	ld	r24, Z
     6a4:	88 2f       	mov	r24, r24
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	82 95       	swap	r24
     6aa:	92 95       	swap	r25
     6ac:	90 7f       	andi	r25, 0xF0	; 240
     6ae:	98 27       	eor	r25, r24
     6b0:	80 7f       	andi	r24, 0xF0	; 240
     6b2:	98 27       	eor	r25, r24
     6b4:	8c 93       	st	X, r24
     6b6:	80 e0       	ldi	r24, 0x00	; 0
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	a0 e8       	ldi	r26, 0x80	; 128
     6bc:	bf e3       	ldi	r27, 0x3F	; 63
     6be:	89 8f       	std	Y+25, r24	; 0x19
     6c0:	9a 8f       	std	Y+26, r25	; 0x1a
     6c2:	ab 8f       	std	Y+27, r26	; 0x1b
     6c4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     6c6:	69 8d       	ldd	r22, Y+25	; 0x19
     6c8:	7a 8d       	ldd	r23, Y+26	; 0x1a
     6ca:	8b 8d       	ldd	r24, Y+27	; 0x1b
     6cc:	9c 8d       	ldd	r25, Y+28	; 0x1c
     6ce:	20 e0       	ldi	r18, 0x00	; 0
     6d0:	30 e0       	ldi	r19, 0x00	; 0
     6d2:	4a e7       	ldi	r20, 0x7A	; 122
     6d4:	55 e4       	ldi	r21, 0x45	; 69
     6d6:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     6da:	dc 01       	movw	r26, r24
     6dc:	cb 01       	movw	r24, r22
     6de:	8d 8b       	std	Y+21, r24	; 0x15
     6e0:	9e 8b       	std	Y+22, r25	; 0x16
     6e2:	af 8b       	std	Y+23, r26	; 0x17
     6e4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     6e6:	6d 89       	ldd	r22, Y+21	; 0x15
     6e8:	7e 89       	ldd	r23, Y+22	; 0x16
     6ea:	8f 89       	ldd	r24, Y+23	; 0x17
     6ec:	98 8d       	ldd	r25, Y+24	; 0x18
     6ee:	20 e0       	ldi	r18, 0x00	; 0
     6f0:	30 e0       	ldi	r19, 0x00	; 0
     6f2:	40 e8       	ldi	r20, 0x80	; 128
     6f4:	5f e3       	ldi	r21, 0x3F	; 63
     6f6:	0e 94 2f 0c 	call	0x185e	; 0x185e <__ltsf2>
     6fa:	88 23       	and	r24, r24
     6fc:	2c f4       	brge	.+10     	; 0x708 <__stack+0x2a9>
		__ticks = 1;
     6fe:	81 e0       	ldi	r24, 0x01	; 1
     700:	90 e0       	ldi	r25, 0x00	; 0
     702:	9c 8b       	std	Y+20, r25	; 0x14
     704:	8b 8b       	std	Y+19, r24	; 0x13
     706:	3f c0       	rjmp	.+126    	; 0x786 <__stack+0x327>
	else if (__tmp > 65535)
     708:	6d 89       	ldd	r22, Y+21	; 0x15
     70a:	7e 89       	ldd	r23, Y+22	; 0x16
     70c:	8f 89       	ldd	r24, Y+23	; 0x17
     70e:	98 8d       	ldd	r25, Y+24	; 0x18
     710:	20 e0       	ldi	r18, 0x00	; 0
     712:	3f ef       	ldi	r19, 0xFF	; 255
     714:	4f e7       	ldi	r20, 0x7F	; 127
     716:	57 e4       	ldi	r21, 0x47	; 71
     718:	0e 94 cf 0b 	call	0x179e	; 0x179e <__gtsf2>
     71c:	18 16       	cp	r1, r24
     71e:	4c f5       	brge	.+82     	; 0x772 <__stack+0x313>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     720:	69 8d       	ldd	r22, Y+25	; 0x19
     722:	7a 8d       	ldd	r23, Y+26	; 0x1a
     724:	8b 8d       	ldd	r24, Y+27	; 0x1b
     726:	9c 8d       	ldd	r25, Y+28	; 0x1c
     728:	20 e0       	ldi	r18, 0x00	; 0
     72a:	30 e0       	ldi	r19, 0x00	; 0
     72c:	40 e2       	ldi	r20, 0x20	; 32
     72e:	51 e4       	ldi	r21, 0x41	; 65
     730:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     734:	dc 01       	movw	r26, r24
     736:	cb 01       	movw	r24, r22
     738:	bc 01       	movw	r22, r24
     73a:	cd 01       	movw	r24, r26
     73c:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     740:	dc 01       	movw	r26, r24
     742:	cb 01       	movw	r24, r22
     744:	9c 8b       	std	Y+20, r25	; 0x14
     746:	8b 8b       	std	Y+19, r24	; 0x13
     748:	0f c0       	rjmp	.+30     	; 0x768 <__stack+0x309>
     74a:	80 e9       	ldi	r24, 0x90	; 144
     74c:	91 e0       	ldi	r25, 0x01	; 1
     74e:	9a 8b       	std	Y+18, r25	; 0x12
     750:	89 8b       	std	Y+17, r24	; 0x11
     752:	89 89       	ldd	r24, Y+17	; 0x11
     754:	9a 89       	ldd	r25, Y+18	; 0x12
     756:	01 97       	sbiw	r24, 0x01	; 1
     758:	f1 f7       	brne	.-4      	; 0x756 <__stack+0x2f7>
     75a:	9a 8b       	std	Y+18, r25	; 0x12
     75c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     75e:	8b 89       	ldd	r24, Y+19	; 0x13
     760:	9c 89       	ldd	r25, Y+20	; 0x14
     762:	01 97       	sbiw	r24, 0x01	; 1
     764:	9c 8b       	std	Y+20, r25	; 0x14
     766:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     768:	8b 89       	ldd	r24, Y+19	; 0x13
     76a:	9c 89       	ldd	r25, Y+20	; 0x14
     76c:	00 97       	sbiw	r24, 0x00	; 0
     76e:	69 f7       	brne	.-38     	; 0x74a <__stack+0x2eb>
     770:	14 c0       	rjmp	.+40     	; 0x79a <__stack+0x33b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     772:	6d 89       	ldd	r22, Y+21	; 0x15
     774:	7e 89       	ldd	r23, Y+22	; 0x16
     776:	8f 89       	ldd	r24, Y+23	; 0x17
     778:	98 8d       	ldd	r25, Y+24	; 0x18
     77a:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     77e:	dc 01       	movw	r26, r24
     780:	cb 01       	movw	r24, r22
     782:	9c 8b       	std	Y+20, r25	; 0x14
     784:	8b 8b       	std	Y+19, r24	; 0x13
     786:	8b 89       	ldd	r24, Y+19	; 0x13
     788:	9c 89       	ldd	r25, Y+20	; 0x14
     78a:	98 8b       	std	Y+16, r25	; 0x10
     78c:	8f 87       	std	Y+15, r24	; 0x0f
     78e:	8f 85       	ldd	r24, Y+15	; 0x0f
     790:	98 89       	ldd	r25, Y+16	; 0x10
     792:	01 97       	sbiw	r24, 0x01	; 1
     794:	f1 f7       	brne	.-4      	; 0x792 <__stack+0x333>
     796:	98 8b       	std	Y+16, r25	; 0x10
     798:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_ms(1);
  clear_E;
     79a:	a2 e3       	ldi	r26, 0x32	; 50
     79c:	b0 e0       	ldi	r27, 0x00	; 0
     79e:	e2 e3       	ldi	r30, 0x32	; 50
     7a0:	f0 e0       	ldi	r31, 0x00	; 0
     7a2:	80 81       	ld	r24, Z
     7a4:	8f 7b       	andi	r24, 0xBF	; 191
     7a6:	8c 93       	st	X, r24
     7a8:	80 e0       	ldi	r24, 0x00	; 0
     7aa:	90 e0       	ldi	r25, 0x00	; 0
     7ac:	a0 e8       	ldi	r26, 0x80	; 128
     7ae:	bf e3       	ldi	r27, 0x3F	; 63
     7b0:	8b 87       	std	Y+11, r24	; 0x0b
     7b2:	9c 87       	std	Y+12, r25	; 0x0c
     7b4:	ad 87       	std	Y+13, r26	; 0x0d
     7b6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     7b8:	6b 85       	ldd	r22, Y+11	; 0x0b
     7ba:	7c 85       	ldd	r23, Y+12	; 0x0c
     7bc:	8d 85       	ldd	r24, Y+13	; 0x0d
     7be:	9e 85       	ldd	r25, Y+14	; 0x0e
     7c0:	20 e0       	ldi	r18, 0x00	; 0
     7c2:	30 e0       	ldi	r19, 0x00	; 0
     7c4:	4a e7       	ldi	r20, 0x7A	; 122
     7c6:	55 e4       	ldi	r21, 0x45	; 69
     7c8:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     7cc:	dc 01       	movw	r26, r24
     7ce:	cb 01       	movw	r24, r22
     7d0:	8f 83       	std	Y+7, r24	; 0x07
     7d2:	98 87       	std	Y+8, r25	; 0x08
     7d4:	a9 87       	std	Y+9, r26	; 0x09
     7d6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     7d8:	6f 81       	ldd	r22, Y+7	; 0x07
     7da:	78 85       	ldd	r23, Y+8	; 0x08
     7dc:	89 85       	ldd	r24, Y+9	; 0x09
     7de:	9a 85       	ldd	r25, Y+10	; 0x0a
     7e0:	20 e0       	ldi	r18, 0x00	; 0
     7e2:	30 e0       	ldi	r19, 0x00	; 0
     7e4:	40 e8       	ldi	r20, 0x80	; 128
     7e6:	5f e3       	ldi	r21, 0x3F	; 63
     7e8:	0e 94 2f 0c 	call	0x185e	; 0x185e <__ltsf2>
     7ec:	88 23       	and	r24, r24
     7ee:	2c f4       	brge	.+10     	; 0x7fa <__stack+0x39b>
		__ticks = 1;
     7f0:	81 e0       	ldi	r24, 0x01	; 1
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	9e 83       	std	Y+6, r25	; 0x06
     7f6:	8d 83       	std	Y+5, r24	; 0x05
     7f8:	3f c0       	rjmp	.+126    	; 0x878 <__stack+0x419>
	else if (__tmp > 65535)
     7fa:	6f 81       	ldd	r22, Y+7	; 0x07
     7fc:	78 85       	ldd	r23, Y+8	; 0x08
     7fe:	89 85       	ldd	r24, Y+9	; 0x09
     800:	9a 85       	ldd	r25, Y+10	; 0x0a
     802:	20 e0       	ldi	r18, 0x00	; 0
     804:	3f ef       	ldi	r19, 0xFF	; 255
     806:	4f e7       	ldi	r20, 0x7F	; 127
     808:	57 e4       	ldi	r21, 0x47	; 71
     80a:	0e 94 cf 0b 	call	0x179e	; 0x179e <__gtsf2>
     80e:	18 16       	cp	r1, r24
     810:	4c f5       	brge	.+82     	; 0x864 <__stack+0x405>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     812:	6b 85       	ldd	r22, Y+11	; 0x0b
     814:	7c 85       	ldd	r23, Y+12	; 0x0c
     816:	8d 85       	ldd	r24, Y+13	; 0x0d
     818:	9e 85       	ldd	r25, Y+14	; 0x0e
     81a:	20 e0       	ldi	r18, 0x00	; 0
     81c:	30 e0       	ldi	r19, 0x00	; 0
     81e:	40 e2       	ldi	r20, 0x20	; 32
     820:	51 e4       	ldi	r21, 0x41	; 65
     822:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     826:	dc 01       	movw	r26, r24
     828:	cb 01       	movw	r24, r22
     82a:	bc 01       	movw	r22, r24
     82c:	cd 01       	movw	r24, r26
     82e:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     832:	dc 01       	movw	r26, r24
     834:	cb 01       	movw	r24, r22
     836:	9e 83       	std	Y+6, r25	; 0x06
     838:	8d 83       	std	Y+5, r24	; 0x05
     83a:	0f c0       	rjmp	.+30     	; 0x85a <__stack+0x3fb>
     83c:	80 e9       	ldi	r24, 0x90	; 144
     83e:	91 e0       	ldi	r25, 0x01	; 1
     840:	9c 83       	std	Y+4, r25	; 0x04
     842:	8b 83       	std	Y+3, r24	; 0x03
     844:	8b 81       	ldd	r24, Y+3	; 0x03
     846:	9c 81       	ldd	r25, Y+4	; 0x04
     848:	01 97       	sbiw	r24, 0x01	; 1
     84a:	f1 f7       	brne	.-4      	; 0x848 <__stack+0x3e9>
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     850:	8d 81       	ldd	r24, Y+5	; 0x05
     852:	9e 81       	ldd	r25, Y+6	; 0x06
     854:	01 97       	sbiw	r24, 0x01	; 1
     856:	9e 83       	std	Y+6, r25	; 0x06
     858:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     85a:	8d 81       	ldd	r24, Y+5	; 0x05
     85c:	9e 81       	ldd	r25, Y+6	; 0x06
     85e:	00 97       	sbiw	r24, 0x00	; 0
     860:	69 f7       	brne	.-38     	; 0x83c <__stack+0x3dd>
     862:	14 c0       	rjmp	.+40     	; 0x88c <__stack+0x42d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     864:	6f 81       	ldd	r22, Y+7	; 0x07
     866:	78 85       	ldd	r23, Y+8	; 0x08
     868:	89 85       	ldd	r24, Y+9	; 0x09
     86a:	9a 85       	ldd	r25, Y+10	; 0x0a
     86c:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     870:	dc 01       	movw	r26, r24
     872:	cb 01       	movw	r24, r22
     874:	9e 83       	std	Y+6, r25	; 0x06
     876:	8d 83       	std	Y+5, r24	; 0x05
     878:	8d 81       	ldd	r24, Y+5	; 0x05
     87a:	9e 81       	ldd	r25, Y+6	; 0x06
     87c:	9a 83       	std	Y+2, r25	; 0x02
     87e:	89 83       	std	Y+1, r24	; 0x01
     880:	89 81       	ldd	r24, Y+1	; 0x01
     882:	9a 81       	ldd	r25, Y+2	; 0x02
     884:	01 97       	sbiw	r24, 0x01	; 1
     886:	f1 f7       	brne	.-4      	; 0x884 <__stack+0x425>
     888:	9a 83       	std	Y+2, r25	; 0x02
     88a:	89 83       	std	Y+1, r24	; 0x01
  _delay_ms(1);
}
     88c:	cd 59       	subi	r28, 0x9D	; 157
     88e:	df 4f       	sbci	r29, 0xFF	; 255
     890:	0f b6       	in	r0, 0x3f	; 63
     892:	f8 94       	cli
     894:	de bf       	out	0x3e, r29	; 62
     896:	0f be       	out	0x3f, r0	; 63
     898:	cd bf       	out	0x3d, r28	; 61
     89a:	cf 91       	pop	r28
     89c:	df 91       	pop	r29
     89e:	1f 91       	pop	r17
     8a0:	0f 91       	pop	r16
     8a2:	08 95       	ret

000008a4 <LCD_cmd>:
void LCD_cmd(unsigned char cmd)
{
     8a4:	0f 93       	push	r16
     8a6:	1f 93       	push	r17
     8a8:	df 93       	push	r29
     8aa:	cf 93       	push	r28
     8ac:	cd b7       	in	r28, 0x3d	; 61
     8ae:	de b7       	in	r29, 0x3e	; 62
     8b0:	c3 56       	subi	r28, 0x63	; 99
     8b2:	d0 40       	sbci	r29, 0x00	; 0
     8b4:	0f b6       	in	r0, 0x3f	; 63
     8b6:	f8 94       	cli
     8b8:	de bf       	out	0x3e, r29	; 62
     8ba:	0f be       	out	0x3f, r0	; 63
     8bc:	cd bf       	out	0x3d, r28	; 61
     8be:	fe 01       	movw	r30, r28
     8c0:	ed 59       	subi	r30, 0x9D	; 157
     8c2:	ff 4f       	sbci	r31, 0xFF	; 255
     8c4:	80 83       	st	Z, r24
  clear_RS;
     8c6:	a2 e3       	ldi	r26, 0x32	; 50
     8c8:	b0 e0       	ldi	r27, 0x00	; 0
     8ca:	e2 e3       	ldi	r30, 0x32	; 50
     8cc:	f0 e0       	ldi	r31, 0x00	; 0
     8ce:	80 81       	ld	r24, Z
     8d0:	8f 7e       	andi	r24, 0xEF	; 239
     8d2:	8c 93       	st	X, r24
  clear_RW;
     8d4:	a2 e3       	ldi	r26, 0x32	; 50
     8d6:	b0 e0       	ldi	r27, 0x00	; 0
     8d8:	e2 e3       	ldi	r30, 0x32	; 50
     8da:	f0 e0       	ldi	r31, 0x00	; 0
     8dc:	80 81       	ld	r24, Z
     8de:	8f 7d       	andi	r24, 0xDF	; 223
     8e0:	8c 93       	st	X, r24
     8e2:	fe 01       	movw	r30, r28
     8e4:	e1 5a       	subi	r30, 0xA1	; 161
     8e6:	ff 4f       	sbci	r31, 0xFF	; 255
     8e8:	80 e0       	ldi	r24, 0x00	; 0
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	a0 e8       	ldi	r26, 0x80	; 128
     8ee:	bf e3       	ldi	r27, 0x3F	; 63
     8f0:	80 83       	st	Z, r24
     8f2:	91 83       	std	Z+1, r25	; 0x01
     8f4:	a2 83       	std	Z+2, r26	; 0x02
     8f6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     8f8:	8e 01       	movw	r16, r28
     8fa:	05 5a       	subi	r16, 0xA5	; 165
     8fc:	1f 4f       	sbci	r17, 0xFF	; 255
     8fe:	fe 01       	movw	r30, r28
     900:	e1 5a       	subi	r30, 0xA1	; 161
     902:	ff 4f       	sbci	r31, 0xFF	; 255
     904:	60 81       	ld	r22, Z
     906:	71 81       	ldd	r23, Z+1	; 0x01
     908:	82 81       	ldd	r24, Z+2	; 0x02
     90a:	93 81       	ldd	r25, Z+3	; 0x03
     90c:	20 e0       	ldi	r18, 0x00	; 0
     90e:	30 e0       	ldi	r19, 0x00	; 0
     910:	4a e7       	ldi	r20, 0x7A	; 122
     912:	55 e4       	ldi	r21, 0x45	; 69
     914:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     918:	dc 01       	movw	r26, r24
     91a:	cb 01       	movw	r24, r22
     91c:	f8 01       	movw	r30, r16
     91e:	80 83       	st	Z, r24
     920:	91 83       	std	Z+1, r25	; 0x01
     922:	a2 83       	std	Z+2, r26	; 0x02
     924:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     926:	fe 01       	movw	r30, r28
     928:	e5 5a       	subi	r30, 0xA5	; 165
     92a:	ff 4f       	sbci	r31, 0xFF	; 255
     92c:	60 81       	ld	r22, Z
     92e:	71 81       	ldd	r23, Z+1	; 0x01
     930:	82 81       	ldd	r24, Z+2	; 0x02
     932:	93 81       	ldd	r25, Z+3	; 0x03
     934:	20 e0       	ldi	r18, 0x00	; 0
     936:	30 e0       	ldi	r19, 0x00	; 0
     938:	40 e8       	ldi	r20, 0x80	; 128
     93a:	5f e3       	ldi	r21, 0x3F	; 63
     93c:	0e 94 2f 0c 	call	0x185e	; 0x185e <__ltsf2>
     940:	88 23       	and	r24, r24
     942:	44 f4       	brge	.+16     	; 0x954 <LCD_cmd+0xb0>
		__ticks = 1;
     944:	fe 01       	movw	r30, r28
     946:	e7 5a       	subi	r30, 0xA7	; 167
     948:	ff 4f       	sbci	r31, 0xFF	; 255
     94a:	81 e0       	ldi	r24, 0x01	; 1
     94c:	90 e0       	ldi	r25, 0x00	; 0
     94e:	91 83       	std	Z+1, r25	; 0x01
     950:	80 83       	st	Z, r24
     952:	64 c0       	rjmp	.+200    	; 0xa1c <LCD_cmd+0x178>
	else if (__tmp > 65535)
     954:	fe 01       	movw	r30, r28
     956:	e5 5a       	subi	r30, 0xA5	; 165
     958:	ff 4f       	sbci	r31, 0xFF	; 255
     95a:	60 81       	ld	r22, Z
     95c:	71 81       	ldd	r23, Z+1	; 0x01
     95e:	82 81       	ldd	r24, Z+2	; 0x02
     960:	93 81       	ldd	r25, Z+3	; 0x03
     962:	20 e0       	ldi	r18, 0x00	; 0
     964:	3f ef       	ldi	r19, 0xFF	; 255
     966:	4f e7       	ldi	r20, 0x7F	; 127
     968:	57 e4       	ldi	r21, 0x47	; 71
     96a:	0e 94 cf 0b 	call	0x179e	; 0x179e <__gtsf2>
     96e:	18 16       	cp	r1, r24
     970:	0c f0       	brlt	.+2      	; 0x974 <LCD_cmd+0xd0>
     972:	43 c0       	rjmp	.+134    	; 0x9fa <LCD_cmd+0x156>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     974:	fe 01       	movw	r30, r28
     976:	e1 5a       	subi	r30, 0xA1	; 161
     978:	ff 4f       	sbci	r31, 0xFF	; 255
     97a:	60 81       	ld	r22, Z
     97c:	71 81       	ldd	r23, Z+1	; 0x01
     97e:	82 81       	ldd	r24, Z+2	; 0x02
     980:	93 81       	ldd	r25, Z+3	; 0x03
     982:	20 e0       	ldi	r18, 0x00	; 0
     984:	30 e0       	ldi	r19, 0x00	; 0
     986:	40 e2       	ldi	r20, 0x20	; 32
     988:	51 e4       	ldi	r21, 0x41	; 65
     98a:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     98e:	dc 01       	movw	r26, r24
     990:	cb 01       	movw	r24, r22
     992:	8e 01       	movw	r16, r28
     994:	07 5a       	subi	r16, 0xA7	; 167
     996:	1f 4f       	sbci	r17, 0xFF	; 255
     998:	bc 01       	movw	r22, r24
     99a:	cd 01       	movw	r24, r26
     99c:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     9a0:	dc 01       	movw	r26, r24
     9a2:	cb 01       	movw	r24, r22
     9a4:	f8 01       	movw	r30, r16
     9a6:	91 83       	std	Z+1, r25	; 0x01
     9a8:	80 83       	st	Z, r24
     9aa:	1f c0       	rjmp	.+62     	; 0x9ea <LCD_cmd+0x146>
     9ac:	fe 01       	movw	r30, r28
     9ae:	e9 5a       	subi	r30, 0xA9	; 169
     9b0:	ff 4f       	sbci	r31, 0xFF	; 255
     9b2:	80 e9       	ldi	r24, 0x90	; 144
     9b4:	91 e0       	ldi	r25, 0x01	; 1
     9b6:	91 83       	std	Z+1, r25	; 0x01
     9b8:	80 83       	st	Z, r24
     9ba:	fe 01       	movw	r30, r28
     9bc:	e9 5a       	subi	r30, 0xA9	; 169
     9be:	ff 4f       	sbci	r31, 0xFF	; 255
     9c0:	80 81       	ld	r24, Z
     9c2:	91 81       	ldd	r25, Z+1	; 0x01
     9c4:	01 97       	sbiw	r24, 0x01	; 1
     9c6:	f1 f7       	brne	.-4      	; 0x9c4 <LCD_cmd+0x120>
     9c8:	fe 01       	movw	r30, r28
     9ca:	e9 5a       	subi	r30, 0xA9	; 169
     9cc:	ff 4f       	sbci	r31, 0xFF	; 255
     9ce:	91 83       	std	Z+1, r25	; 0x01
     9d0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9d2:	de 01       	movw	r26, r28
     9d4:	a7 5a       	subi	r26, 0xA7	; 167
     9d6:	bf 4f       	sbci	r27, 0xFF	; 255
     9d8:	fe 01       	movw	r30, r28
     9da:	e7 5a       	subi	r30, 0xA7	; 167
     9dc:	ff 4f       	sbci	r31, 0xFF	; 255
     9de:	80 81       	ld	r24, Z
     9e0:	91 81       	ldd	r25, Z+1	; 0x01
     9e2:	01 97       	sbiw	r24, 0x01	; 1
     9e4:	11 96       	adiw	r26, 0x01	; 1
     9e6:	9c 93       	st	X, r25
     9e8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9ea:	fe 01       	movw	r30, r28
     9ec:	e7 5a       	subi	r30, 0xA7	; 167
     9ee:	ff 4f       	sbci	r31, 0xFF	; 255
     9f0:	80 81       	ld	r24, Z
     9f2:	91 81       	ldd	r25, Z+1	; 0x01
     9f4:	00 97       	sbiw	r24, 0x00	; 0
     9f6:	d1 f6       	brne	.-76     	; 0x9ac <LCD_cmd+0x108>
     9f8:	27 c0       	rjmp	.+78     	; 0xa48 <LCD_cmd+0x1a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     9fa:	8e 01       	movw	r16, r28
     9fc:	07 5a       	subi	r16, 0xA7	; 167
     9fe:	1f 4f       	sbci	r17, 0xFF	; 255
     a00:	fe 01       	movw	r30, r28
     a02:	e5 5a       	subi	r30, 0xA5	; 165
     a04:	ff 4f       	sbci	r31, 0xFF	; 255
     a06:	60 81       	ld	r22, Z
     a08:	71 81       	ldd	r23, Z+1	; 0x01
     a0a:	82 81       	ldd	r24, Z+2	; 0x02
     a0c:	93 81       	ldd	r25, Z+3	; 0x03
     a0e:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     a12:	dc 01       	movw	r26, r24
     a14:	cb 01       	movw	r24, r22
     a16:	f8 01       	movw	r30, r16
     a18:	91 83       	std	Z+1, r25	; 0x01
     a1a:	80 83       	st	Z, r24
     a1c:	de 01       	movw	r26, r28
     a1e:	ab 5a       	subi	r26, 0xAB	; 171
     a20:	bf 4f       	sbci	r27, 0xFF	; 255
     a22:	fe 01       	movw	r30, r28
     a24:	e7 5a       	subi	r30, 0xA7	; 167
     a26:	ff 4f       	sbci	r31, 0xFF	; 255
     a28:	80 81       	ld	r24, Z
     a2a:	91 81       	ldd	r25, Z+1	; 0x01
     a2c:	8d 93       	st	X+, r24
     a2e:	9c 93       	st	X, r25
     a30:	fe 01       	movw	r30, r28
     a32:	eb 5a       	subi	r30, 0xAB	; 171
     a34:	ff 4f       	sbci	r31, 0xFF	; 255
     a36:	80 81       	ld	r24, Z
     a38:	91 81       	ldd	r25, Z+1	; 0x01
     a3a:	01 97       	sbiw	r24, 0x01	; 1
     a3c:	f1 f7       	brne	.-4      	; 0xa3a <LCD_cmd+0x196>
     a3e:	fe 01       	movw	r30, r28
     a40:	eb 5a       	subi	r30, 0xAB	; 171
     a42:	ff 4f       	sbci	r31, 0xFF	; 255
     a44:	91 83       	std	Z+1, r25	; 0x01
     a46:	80 83       	st	Z, r24
  _delay_ms(1);
  set_E;
     a48:	a2 e3       	ldi	r26, 0x32	; 50
     a4a:	b0 e0       	ldi	r27, 0x00	; 0
     a4c:	e2 e3       	ldi	r30, 0x32	; 50
     a4e:	f0 e0       	ldi	r31, 0x00	; 0
     a50:	80 81       	ld	r24, Z
     a52:	80 64       	ori	r24, 0x40	; 64
     a54:	8c 93       	st	X, r24
     a56:	fe 01       	movw	r30, r28
     a58:	ef 5a       	subi	r30, 0xAF	; 175
     a5a:	ff 4f       	sbci	r31, 0xFF	; 255
     a5c:	80 e0       	ldi	r24, 0x00	; 0
     a5e:	90 e0       	ldi	r25, 0x00	; 0
     a60:	a0 e8       	ldi	r26, 0x80	; 128
     a62:	bf e3       	ldi	r27, 0x3F	; 63
     a64:	80 83       	st	Z, r24
     a66:	91 83       	std	Z+1, r25	; 0x01
     a68:	a2 83       	std	Z+2, r26	; 0x02
     a6a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     a6c:	8e 01       	movw	r16, r28
     a6e:	03 5b       	subi	r16, 0xB3	; 179
     a70:	1f 4f       	sbci	r17, 0xFF	; 255
     a72:	fe 01       	movw	r30, r28
     a74:	ef 5a       	subi	r30, 0xAF	; 175
     a76:	ff 4f       	sbci	r31, 0xFF	; 255
     a78:	60 81       	ld	r22, Z
     a7a:	71 81       	ldd	r23, Z+1	; 0x01
     a7c:	82 81       	ldd	r24, Z+2	; 0x02
     a7e:	93 81       	ldd	r25, Z+3	; 0x03
     a80:	20 e0       	ldi	r18, 0x00	; 0
     a82:	30 e0       	ldi	r19, 0x00	; 0
     a84:	4a e7       	ldi	r20, 0x7A	; 122
     a86:	55 e4       	ldi	r21, 0x45	; 69
     a88:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     a8c:	dc 01       	movw	r26, r24
     a8e:	cb 01       	movw	r24, r22
     a90:	f8 01       	movw	r30, r16
     a92:	80 83       	st	Z, r24
     a94:	91 83       	std	Z+1, r25	; 0x01
     a96:	a2 83       	std	Z+2, r26	; 0x02
     a98:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     a9a:	fe 01       	movw	r30, r28
     a9c:	e3 5b       	subi	r30, 0xB3	; 179
     a9e:	ff 4f       	sbci	r31, 0xFF	; 255
     aa0:	60 81       	ld	r22, Z
     aa2:	71 81       	ldd	r23, Z+1	; 0x01
     aa4:	82 81       	ldd	r24, Z+2	; 0x02
     aa6:	93 81       	ldd	r25, Z+3	; 0x03
     aa8:	20 e0       	ldi	r18, 0x00	; 0
     aaa:	30 e0       	ldi	r19, 0x00	; 0
     aac:	40 e8       	ldi	r20, 0x80	; 128
     aae:	5f e3       	ldi	r21, 0x3F	; 63
     ab0:	0e 94 2f 0c 	call	0x185e	; 0x185e <__ltsf2>
     ab4:	88 23       	and	r24, r24
     ab6:	44 f4       	brge	.+16     	; 0xac8 <LCD_cmd+0x224>
		__ticks = 1;
     ab8:	fe 01       	movw	r30, r28
     aba:	e5 5b       	subi	r30, 0xB5	; 181
     abc:	ff 4f       	sbci	r31, 0xFF	; 255
     abe:	81 e0       	ldi	r24, 0x01	; 1
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	91 83       	std	Z+1, r25	; 0x01
     ac4:	80 83       	st	Z, r24
     ac6:	64 c0       	rjmp	.+200    	; 0xb90 <LCD_cmd+0x2ec>
	else if (__tmp > 65535)
     ac8:	fe 01       	movw	r30, r28
     aca:	e3 5b       	subi	r30, 0xB3	; 179
     acc:	ff 4f       	sbci	r31, 0xFF	; 255
     ace:	60 81       	ld	r22, Z
     ad0:	71 81       	ldd	r23, Z+1	; 0x01
     ad2:	82 81       	ldd	r24, Z+2	; 0x02
     ad4:	93 81       	ldd	r25, Z+3	; 0x03
     ad6:	20 e0       	ldi	r18, 0x00	; 0
     ad8:	3f ef       	ldi	r19, 0xFF	; 255
     ada:	4f e7       	ldi	r20, 0x7F	; 127
     adc:	57 e4       	ldi	r21, 0x47	; 71
     ade:	0e 94 cf 0b 	call	0x179e	; 0x179e <__gtsf2>
     ae2:	18 16       	cp	r1, r24
     ae4:	0c f0       	brlt	.+2      	; 0xae8 <LCD_cmd+0x244>
     ae6:	43 c0       	rjmp	.+134    	; 0xb6e <LCD_cmd+0x2ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ae8:	fe 01       	movw	r30, r28
     aea:	ef 5a       	subi	r30, 0xAF	; 175
     aec:	ff 4f       	sbci	r31, 0xFF	; 255
     aee:	60 81       	ld	r22, Z
     af0:	71 81       	ldd	r23, Z+1	; 0x01
     af2:	82 81       	ldd	r24, Z+2	; 0x02
     af4:	93 81       	ldd	r25, Z+3	; 0x03
     af6:	20 e0       	ldi	r18, 0x00	; 0
     af8:	30 e0       	ldi	r19, 0x00	; 0
     afa:	40 e2       	ldi	r20, 0x20	; 32
     afc:	51 e4       	ldi	r21, 0x41	; 65
     afe:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     b02:	dc 01       	movw	r26, r24
     b04:	cb 01       	movw	r24, r22
     b06:	8e 01       	movw	r16, r28
     b08:	05 5b       	subi	r16, 0xB5	; 181
     b0a:	1f 4f       	sbci	r17, 0xFF	; 255
     b0c:	bc 01       	movw	r22, r24
     b0e:	cd 01       	movw	r24, r26
     b10:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     b14:	dc 01       	movw	r26, r24
     b16:	cb 01       	movw	r24, r22
     b18:	f8 01       	movw	r30, r16
     b1a:	91 83       	std	Z+1, r25	; 0x01
     b1c:	80 83       	st	Z, r24
     b1e:	1f c0       	rjmp	.+62     	; 0xb5e <LCD_cmd+0x2ba>
     b20:	fe 01       	movw	r30, r28
     b22:	e7 5b       	subi	r30, 0xB7	; 183
     b24:	ff 4f       	sbci	r31, 0xFF	; 255
     b26:	80 e9       	ldi	r24, 0x90	; 144
     b28:	91 e0       	ldi	r25, 0x01	; 1
     b2a:	91 83       	std	Z+1, r25	; 0x01
     b2c:	80 83       	st	Z, r24
     b2e:	fe 01       	movw	r30, r28
     b30:	e7 5b       	subi	r30, 0xB7	; 183
     b32:	ff 4f       	sbci	r31, 0xFF	; 255
     b34:	80 81       	ld	r24, Z
     b36:	91 81       	ldd	r25, Z+1	; 0x01
     b38:	01 97       	sbiw	r24, 0x01	; 1
     b3a:	f1 f7       	brne	.-4      	; 0xb38 <LCD_cmd+0x294>
     b3c:	fe 01       	movw	r30, r28
     b3e:	e7 5b       	subi	r30, 0xB7	; 183
     b40:	ff 4f       	sbci	r31, 0xFF	; 255
     b42:	91 83       	std	Z+1, r25	; 0x01
     b44:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b46:	de 01       	movw	r26, r28
     b48:	a5 5b       	subi	r26, 0xB5	; 181
     b4a:	bf 4f       	sbci	r27, 0xFF	; 255
     b4c:	fe 01       	movw	r30, r28
     b4e:	e5 5b       	subi	r30, 0xB5	; 181
     b50:	ff 4f       	sbci	r31, 0xFF	; 255
     b52:	80 81       	ld	r24, Z
     b54:	91 81       	ldd	r25, Z+1	; 0x01
     b56:	01 97       	sbiw	r24, 0x01	; 1
     b58:	11 96       	adiw	r26, 0x01	; 1
     b5a:	9c 93       	st	X, r25
     b5c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b5e:	fe 01       	movw	r30, r28
     b60:	e5 5b       	subi	r30, 0xB5	; 181
     b62:	ff 4f       	sbci	r31, 0xFF	; 255
     b64:	80 81       	ld	r24, Z
     b66:	91 81       	ldd	r25, Z+1	; 0x01
     b68:	00 97       	sbiw	r24, 0x00	; 0
     b6a:	d1 f6       	brne	.-76     	; 0xb20 <LCD_cmd+0x27c>
     b6c:	27 c0       	rjmp	.+78     	; 0xbbc <LCD_cmd+0x318>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b6e:	8e 01       	movw	r16, r28
     b70:	05 5b       	subi	r16, 0xB5	; 181
     b72:	1f 4f       	sbci	r17, 0xFF	; 255
     b74:	fe 01       	movw	r30, r28
     b76:	e3 5b       	subi	r30, 0xB3	; 179
     b78:	ff 4f       	sbci	r31, 0xFF	; 255
     b7a:	60 81       	ld	r22, Z
     b7c:	71 81       	ldd	r23, Z+1	; 0x01
     b7e:	82 81       	ldd	r24, Z+2	; 0x02
     b80:	93 81       	ldd	r25, Z+3	; 0x03
     b82:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     b86:	dc 01       	movw	r26, r24
     b88:	cb 01       	movw	r24, r22
     b8a:	f8 01       	movw	r30, r16
     b8c:	91 83       	std	Z+1, r25	; 0x01
     b8e:	80 83       	st	Z, r24
     b90:	de 01       	movw	r26, r28
     b92:	a9 5b       	subi	r26, 0xB9	; 185
     b94:	bf 4f       	sbci	r27, 0xFF	; 255
     b96:	fe 01       	movw	r30, r28
     b98:	e5 5b       	subi	r30, 0xB5	; 181
     b9a:	ff 4f       	sbci	r31, 0xFF	; 255
     b9c:	80 81       	ld	r24, Z
     b9e:	91 81       	ldd	r25, Z+1	; 0x01
     ba0:	8d 93       	st	X+, r24
     ba2:	9c 93       	st	X, r25
     ba4:	fe 01       	movw	r30, r28
     ba6:	e9 5b       	subi	r30, 0xB9	; 185
     ba8:	ff 4f       	sbci	r31, 0xFF	; 255
     baa:	80 81       	ld	r24, Z
     bac:	91 81       	ldd	r25, Z+1	; 0x01
     bae:	01 97       	sbiw	r24, 0x01	; 1
     bb0:	f1 f7       	brne	.-4      	; 0xbae <LCD_cmd+0x30a>
     bb2:	fe 01       	movw	r30, r28
     bb4:	e9 5b       	subi	r30, 0xB9	; 185
     bb6:	ff 4f       	sbci	r31, 0xFF	; 255
     bb8:	91 83       	std	Z+1, r25	; 0x01
     bba:	80 83       	st	Z, r24
  _delay_ms(1);
   PORTC =cmd&0xf0;
     bbc:	a5 e3       	ldi	r26, 0x35	; 53
     bbe:	b0 e0       	ldi	r27, 0x00	; 0
     bc0:	fe 01       	movw	r30, r28
     bc2:	ed 59       	subi	r30, 0x9D	; 157
     bc4:	ff 4f       	sbci	r31, 0xFF	; 255
     bc6:	80 81       	ld	r24, Z
     bc8:	80 7f       	andi	r24, 0xF0	; 240
     bca:	8c 93       	st	X, r24
     bcc:	fe 01       	movw	r30, r28
     bce:	ed 5b       	subi	r30, 0xBD	; 189
     bd0:	ff 4f       	sbci	r31, 0xFF	; 255
     bd2:	80 e0       	ldi	r24, 0x00	; 0
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	a0 e8       	ldi	r26, 0x80	; 128
     bd8:	bf e3       	ldi	r27, 0x3F	; 63
     bda:	80 83       	st	Z, r24
     bdc:	91 83       	std	Z+1, r25	; 0x01
     bde:	a2 83       	std	Z+2, r26	; 0x02
     be0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     be2:	8e 01       	movw	r16, r28
     be4:	01 5c       	subi	r16, 0xC1	; 193
     be6:	1f 4f       	sbci	r17, 0xFF	; 255
     be8:	fe 01       	movw	r30, r28
     bea:	ed 5b       	subi	r30, 0xBD	; 189
     bec:	ff 4f       	sbci	r31, 0xFF	; 255
     bee:	60 81       	ld	r22, Z
     bf0:	71 81       	ldd	r23, Z+1	; 0x01
     bf2:	82 81       	ldd	r24, Z+2	; 0x02
     bf4:	93 81       	ldd	r25, Z+3	; 0x03
     bf6:	20 e0       	ldi	r18, 0x00	; 0
     bf8:	30 e0       	ldi	r19, 0x00	; 0
     bfa:	4a e7       	ldi	r20, 0x7A	; 122
     bfc:	55 e4       	ldi	r21, 0x45	; 69
     bfe:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     c02:	dc 01       	movw	r26, r24
     c04:	cb 01       	movw	r24, r22
     c06:	f8 01       	movw	r30, r16
     c08:	80 83       	st	Z, r24
     c0a:	91 83       	std	Z+1, r25	; 0x01
     c0c:	a2 83       	std	Z+2, r26	; 0x02
     c0e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     c10:	fe 01       	movw	r30, r28
     c12:	ff 96       	adiw	r30, 0x3f	; 63
     c14:	60 81       	ld	r22, Z
     c16:	71 81       	ldd	r23, Z+1	; 0x01
     c18:	82 81       	ldd	r24, Z+2	; 0x02
     c1a:	93 81       	ldd	r25, Z+3	; 0x03
     c1c:	20 e0       	ldi	r18, 0x00	; 0
     c1e:	30 e0       	ldi	r19, 0x00	; 0
     c20:	40 e8       	ldi	r20, 0x80	; 128
     c22:	5f e3       	ldi	r21, 0x3F	; 63
     c24:	0e 94 2f 0c 	call	0x185e	; 0x185e <__ltsf2>
     c28:	88 23       	and	r24, r24
     c2a:	2c f4       	brge	.+10     	; 0xc36 <LCD_cmd+0x392>
		__ticks = 1;
     c2c:	81 e0       	ldi	r24, 0x01	; 1
     c2e:	90 e0       	ldi	r25, 0x00	; 0
     c30:	9e af       	std	Y+62, r25	; 0x3e
     c32:	8d af       	std	Y+61, r24	; 0x3d
     c34:	46 c0       	rjmp	.+140    	; 0xcc2 <LCD_cmd+0x41e>
	else if (__tmp > 65535)
     c36:	fe 01       	movw	r30, r28
     c38:	ff 96       	adiw	r30, 0x3f	; 63
     c3a:	60 81       	ld	r22, Z
     c3c:	71 81       	ldd	r23, Z+1	; 0x01
     c3e:	82 81       	ldd	r24, Z+2	; 0x02
     c40:	93 81       	ldd	r25, Z+3	; 0x03
     c42:	20 e0       	ldi	r18, 0x00	; 0
     c44:	3f ef       	ldi	r19, 0xFF	; 255
     c46:	4f e7       	ldi	r20, 0x7F	; 127
     c48:	57 e4       	ldi	r21, 0x47	; 71
     c4a:	0e 94 cf 0b 	call	0x179e	; 0x179e <__gtsf2>
     c4e:	18 16       	cp	r1, r24
     c50:	64 f5       	brge	.+88     	; 0xcaa <LCD_cmd+0x406>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c52:	fe 01       	movw	r30, r28
     c54:	ed 5b       	subi	r30, 0xBD	; 189
     c56:	ff 4f       	sbci	r31, 0xFF	; 255
     c58:	60 81       	ld	r22, Z
     c5a:	71 81       	ldd	r23, Z+1	; 0x01
     c5c:	82 81       	ldd	r24, Z+2	; 0x02
     c5e:	93 81       	ldd	r25, Z+3	; 0x03
     c60:	20 e0       	ldi	r18, 0x00	; 0
     c62:	30 e0       	ldi	r19, 0x00	; 0
     c64:	40 e2       	ldi	r20, 0x20	; 32
     c66:	51 e4       	ldi	r21, 0x41	; 65
     c68:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     c6c:	dc 01       	movw	r26, r24
     c6e:	cb 01       	movw	r24, r22
     c70:	bc 01       	movw	r22, r24
     c72:	cd 01       	movw	r24, r26
     c74:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     c78:	dc 01       	movw	r26, r24
     c7a:	cb 01       	movw	r24, r22
     c7c:	9e af       	std	Y+62, r25	; 0x3e
     c7e:	8d af       	std	Y+61, r24	; 0x3d
     c80:	0f c0       	rjmp	.+30     	; 0xca0 <LCD_cmd+0x3fc>
     c82:	80 e9       	ldi	r24, 0x90	; 144
     c84:	91 e0       	ldi	r25, 0x01	; 1
     c86:	9c af       	std	Y+60, r25	; 0x3c
     c88:	8b af       	std	Y+59, r24	; 0x3b
     c8a:	8b ad       	ldd	r24, Y+59	; 0x3b
     c8c:	9c ad       	ldd	r25, Y+60	; 0x3c
     c8e:	01 97       	sbiw	r24, 0x01	; 1
     c90:	f1 f7       	brne	.-4      	; 0xc8e <LCD_cmd+0x3ea>
     c92:	9c af       	std	Y+60, r25	; 0x3c
     c94:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c96:	8d ad       	ldd	r24, Y+61	; 0x3d
     c98:	9e ad       	ldd	r25, Y+62	; 0x3e
     c9a:	01 97       	sbiw	r24, 0x01	; 1
     c9c:	9e af       	std	Y+62, r25	; 0x3e
     c9e:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ca0:	8d ad       	ldd	r24, Y+61	; 0x3d
     ca2:	9e ad       	ldd	r25, Y+62	; 0x3e
     ca4:	00 97       	sbiw	r24, 0x00	; 0
     ca6:	69 f7       	brne	.-38     	; 0xc82 <LCD_cmd+0x3de>
     ca8:	16 c0       	rjmp	.+44     	; 0xcd6 <LCD_cmd+0x432>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     caa:	fe 01       	movw	r30, r28
     cac:	ff 96       	adiw	r30, 0x3f	; 63
     cae:	60 81       	ld	r22, Z
     cb0:	71 81       	ldd	r23, Z+1	; 0x01
     cb2:	82 81       	ldd	r24, Z+2	; 0x02
     cb4:	93 81       	ldd	r25, Z+3	; 0x03
     cb6:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     cba:	dc 01       	movw	r26, r24
     cbc:	cb 01       	movw	r24, r22
     cbe:	9e af       	std	Y+62, r25	; 0x3e
     cc0:	8d af       	std	Y+61, r24	; 0x3d
     cc2:	8d ad       	ldd	r24, Y+61	; 0x3d
     cc4:	9e ad       	ldd	r25, Y+62	; 0x3e
     cc6:	9a af       	std	Y+58, r25	; 0x3a
     cc8:	89 af       	std	Y+57, r24	; 0x39
     cca:	89 ad       	ldd	r24, Y+57	; 0x39
     ccc:	9a ad       	ldd	r25, Y+58	; 0x3a
     cce:	01 97       	sbiw	r24, 0x01	; 1
     cd0:	f1 f7       	brne	.-4      	; 0xcce <LCD_cmd+0x42a>
     cd2:	9a af       	std	Y+58, r25	; 0x3a
     cd4:	89 af       	std	Y+57, r24	; 0x39
  _delay_ms(1);
  clear_E ;
     cd6:	a2 e3       	ldi	r26, 0x32	; 50
     cd8:	b0 e0       	ldi	r27, 0x00	; 0
     cda:	e2 e3       	ldi	r30, 0x32	; 50
     cdc:	f0 e0       	ldi	r31, 0x00	; 0
     cde:	80 81       	ld	r24, Z
     ce0:	8f 7b       	andi	r24, 0xBF	; 191
     ce2:	8c 93       	st	X, r24
     ce4:	80 e0       	ldi	r24, 0x00	; 0
     ce6:	90 e0       	ldi	r25, 0x00	; 0
     ce8:	a0 e8       	ldi	r26, 0x80	; 128
     cea:	bf e3       	ldi	r27, 0x3F	; 63
     cec:	8d ab       	std	Y+53, r24	; 0x35
     cee:	9e ab       	std	Y+54, r25	; 0x36
     cf0:	af ab       	std	Y+55, r26	; 0x37
     cf2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     cf4:	6d a9       	ldd	r22, Y+53	; 0x35
     cf6:	7e a9       	ldd	r23, Y+54	; 0x36
     cf8:	8f a9       	ldd	r24, Y+55	; 0x37
     cfa:	98 ad       	ldd	r25, Y+56	; 0x38
     cfc:	20 e0       	ldi	r18, 0x00	; 0
     cfe:	30 e0       	ldi	r19, 0x00	; 0
     d00:	4a e7       	ldi	r20, 0x7A	; 122
     d02:	55 e4       	ldi	r21, 0x45	; 69
     d04:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     d08:	dc 01       	movw	r26, r24
     d0a:	cb 01       	movw	r24, r22
     d0c:	89 ab       	std	Y+49, r24	; 0x31
     d0e:	9a ab       	std	Y+50, r25	; 0x32
     d10:	ab ab       	std	Y+51, r26	; 0x33
     d12:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     d14:	69 a9       	ldd	r22, Y+49	; 0x31
     d16:	7a a9       	ldd	r23, Y+50	; 0x32
     d18:	8b a9       	ldd	r24, Y+51	; 0x33
     d1a:	9c a9       	ldd	r25, Y+52	; 0x34
     d1c:	20 e0       	ldi	r18, 0x00	; 0
     d1e:	30 e0       	ldi	r19, 0x00	; 0
     d20:	40 e8       	ldi	r20, 0x80	; 128
     d22:	5f e3       	ldi	r21, 0x3F	; 63
     d24:	0e 94 2f 0c 	call	0x185e	; 0x185e <__ltsf2>
     d28:	88 23       	and	r24, r24
     d2a:	2c f4       	brge	.+10     	; 0xd36 <LCD_cmd+0x492>
		__ticks = 1;
     d2c:	81 e0       	ldi	r24, 0x01	; 1
     d2e:	90 e0       	ldi	r25, 0x00	; 0
     d30:	98 ab       	std	Y+48, r25	; 0x30
     d32:	8f a7       	std	Y+47, r24	; 0x2f
     d34:	3f c0       	rjmp	.+126    	; 0xdb4 <LCD_cmd+0x510>
	else if (__tmp > 65535)
     d36:	69 a9       	ldd	r22, Y+49	; 0x31
     d38:	7a a9       	ldd	r23, Y+50	; 0x32
     d3a:	8b a9       	ldd	r24, Y+51	; 0x33
     d3c:	9c a9       	ldd	r25, Y+52	; 0x34
     d3e:	20 e0       	ldi	r18, 0x00	; 0
     d40:	3f ef       	ldi	r19, 0xFF	; 255
     d42:	4f e7       	ldi	r20, 0x7F	; 127
     d44:	57 e4       	ldi	r21, 0x47	; 71
     d46:	0e 94 cf 0b 	call	0x179e	; 0x179e <__gtsf2>
     d4a:	18 16       	cp	r1, r24
     d4c:	4c f5       	brge	.+82     	; 0xda0 <LCD_cmd+0x4fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d4e:	6d a9       	ldd	r22, Y+53	; 0x35
     d50:	7e a9       	ldd	r23, Y+54	; 0x36
     d52:	8f a9       	ldd	r24, Y+55	; 0x37
     d54:	98 ad       	ldd	r25, Y+56	; 0x38
     d56:	20 e0       	ldi	r18, 0x00	; 0
     d58:	30 e0       	ldi	r19, 0x00	; 0
     d5a:	40 e2       	ldi	r20, 0x20	; 32
     d5c:	51 e4       	ldi	r21, 0x41	; 65
     d5e:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     d62:	dc 01       	movw	r26, r24
     d64:	cb 01       	movw	r24, r22
     d66:	bc 01       	movw	r22, r24
     d68:	cd 01       	movw	r24, r26
     d6a:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     d6e:	dc 01       	movw	r26, r24
     d70:	cb 01       	movw	r24, r22
     d72:	98 ab       	std	Y+48, r25	; 0x30
     d74:	8f a7       	std	Y+47, r24	; 0x2f
     d76:	0f c0       	rjmp	.+30     	; 0xd96 <LCD_cmd+0x4f2>
     d78:	80 e9       	ldi	r24, 0x90	; 144
     d7a:	91 e0       	ldi	r25, 0x01	; 1
     d7c:	9e a7       	std	Y+46, r25	; 0x2e
     d7e:	8d a7       	std	Y+45, r24	; 0x2d
     d80:	8d a5       	ldd	r24, Y+45	; 0x2d
     d82:	9e a5       	ldd	r25, Y+46	; 0x2e
     d84:	01 97       	sbiw	r24, 0x01	; 1
     d86:	f1 f7       	brne	.-4      	; 0xd84 <LCD_cmd+0x4e0>
     d88:	9e a7       	std	Y+46, r25	; 0x2e
     d8a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d8c:	8f a5       	ldd	r24, Y+47	; 0x2f
     d8e:	98 a9       	ldd	r25, Y+48	; 0x30
     d90:	01 97       	sbiw	r24, 0x01	; 1
     d92:	98 ab       	std	Y+48, r25	; 0x30
     d94:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d96:	8f a5       	ldd	r24, Y+47	; 0x2f
     d98:	98 a9       	ldd	r25, Y+48	; 0x30
     d9a:	00 97       	sbiw	r24, 0x00	; 0
     d9c:	69 f7       	brne	.-38     	; 0xd78 <LCD_cmd+0x4d4>
     d9e:	14 c0       	rjmp	.+40     	; 0xdc8 <LCD_cmd+0x524>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     da0:	69 a9       	ldd	r22, Y+49	; 0x31
     da2:	7a a9       	ldd	r23, Y+50	; 0x32
     da4:	8b a9       	ldd	r24, Y+51	; 0x33
     da6:	9c a9       	ldd	r25, Y+52	; 0x34
     da8:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     dac:	dc 01       	movw	r26, r24
     dae:	cb 01       	movw	r24, r22
     db0:	98 ab       	std	Y+48, r25	; 0x30
     db2:	8f a7       	std	Y+47, r24	; 0x2f
     db4:	8f a5       	ldd	r24, Y+47	; 0x2f
     db6:	98 a9       	ldd	r25, Y+48	; 0x30
     db8:	9c a7       	std	Y+44, r25	; 0x2c
     dba:	8b a7       	std	Y+43, r24	; 0x2b
     dbc:	8b a5       	ldd	r24, Y+43	; 0x2b
     dbe:	9c a5       	ldd	r25, Y+44	; 0x2c
     dc0:	01 97       	sbiw	r24, 0x01	; 1
     dc2:	f1 f7       	brne	.-4      	; 0xdc0 <LCD_cmd+0x51c>
     dc4:	9c a7       	std	Y+44, r25	; 0x2c
     dc6:	8b a7       	std	Y+43, r24	; 0x2b
    _delay_ms(1);
    set_E;
     dc8:	a2 e3       	ldi	r26, 0x32	; 50
     dca:	b0 e0       	ldi	r27, 0x00	; 0
     dcc:	e2 e3       	ldi	r30, 0x32	; 50
     dce:	f0 e0       	ldi	r31, 0x00	; 0
     dd0:	80 81       	ld	r24, Z
     dd2:	80 64       	ori	r24, 0x40	; 64
     dd4:	8c 93       	st	X, r24
     dd6:	80 e0       	ldi	r24, 0x00	; 0
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	a0 e8       	ldi	r26, 0x80	; 128
     ddc:	bf e3       	ldi	r27, 0x3F	; 63
     dde:	8f a3       	std	Y+39, r24	; 0x27
     de0:	98 a7       	std	Y+40, r25	; 0x28
     de2:	a9 a7       	std	Y+41, r26	; 0x29
     de4:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     de6:	6f a1       	ldd	r22, Y+39	; 0x27
     de8:	78 a5       	ldd	r23, Y+40	; 0x28
     dea:	89 a5       	ldd	r24, Y+41	; 0x29
     dec:	9a a5       	ldd	r25, Y+42	; 0x2a
     dee:	20 e0       	ldi	r18, 0x00	; 0
     df0:	30 e0       	ldi	r19, 0x00	; 0
     df2:	4a e7       	ldi	r20, 0x7A	; 122
     df4:	55 e4       	ldi	r21, 0x45	; 69
     df6:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     dfa:	dc 01       	movw	r26, r24
     dfc:	cb 01       	movw	r24, r22
     dfe:	8b a3       	std	Y+35, r24	; 0x23
     e00:	9c a3       	std	Y+36, r25	; 0x24
     e02:	ad a3       	std	Y+37, r26	; 0x25
     e04:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     e06:	6b a1       	ldd	r22, Y+35	; 0x23
     e08:	7c a1       	ldd	r23, Y+36	; 0x24
     e0a:	8d a1       	ldd	r24, Y+37	; 0x25
     e0c:	9e a1       	ldd	r25, Y+38	; 0x26
     e0e:	20 e0       	ldi	r18, 0x00	; 0
     e10:	30 e0       	ldi	r19, 0x00	; 0
     e12:	40 e8       	ldi	r20, 0x80	; 128
     e14:	5f e3       	ldi	r21, 0x3F	; 63
     e16:	0e 94 2f 0c 	call	0x185e	; 0x185e <__ltsf2>
     e1a:	88 23       	and	r24, r24
     e1c:	2c f4       	brge	.+10     	; 0xe28 <LCD_cmd+0x584>
		__ticks = 1;
     e1e:	81 e0       	ldi	r24, 0x01	; 1
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	9a a3       	std	Y+34, r25	; 0x22
     e24:	89 a3       	std	Y+33, r24	; 0x21
     e26:	3f c0       	rjmp	.+126    	; 0xea6 <LCD_cmd+0x602>
	else if (__tmp > 65535)
     e28:	6b a1       	ldd	r22, Y+35	; 0x23
     e2a:	7c a1       	ldd	r23, Y+36	; 0x24
     e2c:	8d a1       	ldd	r24, Y+37	; 0x25
     e2e:	9e a1       	ldd	r25, Y+38	; 0x26
     e30:	20 e0       	ldi	r18, 0x00	; 0
     e32:	3f ef       	ldi	r19, 0xFF	; 255
     e34:	4f e7       	ldi	r20, 0x7F	; 127
     e36:	57 e4       	ldi	r21, 0x47	; 71
     e38:	0e 94 cf 0b 	call	0x179e	; 0x179e <__gtsf2>
     e3c:	18 16       	cp	r1, r24
     e3e:	4c f5       	brge	.+82     	; 0xe92 <LCD_cmd+0x5ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e40:	6f a1       	ldd	r22, Y+39	; 0x27
     e42:	78 a5       	ldd	r23, Y+40	; 0x28
     e44:	89 a5       	ldd	r24, Y+41	; 0x29
     e46:	9a a5       	ldd	r25, Y+42	; 0x2a
     e48:	20 e0       	ldi	r18, 0x00	; 0
     e4a:	30 e0       	ldi	r19, 0x00	; 0
     e4c:	40 e2       	ldi	r20, 0x20	; 32
     e4e:	51 e4       	ldi	r21, 0x41	; 65
     e50:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     e54:	dc 01       	movw	r26, r24
     e56:	cb 01       	movw	r24, r22
     e58:	bc 01       	movw	r22, r24
     e5a:	cd 01       	movw	r24, r26
     e5c:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     e60:	dc 01       	movw	r26, r24
     e62:	cb 01       	movw	r24, r22
     e64:	9a a3       	std	Y+34, r25	; 0x22
     e66:	89 a3       	std	Y+33, r24	; 0x21
     e68:	0f c0       	rjmp	.+30     	; 0xe88 <LCD_cmd+0x5e4>
     e6a:	80 e9       	ldi	r24, 0x90	; 144
     e6c:	91 e0       	ldi	r25, 0x01	; 1
     e6e:	98 a3       	std	Y+32, r25	; 0x20
     e70:	8f 8f       	std	Y+31, r24	; 0x1f
     e72:	8f 8d       	ldd	r24, Y+31	; 0x1f
     e74:	98 a1       	ldd	r25, Y+32	; 0x20
     e76:	01 97       	sbiw	r24, 0x01	; 1
     e78:	f1 f7       	brne	.-4      	; 0xe76 <LCD_cmd+0x5d2>
     e7a:	98 a3       	std	Y+32, r25	; 0x20
     e7c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e7e:	89 a1       	ldd	r24, Y+33	; 0x21
     e80:	9a a1       	ldd	r25, Y+34	; 0x22
     e82:	01 97       	sbiw	r24, 0x01	; 1
     e84:	9a a3       	std	Y+34, r25	; 0x22
     e86:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e88:	89 a1       	ldd	r24, Y+33	; 0x21
     e8a:	9a a1       	ldd	r25, Y+34	; 0x22
     e8c:	00 97       	sbiw	r24, 0x00	; 0
     e8e:	69 f7       	brne	.-38     	; 0xe6a <LCD_cmd+0x5c6>
     e90:	14 c0       	rjmp	.+40     	; 0xeba <LCD_cmd+0x616>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e92:	6b a1       	ldd	r22, Y+35	; 0x23
     e94:	7c a1       	ldd	r23, Y+36	; 0x24
     e96:	8d a1       	ldd	r24, Y+37	; 0x25
     e98:	9e a1       	ldd	r25, Y+38	; 0x26
     e9a:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     e9e:	dc 01       	movw	r26, r24
     ea0:	cb 01       	movw	r24, r22
     ea2:	9a a3       	std	Y+34, r25	; 0x22
     ea4:	89 a3       	std	Y+33, r24	; 0x21
     ea6:	89 a1       	ldd	r24, Y+33	; 0x21
     ea8:	9a a1       	ldd	r25, Y+34	; 0x22
     eaa:	9e 8f       	std	Y+30, r25	; 0x1e
     eac:	8d 8f       	std	Y+29, r24	; 0x1d
     eae:	8d 8d       	ldd	r24, Y+29	; 0x1d
     eb0:	9e 8d       	ldd	r25, Y+30	; 0x1e
     eb2:	01 97       	sbiw	r24, 0x01	; 1
     eb4:	f1 f7       	brne	.-4      	; 0xeb2 <LCD_cmd+0x60e>
     eb6:	9e 8f       	std	Y+30, r25	; 0x1e
     eb8:	8d 8f       	std	Y+29, r24	; 0x1d
     _delay_ms(1);
   PORTC =(cmd<<4)&0xf0;
     eba:	a5 e3       	ldi	r26, 0x35	; 53
     ebc:	b0 e0       	ldi	r27, 0x00	; 0
     ebe:	fe 01       	movw	r30, r28
     ec0:	ed 59       	subi	r30, 0x9D	; 157
     ec2:	ff 4f       	sbci	r31, 0xFF	; 255
     ec4:	80 81       	ld	r24, Z
     ec6:	88 2f       	mov	r24, r24
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	82 95       	swap	r24
     ecc:	92 95       	swap	r25
     ece:	90 7f       	andi	r25, 0xF0	; 240
     ed0:	98 27       	eor	r25, r24
     ed2:	80 7f       	andi	r24, 0xF0	; 240
     ed4:	98 27       	eor	r25, r24
     ed6:	8c 93       	st	X, r24
     ed8:	80 e0       	ldi	r24, 0x00	; 0
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	a0 e8       	ldi	r26, 0x80	; 128
     ede:	bf e3       	ldi	r27, 0x3F	; 63
     ee0:	89 8f       	std	Y+25, r24	; 0x19
     ee2:	9a 8f       	std	Y+26, r25	; 0x1a
     ee4:	ab 8f       	std	Y+27, r26	; 0x1b
     ee6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ee8:	69 8d       	ldd	r22, Y+25	; 0x19
     eea:	7a 8d       	ldd	r23, Y+26	; 0x1a
     eec:	8b 8d       	ldd	r24, Y+27	; 0x1b
     eee:	9c 8d       	ldd	r25, Y+28	; 0x1c
     ef0:	20 e0       	ldi	r18, 0x00	; 0
     ef2:	30 e0       	ldi	r19, 0x00	; 0
     ef4:	4a e7       	ldi	r20, 0x7A	; 122
     ef6:	55 e4       	ldi	r21, 0x45	; 69
     ef8:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     efc:	dc 01       	movw	r26, r24
     efe:	cb 01       	movw	r24, r22
     f00:	8d 8b       	std	Y+21, r24	; 0x15
     f02:	9e 8b       	std	Y+22, r25	; 0x16
     f04:	af 8b       	std	Y+23, r26	; 0x17
     f06:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     f08:	6d 89       	ldd	r22, Y+21	; 0x15
     f0a:	7e 89       	ldd	r23, Y+22	; 0x16
     f0c:	8f 89       	ldd	r24, Y+23	; 0x17
     f0e:	98 8d       	ldd	r25, Y+24	; 0x18
     f10:	20 e0       	ldi	r18, 0x00	; 0
     f12:	30 e0       	ldi	r19, 0x00	; 0
     f14:	40 e8       	ldi	r20, 0x80	; 128
     f16:	5f e3       	ldi	r21, 0x3F	; 63
     f18:	0e 94 2f 0c 	call	0x185e	; 0x185e <__ltsf2>
     f1c:	88 23       	and	r24, r24
     f1e:	2c f4       	brge	.+10     	; 0xf2a <LCD_cmd+0x686>
		__ticks = 1;
     f20:	81 e0       	ldi	r24, 0x01	; 1
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	9c 8b       	std	Y+20, r25	; 0x14
     f26:	8b 8b       	std	Y+19, r24	; 0x13
     f28:	3f c0       	rjmp	.+126    	; 0xfa8 <LCD_cmd+0x704>
	else if (__tmp > 65535)
     f2a:	6d 89       	ldd	r22, Y+21	; 0x15
     f2c:	7e 89       	ldd	r23, Y+22	; 0x16
     f2e:	8f 89       	ldd	r24, Y+23	; 0x17
     f30:	98 8d       	ldd	r25, Y+24	; 0x18
     f32:	20 e0       	ldi	r18, 0x00	; 0
     f34:	3f ef       	ldi	r19, 0xFF	; 255
     f36:	4f e7       	ldi	r20, 0x7F	; 127
     f38:	57 e4       	ldi	r21, 0x47	; 71
     f3a:	0e 94 cf 0b 	call	0x179e	; 0x179e <__gtsf2>
     f3e:	18 16       	cp	r1, r24
     f40:	4c f5       	brge	.+82     	; 0xf94 <LCD_cmd+0x6f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f42:	69 8d       	ldd	r22, Y+25	; 0x19
     f44:	7a 8d       	ldd	r23, Y+26	; 0x1a
     f46:	8b 8d       	ldd	r24, Y+27	; 0x1b
     f48:	9c 8d       	ldd	r25, Y+28	; 0x1c
     f4a:	20 e0       	ldi	r18, 0x00	; 0
     f4c:	30 e0       	ldi	r19, 0x00	; 0
     f4e:	40 e2       	ldi	r20, 0x20	; 32
     f50:	51 e4       	ldi	r21, 0x41	; 65
     f52:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     f56:	dc 01       	movw	r26, r24
     f58:	cb 01       	movw	r24, r22
     f5a:	bc 01       	movw	r22, r24
     f5c:	cd 01       	movw	r24, r26
     f5e:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     f62:	dc 01       	movw	r26, r24
     f64:	cb 01       	movw	r24, r22
     f66:	9c 8b       	std	Y+20, r25	; 0x14
     f68:	8b 8b       	std	Y+19, r24	; 0x13
     f6a:	0f c0       	rjmp	.+30     	; 0xf8a <LCD_cmd+0x6e6>
     f6c:	80 e9       	ldi	r24, 0x90	; 144
     f6e:	91 e0       	ldi	r25, 0x01	; 1
     f70:	9a 8b       	std	Y+18, r25	; 0x12
     f72:	89 8b       	std	Y+17, r24	; 0x11
     f74:	89 89       	ldd	r24, Y+17	; 0x11
     f76:	9a 89       	ldd	r25, Y+18	; 0x12
     f78:	01 97       	sbiw	r24, 0x01	; 1
     f7a:	f1 f7       	brne	.-4      	; 0xf78 <LCD_cmd+0x6d4>
     f7c:	9a 8b       	std	Y+18, r25	; 0x12
     f7e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f80:	8b 89       	ldd	r24, Y+19	; 0x13
     f82:	9c 89       	ldd	r25, Y+20	; 0x14
     f84:	01 97       	sbiw	r24, 0x01	; 1
     f86:	9c 8b       	std	Y+20, r25	; 0x14
     f88:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f8a:	8b 89       	ldd	r24, Y+19	; 0x13
     f8c:	9c 89       	ldd	r25, Y+20	; 0x14
     f8e:	00 97       	sbiw	r24, 0x00	; 0
     f90:	69 f7       	brne	.-38     	; 0xf6c <LCD_cmd+0x6c8>
     f92:	14 c0       	rjmp	.+40     	; 0xfbc <LCD_cmd+0x718>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f94:	6d 89       	ldd	r22, Y+21	; 0x15
     f96:	7e 89       	ldd	r23, Y+22	; 0x16
     f98:	8f 89       	ldd	r24, Y+23	; 0x17
     f9a:	98 8d       	ldd	r25, Y+24	; 0x18
     f9c:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
     fa0:	dc 01       	movw	r26, r24
     fa2:	cb 01       	movw	r24, r22
     fa4:	9c 8b       	std	Y+20, r25	; 0x14
     fa6:	8b 8b       	std	Y+19, r24	; 0x13
     fa8:	8b 89       	ldd	r24, Y+19	; 0x13
     faa:	9c 89       	ldd	r25, Y+20	; 0x14
     fac:	98 8b       	std	Y+16, r25	; 0x10
     fae:	8f 87       	std	Y+15, r24	; 0x0f
     fb0:	8f 85       	ldd	r24, Y+15	; 0x0f
     fb2:	98 89       	ldd	r25, Y+16	; 0x10
     fb4:	01 97       	sbiw	r24, 0x01	; 1
     fb6:	f1 f7       	brne	.-4      	; 0xfb4 <LCD_cmd+0x710>
     fb8:	98 8b       	std	Y+16, r25	; 0x10
     fba:	8f 87       	std	Y+15, r24	; 0x0f
  _delay_ms(1);
  clear_E;
     fbc:	a2 e3       	ldi	r26, 0x32	; 50
     fbe:	b0 e0       	ldi	r27, 0x00	; 0
     fc0:	e2 e3       	ldi	r30, 0x32	; 50
     fc2:	f0 e0       	ldi	r31, 0x00	; 0
     fc4:	80 81       	ld	r24, Z
     fc6:	8f 7b       	andi	r24, 0xBF	; 191
     fc8:	8c 93       	st	X, r24
     fca:	80 e0       	ldi	r24, 0x00	; 0
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	a0 e8       	ldi	r26, 0x80	; 128
     fd0:	bf e3       	ldi	r27, 0x3F	; 63
     fd2:	8b 87       	std	Y+11, r24	; 0x0b
     fd4:	9c 87       	std	Y+12, r25	; 0x0c
     fd6:	ad 87       	std	Y+13, r26	; 0x0d
     fd8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     fda:	6b 85       	ldd	r22, Y+11	; 0x0b
     fdc:	7c 85       	ldd	r23, Y+12	; 0x0c
     fde:	8d 85       	ldd	r24, Y+13	; 0x0d
     fe0:	9e 85       	ldd	r25, Y+14	; 0x0e
     fe2:	20 e0       	ldi	r18, 0x00	; 0
     fe4:	30 e0       	ldi	r19, 0x00	; 0
     fe6:	4a e7       	ldi	r20, 0x7A	; 122
     fe8:	55 e4       	ldi	r21, 0x45	; 69
     fea:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
     fee:	dc 01       	movw	r26, r24
     ff0:	cb 01       	movw	r24, r22
     ff2:	8f 83       	std	Y+7, r24	; 0x07
     ff4:	98 87       	std	Y+8, r25	; 0x08
     ff6:	a9 87       	std	Y+9, r26	; 0x09
     ff8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     ffa:	6f 81       	ldd	r22, Y+7	; 0x07
     ffc:	78 85       	ldd	r23, Y+8	; 0x08
     ffe:	89 85       	ldd	r24, Y+9	; 0x09
    1000:	9a 85       	ldd	r25, Y+10	; 0x0a
    1002:	20 e0       	ldi	r18, 0x00	; 0
    1004:	30 e0       	ldi	r19, 0x00	; 0
    1006:	40 e8       	ldi	r20, 0x80	; 128
    1008:	5f e3       	ldi	r21, 0x3F	; 63
    100a:	0e 94 2f 0c 	call	0x185e	; 0x185e <__ltsf2>
    100e:	88 23       	and	r24, r24
    1010:	2c f4       	brge	.+10     	; 0x101c <LCD_cmd+0x778>
		__ticks = 1;
    1012:	81 e0       	ldi	r24, 0x01	; 1
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	9e 83       	std	Y+6, r25	; 0x06
    1018:	8d 83       	std	Y+5, r24	; 0x05
    101a:	3f c0       	rjmp	.+126    	; 0x109a <LCD_cmd+0x7f6>
	else if (__tmp > 65535)
    101c:	6f 81       	ldd	r22, Y+7	; 0x07
    101e:	78 85       	ldd	r23, Y+8	; 0x08
    1020:	89 85       	ldd	r24, Y+9	; 0x09
    1022:	9a 85       	ldd	r25, Y+10	; 0x0a
    1024:	20 e0       	ldi	r18, 0x00	; 0
    1026:	3f ef       	ldi	r19, 0xFF	; 255
    1028:	4f e7       	ldi	r20, 0x7F	; 127
    102a:	57 e4       	ldi	r21, 0x47	; 71
    102c:	0e 94 cf 0b 	call	0x179e	; 0x179e <__gtsf2>
    1030:	18 16       	cp	r1, r24
    1032:	4c f5       	brge	.+82     	; 0x1086 <LCD_cmd+0x7e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1034:	6b 85       	ldd	r22, Y+11	; 0x0b
    1036:	7c 85       	ldd	r23, Y+12	; 0x0c
    1038:	8d 85       	ldd	r24, Y+13	; 0x0d
    103a:	9e 85       	ldd	r25, Y+14	; 0x0e
    103c:	20 e0       	ldi	r18, 0x00	; 0
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	40 e2       	ldi	r20, 0x20	; 32
    1042:	51 e4       	ldi	r21, 0x41	; 65
    1044:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <__mulsf3>
    1048:	dc 01       	movw	r26, r24
    104a:	cb 01       	movw	r24, r22
    104c:	bc 01       	movw	r22, r24
    104e:	cd 01       	movw	r24, r26
    1050:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
    1054:	dc 01       	movw	r26, r24
    1056:	cb 01       	movw	r24, r22
    1058:	9e 83       	std	Y+6, r25	; 0x06
    105a:	8d 83       	std	Y+5, r24	; 0x05
    105c:	0f c0       	rjmp	.+30     	; 0x107c <LCD_cmd+0x7d8>
    105e:	80 e9       	ldi	r24, 0x90	; 144
    1060:	91 e0       	ldi	r25, 0x01	; 1
    1062:	9c 83       	std	Y+4, r25	; 0x04
    1064:	8b 83       	std	Y+3, r24	; 0x03
    1066:	8b 81       	ldd	r24, Y+3	; 0x03
    1068:	9c 81       	ldd	r25, Y+4	; 0x04
    106a:	01 97       	sbiw	r24, 0x01	; 1
    106c:	f1 f7       	brne	.-4      	; 0x106a <LCD_cmd+0x7c6>
    106e:	9c 83       	std	Y+4, r25	; 0x04
    1070:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1072:	8d 81       	ldd	r24, Y+5	; 0x05
    1074:	9e 81       	ldd	r25, Y+6	; 0x06
    1076:	01 97       	sbiw	r24, 0x01	; 1
    1078:	9e 83       	std	Y+6, r25	; 0x06
    107a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    107c:	8d 81       	ldd	r24, Y+5	; 0x05
    107e:	9e 81       	ldd	r25, Y+6	; 0x06
    1080:	00 97       	sbiw	r24, 0x00	; 0
    1082:	69 f7       	brne	.-38     	; 0x105e <LCD_cmd+0x7ba>
    1084:	14 c0       	rjmp	.+40     	; 0x10ae <LCD_cmd+0x80a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1086:	6f 81       	ldd	r22, Y+7	; 0x07
    1088:	78 85       	ldd	r23, Y+8	; 0x08
    108a:	89 85       	ldd	r24, Y+9	; 0x09
    108c:	9a 85       	ldd	r25, Y+10	; 0x0a
    108e:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fixunssfsi>
    1092:	dc 01       	movw	r26, r24
    1094:	cb 01       	movw	r24, r22
    1096:	9e 83       	std	Y+6, r25	; 0x06
    1098:	8d 83       	std	Y+5, r24	; 0x05
    109a:	8d 81       	ldd	r24, Y+5	; 0x05
    109c:	9e 81       	ldd	r25, Y+6	; 0x06
    109e:	9a 83       	std	Y+2, r25	; 0x02
    10a0:	89 83       	std	Y+1, r24	; 0x01
    10a2:	89 81       	ldd	r24, Y+1	; 0x01
    10a4:	9a 81       	ldd	r25, Y+2	; 0x02
    10a6:	01 97       	sbiw	r24, 0x01	; 1
    10a8:	f1 f7       	brne	.-4      	; 0x10a6 <LCD_cmd+0x802>
    10aa:	9a 83       	std	Y+2, r25	; 0x02
    10ac:	89 83       	std	Y+1, r24	; 0x01
  _delay_ms(1);
}
    10ae:	cd 59       	subi	r28, 0x9D	; 157
    10b0:	df 4f       	sbci	r29, 0xFF	; 255
    10b2:	0f b6       	in	r0, 0x3f	; 63
    10b4:	f8 94       	cli
    10b6:	de bf       	out	0x3e, r29	; 62
    10b8:	0f be       	out	0x3f, r0	; 63
    10ba:	cd bf       	out	0x3d, r28	; 61
    10bc:	cf 91       	pop	r28
    10be:	df 91       	pop	r29
    10c0:	1f 91       	pop	r17
    10c2:	0f 91       	pop	r16
    10c4:	08 95       	ret

000010c6 <LCD_intialize>:
void LCD_intialize ()
{
    10c6:	df 93       	push	r29
    10c8:	cf 93       	push	r28
    10ca:	cd b7       	in	r28, 0x3d	; 61
    10cc:	de b7       	in	r29, 0x3e	; 62
   LCD_cmd(0x02);  //2 lines
    10ce:	82 e0       	ldi	r24, 0x02	; 2
    10d0:	0e 94 52 04 	call	0x8a4	; 0x8a4 <LCD_cmd>
    LCD_cmd(0x28);  //2 lines
    10d4:	88 e2       	ldi	r24, 0x28	; 40
    10d6:	0e 94 52 04 	call	0x8a4	; 0x8a4 <LCD_cmd>
   LCD_cmd(0x01);   //clear
    10da:	81 e0       	ldi	r24, 0x01	; 1
    10dc:	0e 94 52 04 	call	0x8a4	; 0x8a4 <LCD_cmd>
   LCD_cmd(0x0c);   //cursor off
    10e0:	8c e0       	ldi	r24, 0x0C	; 12
    10e2:	0e 94 52 04 	call	0x8a4	; 0x8a4 <LCD_cmd>

}
    10e6:	cf 91       	pop	r28
    10e8:	df 91       	pop	r29
    10ea:	08 95       	ret

000010ec <LCD_display_char>:
void LCD_display_char (unsigned char a)
{
    10ec:	df 93       	push	r29
    10ee:	cf 93       	push	r28
    10f0:	0f 92       	push	r0
    10f2:	cd b7       	in	r28, 0x3d	; 61
    10f4:	de b7       	in	r29, 0x3e	; 62
    10f6:	89 83       	std	Y+1, r24	; 0x01
     LCD_data(a);
    10f8:	89 81       	ldd	r24, Y+1	; 0x01
    10fa:	0e 94 41 00 	call	0x82	; 0x82 <LCD_data>
}
    10fe:	0f 90       	pop	r0
    1100:	cf 91       	pop	r28
    1102:	df 91       	pop	r29
    1104:	08 95       	ret

00001106 <LCD_display_string>:
void LCD_display_string (unsigned char *a)
{
    1106:	df 93       	push	r29
    1108:	cf 93       	push	r28
    110a:	00 d0       	rcall	.+0      	; 0x110c <LCD_display_string+0x6>
    110c:	00 d0       	rcall	.+0      	; 0x110e <LCD_display_string+0x8>
    110e:	cd b7       	in	r28, 0x3d	; 61
    1110:	de b7       	in	r29, 0x3e	; 62
    1112:	9c 83       	std	Y+4, r25	; 0x04
    1114:	8b 83       	std	Y+3, r24	; 0x03
    int i=0; ;
    1116:	1a 82       	std	Y+2, r1	; 0x02
    1118:	19 82       	std	Y+1, r1	; 0x01
    111a:	0f c0       	rjmp	.+30     	; 0x113a <LCD_display_string+0x34>
    while(a[i]!='\0')
    {
       LCD_data(a[i]);
    111c:	29 81       	ldd	r18, Y+1	; 0x01
    111e:	3a 81       	ldd	r19, Y+2	; 0x02
    1120:	8b 81       	ldd	r24, Y+3	; 0x03
    1122:	9c 81       	ldd	r25, Y+4	; 0x04
    1124:	fc 01       	movw	r30, r24
    1126:	e2 0f       	add	r30, r18
    1128:	f3 1f       	adc	r31, r19
    112a:	80 81       	ld	r24, Z
    112c:	0e 94 41 00 	call	0x82	; 0x82 <LCD_data>
        i++;
    1130:	89 81       	ldd	r24, Y+1	; 0x01
    1132:	9a 81       	ldd	r25, Y+2	; 0x02
    1134:	01 96       	adiw	r24, 0x01	; 1
    1136:	9a 83       	std	Y+2, r25	; 0x02
    1138:	89 83       	std	Y+1, r24	; 0x01
     LCD_data(a);
}
void LCD_display_string (unsigned char *a)
{
    int i=0; ;
    while(a[i]!='\0')
    113a:	29 81       	ldd	r18, Y+1	; 0x01
    113c:	3a 81       	ldd	r19, Y+2	; 0x02
    113e:	8b 81       	ldd	r24, Y+3	; 0x03
    1140:	9c 81       	ldd	r25, Y+4	; 0x04
    1142:	fc 01       	movw	r30, r24
    1144:	e2 0f       	add	r30, r18
    1146:	f3 1f       	adc	r31, r19
    1148:	80 81       	ld	r24, Z
    114a:	88 23       	and	r24, r24
    114c:	39 f7       	brne	.-50     	; 0x111c <LCD_display_string+0x16>
    {
       LCD_data(a[i]);
        i++;
    }
}
    114e:	0f 90       	pop	r0
    1150:	0f 90       	pop	r0
    1152:	0f 90       	pop	r0
    1154:	0f 90       	pop	r0
    1156:	cf 91       	pop	r28
    1158:	df 91       	pop	r29
    115a:	08 95       	ret

0000115c <LCD_display_string_byloc>:
void LCD_display_string_byloc (unsigned char *a,int raw ,int col)
{
    115c:	df 93       	push	r29
    115e:	cf 93       	push	r28
    1160:	cd b7       	in	r28, 0x3d	; 61
    1162:	de b7       	in	r29, 0x3e	; 62
    1164:	28 97       	sbiw	r28, 0x08	; 8
    1166:	0f b6       	in	r0, 0x3f	; 63
    1168:	f8 94       	cli
    116a:	de bf       	out	0x3e, r29	; 62
    116c:	0f be       	out	0x3f, r0	; 63
    116e:	cd bf       	out	0x3d, r28	; 61
    1170:	9a 83       	std	Y+2, r25	; 0x02
    1172:	89 83       	std	Y+1, r24	; 0x01
    1174:	7c 83       	std	Y+4, r23	; 0x04
    1176:	6b 83       	std	Y+3, r22	; 0x03
    1178:	5e 83       	std	Y+6, r21	; 0x06
    117a:	4d 83       	std	Y+5, r20	; 0x05
    switch(raw)
    117c:	8b 81       	ldd	r24, Y+3	; 0x03
    117e:	9c 81       	ldd	r25, Y+4	; 0x04
    1180:	98 87       	std	Y+8, r25	; 0x08
    1182:	8f 83       	std	Y+7, r24	; 0x07
    1184:	8f 81       	ldd	r24, Y+7	; 0x07
    1186:	98 85       	ldd	r25, Y+8	; 0x08
    1188:	81 30       	cpi	r24, 0x01	; 1
    118a:	91 05       	cpc	r25, r1
    118c:	31 f0       	breq	.+12     	; 0x119a <LCD_display_string_byloc+0x3e>
    118e:	8f 81       	ldd	r24, Y+7	; 0x07
    1190:	98 85       	ldd	r25, Y+8	; 0x08
    1192:	82 30       	cpi	r24, 0x02	; 2
    1194:	91 05       	cpc	r25, r1
    1196:	51 f0       	breq	.+20     	; 0x11ac <LCD_display_string_byloc+0x50>
    1198:	12 c0       	rjmp	.+36     	; 0x11be <LCD_display_string_byloc+0x62>
    {
    case 1 :
        {
            LCD_cmd(col | 0x80);
    119a:	8d 81       	ldd	r24, Y+5	; 0x05
    119c:	80 68       	ori	r24, 0x80	; 128
    119e:	0e 94 52 04 	call	0x8a4	; 0x8a4 <LCD_cmd>
            LCD_display_string(a);
    11a2:	89 81       	ldd	r24, Y+1	; 0x01
    11a4:	9a 81       	ldd	r25, Y+2	; 0x02
    11a6:	0e 94 83 08 	call	0x1106	; 0x1106 <LCD_display_string>
    11aa:	09 c0       	rjmp	.+18     	; 0x11be <LCD_display_string_byloc+0x62>
            break;
        }
     case 2 :
        {
            LCD_cmd((col+0x40) | 0x80);
    11ac:	8d 81       	ldd	r24, Y+5	; 0x05
    11ae:	80 5c       	subi	r24, 0xC0	; 192
    11b0:	80 68       	ori	r24, 0x80	; 128
    11b2:	0e 94 52 04 	call	0x8a4	; 0x8a4 <LCD_cmd>
            LCD_display_string(a);
    11b6:	89 81       	ldd	r24, Y+1	; 0x01
    11b8:	9a 81       	ldd	r25, Y+2	; 0x02
    11ba:	0e 94 83 08 	call	0x1106	; 0x1106 <LCD_display_string>
            break;
        }
    }
}
    11be:	28 96       	adiw	r28, 0x08	; 8
    11c0:	0f b6       	in	r0, 0x3f	; 63
    11c2:	f8 94       	cli
    11c4:	de bf       	out	0x3e, r29	; 62
    11c6:	0f be       	out	0x3f, r0	; 63
    11c8:	cd bf       	out	0x3d, r28	; 61
    11ca:	cf 91       	pop	r28
    11cc:	df 91       	pop	r29
    11ce:	08 95       	ret

000011d0 <main>:
int main(void)
{
    11d0:	df 93       	push	r29
    11d2:	cf 93       	push	r28
    11d4:	cd b7       	in	r28, 0x3d	; 61
    11d6:	de b7       	in	r29, 0x3e	; 62
   DDRC =0xff;
    11d8:	e4 e3       	ldi	r30, 0x34	; 52
    11da:	f0 e0       	ldi	r31, 0x00	; 0
    11dc:	8f ef       	ldi	r24, 0xFF	; 255
    11de:	80 83       	st	Z, r24
   DDRD =0xff;
    11e0:	e1 e3       	ldi	r30, 0x31	; 49
    11e2:	f0 e0       	ldi	r31, 0x00	; 0
    11e4:	8f ef       	ldi	r24, 0xFF	; 255
    11e6:	80 83       	st	Z, r24
  LCD_intialize ();
    11e8:	0e 94 63 08 	call	0x10c6	; 0x10c6 <LCD_intialize>
   LCD_display_string_byloc("ahmad",2,5);
    11ec:	80 e6       	ldi	r24, 0x60	; 96
    11ee:	90 e0       	ldi	r25, 0x00	; 0
    11f0:	62 e0       	ldi	r22, 0x02	; 2
    11f2:	70 e0       	ldi	r23, 0x00	; 0
    11f4:	45 e0       	ldi	r20, 0x05	; 5
    11f6:	50 e0       	ldi	r21, 0x00	; 0
    11f8:	0e 94 ae 08 	call	0x115c	; 0x115c <LCD_display_string_byloc>
    11fc:	ff cf       	rjmp	.-2      	; 0x11fc <main+0x2c>

000011fe <__fixunssfsi>:
    11fe:	ef 92       	push	r14
    1200:	ff 92       	push	r15
    1202:	0f 93       	push	r16
    1204:	1f 93       	push	r17
    1206:	7b 01       	movw	r14, r22
    1208:	8c 01       	movw	r16, r24
    120a:	20 e0       	ldi	r18, 0x00	; 0
    120c:	30 e0       	ldi	r19, 0x00	; 0
    120e:	40 e0       	ldi	r20, 0x00	; 0
    1210:	5f e4       	ldi	r21, 0x4F	; 79
    1212:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <__gesf2>
    1216:	88 23       	and	r24, r24
    1218:	8c f0       	brlt	.+34     	; 0x123c <__fixunssfsi+0x3e>
    121a:	c8 01       	movw	r24, r16
    121c:	b7 01       	movw	r22, r14
    121e:	20 e0       	ldi	r18, 0x00	; 0
    1220:	30 e0       	ldi	r19, 0x00	; 0
    1222:	40 e0       	ldi	r20, 0x00	; 0
    1224:	5f e4       	ldi	r21, 0x4F	; 79
    1226:	0e 94 77 0a 	call	0x14ee	; 0x14ee <__subsf3>
    122a:	0e 94 5f 0c 	call	0x18be	; 0x18be <__fixsfsi>
    122e:	9b 01       	movw	r18, r22
    1230:	ac 01       	movw	r20, r24
    1232:	20 50       	subi	r18, 0x00	; 0
    1234:	30 40       	sbci	r19, 0x00	; 0
    1236:	40 40       	sbci	r20, 0x00	; 0
    1238:	50 48       	sbci	r21, 0x80	; 128
    123a:	06 c0       	rjmp	.+12     	; 0x1248 <__fixunssfsi+0x4a>
    123c:	c8 01       	movw	r24, r16
    123e:	b7 01       	movw	r22, r14
    1240:	0e 94 5f 0c 	call	0x18be	; 0x18be <__fixsfsi>
    1244:	9b 01       	movw	r18, r22
    1246:	ac 01       	movw	r20, r24
    1248:	b9 01       	movw	r22, r18
    124a:	ca 01       	movw	r24, r20
    124c:	1f 91       	pop	r17
    124e:	0f 91       	pop	r16
    1250:	ff 90       	pop	r15
    1252:	ef 90       	pop	r14
    1254:	08 95       	ret

00001256 <_fpadd_parts>:
    1256:	a0 e0       	ldi	r26, 0x00	; 0
    1258:	b0 e0       	ldi	r27, 0x00	; 0
    125a:	e1 e3       	ldi	r30, 0x31	; 49
    125c:	f9 e0       	ldi	r31, 0x09	; 9
    125e:	0c 94 59 0e 	jmp	0x1cb2	; 0x1cb2 <__prologue_saves__>
    1262:	dc 01       	movw	r26, r24
    1264:	2b 01       	movw	r4, r22
    1266:	fa 01       	movw	r30, r20
    1268:	9c 91       	ld	r25, X
    126a:	92 30       	cpi	r25, 0x02	; 2
    126c:	08 f4       	brcc	.+2      	; 0x1270 <_fpadd_parts+0x1a>
    126e:	39 c1       	rjmp	.+626    	; 0x14e2 <_fpadd_parts+0x28c>
    1270:	eb 01       	movw	r28, r22
    1272:	88 81       	ld	r24, Y
    1274:	82 30       	cpi	r24, 0x02	; 2
    1276:	08 f4       	brcc	.+2      	; 0x127a <_fpadd_parts+0x24>
    1278:	33 c1       	rjmp	.+614    	; 0x14e0 <_fpadd_parts+0x28a>
    127a:	94 30       	cpi	r25, 0x04	; 4
    127c:	69 f4       	brne	.+26     	; 0x1298 <_fpadd_parts+0x42>
    127e:	84 30       	cpi	r24, 0x04	; 4
    1280:	09 f0       	breq	.+2      	; 0x1284 <_fpadd_parts+0x2e>
    1282:	2f c1       	rjmp	.+606    	; 0x14e2 <_fpadd_parts+0x28c>
    1284:	11 96       	adiw	r26, 0x01	; 1
    1286:	9c 91       	ld	r25, X
    1288:	11 97       	sbiw	r26, 0x01	; 1
    128a:	89 81       	ldd	r24, Y+1	; 0x01
    128c:	98 17       	cp	r25, r24
    128e:	09 f4       	brne	.+2      	; 0x1292 <_fpadd_parts+0x3c>
    1290:	28 c1       	rjmp	.+592    	; 0x14e2 <_fpadd_parts+0x28c>
    1292:	a6 e6       	ldi	r26, 0x66	; 102
    1294:	b0 e0       	ldi	r27, 0x00	; 0
    1296:	25 c1       	rjmp	.+586    	; 0x14e2 <_fpadd_parts+0x28c>
    1298:	84 30       	cpi	r24, 0x04	; 4
    129a:	09 f4       	brne	.+2      	; 0x129e <_fpadd_parts+0x48>
    129c:	21 c1       	rjmp	.+578    	; 0x14e0 <_fpadd_parts+0x28a>
    129e:	82 30       	cpi	r24, 0x02	; 2
    12a0:	a9 f4       	brne	.+42     	; 0x12cc <_fpadd_parts+0x76>
    12a2:	92 30       	cpi	r25, 0x02	; 2
    12a4:	09 f0       	breq	.+2      	; 0x12a8 <_fpadd_parts+0x52>
    12a6:	1d c1       	rjmp	.+570    	; 0x14e2 <_fpadd_parts+0x28c>
    12a8:	9a 01       	movw	r18, r20
    12aa:	ad 01       	movw	r20, r26
    12ac:	88 e0       	ldi	r24, 0x08	; 8
    12ae:	ea 01       	movw	r28, r20
    12b0:	09 90       	ld	r0, Y+
    12b2:	ae 01       	movw	r20, r28
    12b4:	e9 01       	movw	r28, r18
    12b6:	09 92       	st	Y+, r0
    12b8:	9e 01       	movw	r18, r28
    12ba:	81 50       	subi	r24, 0x01	; 1
    12bc:	c1 f7       	brne	.-16     	; 0x12ae <_fpadd_parts+0x58>
    12be:	e2 01       	movw	r28, r4
    12c0:	89 81       	ldd	r24, Y+1	; 0x01
    12c2:	11 96       	adiw	r26, 0x01	; 1
    12c4:	9c 91       	ld	r25, X
    12c6:	89 23       	and	r24, r25
    12c8:	81 83       	std	Z+1, r24	; 0x01
    12ca:	08 c1       	rjmp	.+528    	; 0x14dc <_fpadd_parts+0x286>
    12cc:	92 30       	cpi	r25, 0x02	; 2
    12ce:	09 f4       	brne	.+2      	; 0x12d2 <_fpadd_parts+0x7c>
    12d0:	07 c1       	rjmp	.+526    	; 0x14e0 <_fpadd_parts+0x28a>
    12d2:	12 96       	adiw	r26, 0x02	; 2
    12d4:	2d 90       	ld	r2, X+
    12d6:	3c 90       	ld	r3, X
    12d8:	13 97       	sbiw	r26, 0x03	; 3
    12da:	eb 01       	movw	r28, r22
    12dc:	8a 81       	ldd	r24, Y+2	; 0x02
    12de:	9b 81       	ldd	r25, Y+3	; 0x03
    12e0:	14 96       	adiw	r26, 0x04	; 4
    12e2:	ad 90       	ld	r10, X+
    12e4:	bd 90       	ld	r11, X+
    12e6:	cd 90       	ld	r12, X+
    12e8:	dc 90       	ld	r13, X
    12ea:	17 97       	sbiw	r26, 0x07	; 7
    12ec:	ec 80       	ldd	r14, Y+4	; 0x04
    12ee:	fd 80       	ldd	r15, Y+5	; 0x05
    12f0:	0e 81       	ldd	r16, Y+6	; 0x06
    12f2:	1f 81       	ldd	r17, Y+7	; 0x07
    12f4:	91 01       	movw	r18, r2
    12f6:	28 1b       	sub	r18, r24
    12f8:	39 0b       	sbc	r19, r25
    12fa:	b9 01       	movw	r22, r18
    12fc:	37 ff       	sbrs	r19, 7
    12fe:	04 c0       	rjmp	.+8      	; 0x1308 <_fpadd_parts+0xb2>
    1300:	66 27       	eor	r22, r22
    1302:	77 27       	eor	r23, r23
    1304:	62 1b       	sub	r22, r18
    1306:	73 0b       	sbc	r23, r19
    1308:	60 32       	cpi	r22, 0x20	; 32
    130a:	71 05       	cpc	r23, r1
    130c:	0c f0       	brlt	.+2      	; 0x1310 <_fpadd_parts+0xba>
    130e:	61 c0       	rjmp	.+194    	; 0x13d2 <_fpadd_parts+0x17c>
    1310:	12 16       	cp	r1, r18
    1312:	13 06       	cpc	r1, r19
    1314:	6c f5       	brge	.+90     	; 0x1370 <_fpadd_parts+0x11a>
    1316:	37 01       	movw	r6, r14
    1318:	48 01       	movw	r8, r16
    131a:	06 2e       	mov	r0, r22
    131c:	04 c0       	rjmp	.+8      	; 0x1326 <_fpadd_parts+0xd0>
    131e:	96 94       	lsr	r9
    1320:	87 94       	ror	r8
    1322:	77 94       	ror	r7
    1324:	67 94       	ror	r6
    1326:	0a 94       	dec	r0
    1328:	d2 f7       	brpl	.-12     	; 0x131e <_fpadd_parts+0xc8>
    132a:	21 e0       	ldi	r18, 0x01	; 1
    132c:	30 e0       	ldi	r19, 0x00	; 0
    132e:	40 e0       	ldi	r20, 0x00	; 0
    1330:	50 e0       	ldi	r21, 0x00	; 0
    1332:	04 c0       	rjmp	.+8      	; 0x133c <_fpadd_parts+0xe6>
    1334:	22 0f       	add	r18, r18
    1336:	33 1f       	adc	r19, r19
    1338:	44 1f       	adc	r20, r20
    133a:	55 1f       	adc	r21, r21
    133c:	6a 95       	dec	r22
    133e:	d2 f7       	brpl	.-12     	; 0x1334 <_fpadd_parts+0xde>
    1340:	21 50       	subi	r18, 0x01	; 1
    1342:	30 40       	sbci	r19, 0x00	; 0
    1344:	40 40       	sbci	r20, 0x00	; 0
    1346:	50 40       	sbci	r21, 0x00	; 0
    1348:	2e 21       	and	r18, r14
    134a:	3f 21       	and	r19, r15
    134c:	40 23       	and	r20, r16
    134e:	51 23       	and	r21, r17
    1350:	21 15       	cp	r18, r1
    1352:	31 05       	cpc	r19, r1
    1354:	41 05       	cpc	r20, r1
    1356:	51 05       	cpc	r21, r1
    1358:	21 f0       	breq	.+8      	; 0x1362 <_fpadd_parts+0x10c>
    135a:	21 e0       	ldi	r18, 0x01	; 1
    135c:	30 e0       	ldi	r19, 0x00	; 0
    135e:	40 e0       	ldi	r20, 0x00	; 0
    1360:	50 e0       	ldi	r21, 0x00	; 0
    1362:	79 01       	movw	r14, r18
    1364:	8a 01       	movw	r16, r20
    1366:	e6 28       	or	r14, r6
    1368:	f7 28       	or	r15, r7
    136a:	08 29       	or	r16, r8
    136c:	19 29       	or	r17, r9
    136e:	3c c0       	rjmp	.+120    	; 0x13e8 <_fpadd_parts+0x192>
    1370:	23 2b       	or	r18, r19
    1372:	d1 f1       	breq	.+116    	; 0x13e8 <_fpadd_parts+0x192>
    1374:	26 0e       	add	r2, r22
    1376:	37 1e       	adc	r3, r23
    1378:	35 01       	movw	r6, r10
    137a:	46 01       	movw	r8, r12
    137c:	06 2e       	mov	r0, r22
    137e:	04 c0       	rjmp	.+8      	; 0x1388 <_fpadd_parts+0x132>
    1380:	96 94       	lsr	r9
    1382:	87 94       	ror	r8
    1384:	77 94       	ror	r7
    1386:	67 94       	ror	r6
    1388:	0a 94       	dec	r0
    138a:	d2 f7       	brpl	.-12     	; 0x1380 <_fpadd_parts+0x12a>
    138c:	21 e0       	ldi	r18, 0x01	; 1
    138e:	30 e0       	ldi	r19, 0x00	; 0
    1390:	40 e0       	ldi	r20, 0x00	; 0
    1392:	50 e0       	ldi	r21, 0x00	; 0
    1394:	04 c0       	rjmp	.+8      	; 0x139e <_fpadd_parts+0x148>
    1396:	22 0f       	add	r18, r18
    1398:	33 1f       	adc	r19, r19
    139a:	44 1f       	adc	r20, r20
    139c:	55 1f       	adc	r21, r21
    139e:	6a 95       	dec	r22
    13a0:	d2 f7       	brpl	.-12     	; 0x1396 <_fpadd_parts+0x140>
    13a2:	21 50       	subi	r18, 0x01	; 1
    13a4:	30 40       	sbci	r19, 0x00	; 0
    13a6:	40 40       	sbci	r20, 0x00	; 0
    13a8:	50 40       	sbci	r21, 0x00	; 0
    13aa:	2a 21       	and	r18, r10
    13ac:	3b 21       	and	r19, r11
    13ae:	4c 21       	and	r20, r12
    13b0:	5d 21       	and	r21, r13
    13b2:	21 15       	cp	r18, r1
    13b4:	31 05       	cpc	r19, r1
    13b6:	41 05       	cpc	r20, r1
    13b8:	51 05       	cpc	r21, r1
    13ba:	21 f0       	breq	.+8      	; 0x13c4 <_fpadd_parts+0x16e>
    13bc:	21 e0       	ldi	r18, 0x01	; 1
    13be:	30 e0       	ldi	r19, 0x00	; 0
    13c0:	40 e0       	ldi	r20, 0x00	; 0
    13c2:	50 e0       	ldi	r21, 0x00	; 0
    13c4:	59 01       	movw	r10, r18
    13c6:	6a 01       	movw	r12, r20
    13c8:	a6 28       	or	r10, r6
    13ca:	b7 28       	or	r11, r7
    13cc:	c8 28       	or	r12, r8
    13ce:	d9 28       	or	r13, r9
    13d0:	0b c0       	rjmp	.+22     	; 0x13e8 <_fpadd_parts+0x192>
    13d2:	82 15       	cp	r24, r2
    13d4:	93 05       	cpc	r25, r3
    13d6:	2c f0       	brlt	.+10     	; 0x13e2 <_fpadd_parts+0x18c>
    13d8:	1c 01       	movw	r2, r24
    13da:	aa 24       	eor	r10, r10
    13dc:	bb 24       	eor	r11, r11
    13de:	65 01       	movw	r12, r10
    13e0:	03 c0       	rjmp	.+6      	; 0x13e8 <_fpadd_parts+0x192>
    13e2:	ee 24       	eor	r14, r14
    13e4:	ff 24       	eor	r15, r15
    13e6:	87 01       	movw	r16, r14
    13e8:	11 96       	adiw	r26, 0x01	; 1
    13ea:	9c 91       	ld	r25, X
    13ec:	d2 01       	movw	r26, r4
    13ee:	11 96       	adiw	r26, 0x01	; 1
    13f0:	8c 91       	ld	r24, X
    13f2:	98 17       	cp	r25, r24
    13f4:	09 f4       	brne	.+2      	; 0x13f8 <_fpadd_parts+0x1a2>
    13f6:	45 c0       	rjmp	.+138    	; 0x1482 <_fpadd_parts+0x22c>
    13f8:	99 23       	and	r25, r25
    13fa:	39 f0       	breq	.+14     	; 0x140a <_fpadd_parts+0x1b4>
    13fc:	a8 01       	movw	r20, r16
    13fe:	97 01       	movw	r18, r14
    1400:	2a 19       	sub	r18, r10
    1402:	3b 09       	sbc	r19, r11
    1404:	4c 09       	sbc	r20, r12
    1406:	5d 09       	sbc	r21, r13
    1408:	06 c0       	rjmp	.+12     	; 0x1416 <_fpadd_parts+0x1c0>
    140a:	a6 01       	movw	r20, r12
    140c:	95 01       	movw	r18, r10
    140e:	2e 19       	sub	r18, r14
    1410:	3f 09       	sbc	r19, r15
    1412:	40 0b       	sbc	r20, r16
    1414:	51 0b       	sbc	r21, r17
    1416:	57 fd       	sbrc	r21, 7
    1418:	08 c0       	rjmp	.+16     	; 0x142a <_fpadd_parts+0x1d4>
    141a:	11 82       	std	Z+1, r1	; 0x01
    141c:	33 82       	std	Z+3, r3	; 0x03
    141e:	22 82       	std	Z+2, r2	; 0x02
    1420:	24 83       	std	Z+4, r18	; 0x04
    1422:	35 83       	std	Z+5, r19	; 0x05
    1424:	46 83       	std	Z+6, r20	; 0x06
    1426:	57 83       	std	Z+7, r21	; 0x07
    1428:	1d c0       	rjmp	.+58     	; 0x1464 <_fpadd_parts+0x20e>
    142a:	81 e0       	ldi	r24, 0x01	; 1
    142c:	81 83       	std	Z+1, r24	; 0x01
    142e:	33 82       	std	Z+3, r3	; 0x03
    1430:	22 82       	std	Z+2, r2	; 0x02
    1432:	88 27       	eor	r24, r24
    1434:	99 27       	eor	r25, r25
    1436:	dc 01       	movw	r26, r24
    1438:	82 1b       	sub	r24, r18
    143a:	93 0b       	sbc	r25, r19
    143c:	a4 0b       	sbc	r26, r20
    143e:	b5 0b       	sbc	r27, r21
    1440:	84 83       	std	Z+4, r24	; 0x04
    1442:	95 83       	std	Z+5, r25	; 0x05
    1444:	a6 83       	std	Z+6, r26	; 0x06
    1446:	b7 83       	std	Z+7, r27	; 0x07
    1448:	0d c0       	rjmp	.+26     	; 0x1464 <_fpadd_parts+0x20e>
    144a:	22 0f       	add	r18, r18
    144c:	33 1f       	adc	r19, r19
    144e:	44 1f       	adc	r20, r20
    1450:	55 1f       	adc	r21, r21
    1452:	24 83       	std	Z+4, r18	; 0x04
    1454:	35 83       	std	Z+5, r19	; 0x05
    1456:	46 83       	std	Z+6, r20	; 0x06
    1458:	57 83       	std	Z+7, r21	; 0x07
    145a:	82 81       	ldd	r24, Z+2	; 0x02
    145c:	93 81       	ldd	r25, Z+3	; 0x03
    145e:	01 97       	sbiw	r24, 0x01	; 1
    1460:	93 83       	std	Z+3, r25	; 0x03
    1462:	82 83       	std	Z+2, r24	; 0x02
    1464:	24 81       	ldd	r18, Z+4	; 0x04
    1466:	35 81       	ldd	r19, Z+5	; 0x05
    1468:	46 81       	ldd	r20, Z+6	; 0x06
    146a:	57 81       	ldd	r21, Z+7	; 0x07
    146c:	da 01       	movw	r26, r20
    146e:	c9 01       	movw	r24, r18
    1470:	01 97       	sbiw	r24, 0x01	; 1
    1472:	a1 09       	sbc	r26, r1
    1474:	b1 09       	sbc	r27, r1
    1476:	8f 5f       	subi	r24, 0xFF	; 255
    1478:	9f 4f       	sbci	r25, 0xFF	; 255
    147a:	af 4f       	sbci	r26, 0xFF	; 255
    147c:	bf 43       	sbci	r27, 0x3F	; 63
    147e:	28 f3       	brcs	.-54     	; 0x144a <_fpadd_parts+0x1f4>
    1480:	0b c0       	rjmp	.+22     	; 0x1498 <_fpadd_parts+0x242>
    1482:	91 83       	std	Z+1, r25	; 0x01
    1484:	33 82       	std	Z+3, r3	; 0x03
    1486:	22 82       	std	Z+2, r2	; 0x02
    1488:	ea 0c       	add	r14, r10
    148a:	fb 1c       	adc	r15, r11
    148c:	0c 1d       	adc	r16, r12
    148e:	1d 1d       	adc	r17, r13
    1490:	e4 82       	std	Z+4, r14	; 0x04
    1492:	f5 82       	std	Z+5, r15	; 0x05
    1494:	06 83       	std	Z+6, r16	; 0x06
    1496:	17 83       	std	Z+7, r17	; 0x07
    1498:	83 e0       	ldi	r24, 0x03	; 3
    149a:	80 83       	st	Z, r24
    149c:	24 81       	ldd	r18, Z+4	; 0x04
    149e:	35 81       	ldd	r19, Z+5	; 0x05
    14a0:	46 81       	ldd	r20, Z+6	; 0x06
    14a2:	57 81       	ldd	r21, Z+7	; 0x07
    14a4:	57 ff       	sbrs	r21, 7
    14a6:	1a c0       	rjmp	.+52     	; 0x14dc <_fpadd_parts+0x286>
    14a8:	c9 01       	movw	r24, r18
    14aa:	aa 27       	eor	r26, r26
    14ac:	97 fd       	sbrc	r25, 7
    14ae:	a0 95       	com	r26
    14b0:	ba 2f       	mov	r27, r26
    14b2:	81 70       	andi	r24, 0x01	; 1
    14b4:	90 70       	andi	r25, 0x00	; 0
    14b6:	a0 70       	andi	r26, 0x00	; 0
    14b8:	b0 70       	andi	r27, 0x00	; 0
    14ba:	56 95       	lsr	r21
    14bc:	47 95       	ror	r20
    14be:	37 95       	ror	r19
    14c0:	27 95       	ror	r18
    14c2:	82 2b       	or	r24, r18
    14c4:	93 2b       	or	r25, r19
    14c6:	a4 2b       	or	r26, r20
    14c8:	b5 2b       	or	r27, r21
    14ca:	84 83       	std	Z+4, r24	; 0x04
    14cc:	95 83       	std	Z+5, r25	; 0x05
    14ce:	a6 83       	std	Z+6, r26	; 0x06
    14d0:	b7 83       	std	Z+7, r27	; 0x07
    14d2:	82 81       	ldd	r24, Z+2	; 0x02
    14d4:	93 81       	ldd	r25, Z+3	; 0x03
    14d6:	01 96       	adiw	r24, 0x01	; 1
    14d8:	93 83       	std	Z+3, r25	; 0x03
    14da:	82 83       	std	Z+2, r24	; 0x02
    14dc:	df 01       	movw	r26, r30
    14de:	01 c0       	rjmp	.+2      	; 0x14e2 <_fpadd_parts+0x28c>
    14e0:	d2 01       	movw	r26, r4
    14e2:	cd 01       	movw	r24, r26
    14e4:	cd b7       	in	r28, 0x3d	; 61
    14e6:	de b7       	in	r29, 0x3e	; 62
    14e8:	e2 e1       	ldi	r30, 0x12	; 18
    14ea:	0c 94 75 0e 	jmp	0x1cea	; 0x1cea <__epilogue_restores__>

000014ee <__subsf3>:
    14ee:	a0 e2       	ldi	r26, 0x20	; 32
    14f0:	b0 e0       	ldi	r27, 0x00	; 0
    14f2:	ed e7       	ldi	r30, 0x7D	; 125
    14f4:	fa e0       	ldi	r31, 0x0A	; 10
    14f6:	0c 94 65 0e 	jmp	0x1cca	; 0x1cca <__prologue_saves__+0x18>
    14fa:	69 83       	std	Y+1, r22	; 0x01
    14fc:	7a 83       	std	Y+2, r23	; 0x02
    14fe:	8b 83       	std	Y+3, r24	; 0x03
    1500:	9c 83       	std	Y+4, r25	; 0x04
    1502:	2d 83       	std	Y+5, r18	; 0x05
    1504:	3e 83       	std	Y+6, r19	; 0x06
    1506:	4f 83       	std	Y+7, r20	; 0x07
    1508:	58 87       	std	Y+8, r21	; 0x08
    150a:	e9 e0       	ldi	r30, 0x09	; 9
    150c:	ee 2e       	mov	r14, r30
    150e:	f1 2c       	mov	r15, r1
    1510:	ec 0e       	add	r14, r28
    1512:	fd 1e       	adc	r15, r29
    1514:	ce 01       	movw	r24, r28
    1516:	01 96       	adiw	r24, 0x01	; 1
    1518:	b7 01       	movw	r22, r14
    151a:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <__unpack_f>
    151e:	8e 01       	movw	r16, r28
    1520:	0f 5e       	subi	r16, 0xEF	; 239
    1522:	1f 4f       	sbci	r17, 0xFF	; 255
    1524:	ce 01       	movw	r24, r28
    1526:	05 96       	adiw	r24, 0x05	; 5
    1528:	b8 01       	movw	r22, r16
    152a:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <__unpack_f>
    152e:	8a 89       	ldd	r24, Y+18	; 0x12
    1530:	91 e0       	ldi	r25, 0x01	; 1
    1532:	89 27       	eor	r24, r25
    1534:	8a 8b       	std	Y+18, r24	; 0x12
    1536:	c7 01       	movw	r24, r14
    1538:	b8 01       	movw	r22, r16
    153a:	ae 01       	movw	r20, r28
    153c:	47 5e       	subi	r20, 0xE7	; 231
    153e:	5f 4f       	sbci	r21, 0xFF	; 255
    1540:	0e 94 2b 09 	call	0x1256	; 0x1256 <_fpadd_parts>
    1544:	0e 94 b3 0c 	call	0x1966	; 0x1966 <__pack_f>
    1548:	a0 96       	adiw	r28, 0x20	; 32
    154a:	e6 e0       	ldi	r30, 0x06	; 6
    154c:	0c 94 81 0e 	jmp	0x1d02	; 0x1d02 <__epilogue_restores__+0x18>

00001550 <__addsf3>:
    1550:	a0 e2       	ldi	r26, 0x20	; 32
    1552:	b0 e0       	ldi	r27, 0x00	; 0
    1554:	ee ea       	ldi	r30, 0xAE	; 174
    1556:	fa e0       	ldi	r31, 0x0A	; 10
    1558:	0c 94 65 0e 	jmp	0x1cca	; 0x1cca <__prologue_saves__+0x18>
    155c:	69 83       	std	Y+1, r22	; 0x01
    155e:	7a 83       	std	Y+2, r23	; 0x02
    1560:	8b 83       	std	Y+3, r24	; 0x03
    1562:	9c 83       	std	Y+4, r25	; 0x04
    1564:	2d 83       	std	Y+5, r18	; 0x05
    1566:	3e 83       	std	Y+6, r19	; 0x06
    1568:	4f 83       	std	Y+7, r20	; 0x07
    156a:	58 87       	std	Y+8, r21	; 0x08
    156c:	f9 e0       	ldi	r31, 0x09	; 9
    156e:	ef 2e       	mov	r14, r31
    1570:	f1 2c       	mov	r15, r1
    1572:	ec 0e       	add	r14, r28
    1574:	fd 1e       	adc	r15, r29
    1576:	ce 01       	movw	r24, r28
    1578:	01 96       	adiw	r24, 0x01	; 1
    157a:	b7 01       	movw	r22, r14
    157c:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <__unpack_f>
    1580:	8e 01       	movw	r16, r28
    1582:	0f 5e       	subi	r16, 0xEF	; 239
    1584:	1f 4f       	sbci	r17, 0xFF	; 255
    1586:	ce 01       	movw	r24, r28
    1588:	05 96       	adiw	r24, 0x05	; 5
    158a:	b8 01       	movw	r22, r16
    158c:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <__unpack_f>
    1590:	c7 01       	movw	r24, r14
    1592:	b8 01       	movw	r22, r16
    1594:	ae 01       	movw	r20, r28
    1596:	47 5e       	subi	r20, 0xE7	; 231
    1598:	5f 4f       	sbci	r21, 0xFF	; 255
    159a:	0e 94 2b 09 	call	0x1256	; 0x1256 <_fpadd_parts>
    159e:	0e 94 b3 0c 	call	0x1966	; 0x1966 <__pack_f>
    15a2:	a0 96       	adiw	r28, 0x20	; 32
    15a4:	e6 e0       	ldi	r30, 0x06	; 6
    15a6:	0c 94 81 0e 	jmp	0x1d02	; 0x1d02 <__epilogue_restores__+0x18>

000015aa <__mulsf3>:
    15aa:	a0 e2       	ldi	r26, 0x20	; 32
    15ac:	b0 e0       	ldi	r27, 0x00	; 0
    15ae:	eb ed       	ldi	r30, 0xDB	; 219
    15b0:	fa e0       	ldi	r31, 0x0A	; 10
    15b2:	0c 94 59 0e 	jmp	0x1cb2	; 0x1cb2 <__prologue_saves__>
    15b6:	69 83       	std	Y+1, r22	; 0x01
    15b8:	7a 83       	std	Y+2, r23	; 0x02
    15ba:	8b 83       	std	Y+3, r24	; 0x03
    15bc:	9c 83       	std	Y+4, r25	; 0x04
    15be:	2d 83       	std	Y+5, r18	; 0x05
    15c0:	3e 83       	std	Y+6, r19	; 0x06
    15c2:	4f 83       	std	Y+7, r20	; 0x07
    15c4:	58 87       	std	Y+8, r21	; 0x08
    15c6:	ce 01       	movw	r24, r28
    15c8:	01 96       	adiw	r24, 0x01	; 1
    15ca:	be 01       	movw	r22, r28
    15cc:	67 5f       	subi	r22, 0xF7	; 247
    15ce:	7f 4f       	sbci	r23, 0xFF	; 255
    15d0:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <__unpack_f>
    15d4:	ce 01       	movw	r24, r28
    15d6:	05 96       	adiw	r24, 0x05	; 5
    15d8:	be 01       	movw	r22, r28
    15da:	6f 5e       	subi	r22, 0xEF	; 239
    15dc:	7f 4f       	sbci	r23, 0xFF	; 255
    15de:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <__unpack_f>
    15e2:	99 85       	ldd	r25, Y+9	; 0x09
    15e4:	92 30       	cpi	r25, 0x02	; 2
    15e6:	88 f0       	brcs	.+34     	; 0x160a <__mulsf3+0x60>
    15e8:	89 89       	ldd	r24, Y+17	; 0x11
    15ea:	82 30       	cpi	r24, 0x02	; 2
    15ec:	c8 f0       	brcs	.+50     	; 0x1620 <__mulsf3+0x76>
    15ee:	94 30       	cpi	r25, 0x04	; 4
    15f0:	19 f4       	brne	.+6      	; 0x15f8 <__mulsf3+0x4e>
    15f2:	82 30       	cpi	r24, 0x02	; 2
    15f4:	51 f4       	brne	.+20     	; 0x160a <__mulsf3+0x60>
    15f6:	04 c0       	rjmp	.+8      	; 0x1600 <__mulsf3+0x56>
    15f8:	84 30       	cpi	r24, 0x04	; 4
    15fa:	29 f4       	brne	.+10     	; 0x1606 <__mulsf3+0x5c>
    15fc:	92 30       	cpi	r25, 0x02	; 2
    15fe:	81 f4       	brne	.+32     	; 0x1620 <__mulsf3+0x76>
    1600:	86 e6       	ldi	r24, 0x66	; 102
    1602:	90 e0       	ldi	r25, 0x00	; 0
    1604:	c6 c0       	rjmp	.+396    	; 0x1792 <__mulsf3+0x1e8>
    1606:	92 30       	cpi	r25, 0x02	; 2
    1608:	49 f4       	brne	.+18     	; 0x161c <__mulsf3+0x72>
    160a:	20 e0       	ldi	r18, 0x00	; 0
    160c:	9a 85       	ldd	r25, Y+10	; 0x0a
    160e:	8a 89       	ldd	r24, Y+18	; 0x12
    1610:	98 13       	cpse	r25, r24
    1612:	21 e0       	ldi	r18, 0x01	; 1
    1614:	2a 87       	std	Y+10, r18	; 0x0a
    1616:	ce 01       	movw	r24, r28
    1618:	09 96       	adiw	r24, 0x09	; 9
    161a:	bb c0       	rjmp	.+374    	; 0x1792 <__mulsf3+0x1e8>
    161c:	82 30       	cpi	r24, 0x02	; 2
    161e:	49 f4       	brne	.+18     	; 0x1632 <__mulsf3+0x88>
    1620:	20 e0       	ldi	r18, 0x00	; 0
    1622:	9a 85       	ldd	r25, Y+10	; 0x0a
    1624:	8a 89       	ldd	r24, Y+18	; 0x12
    1626:	98 13       	cpse	r25, r24
    1628:	21 e0       	ldi	r18, 0x01	; 1
    162a:	2a 8b       	std	Y+18, r18	; 0x12
    162c:	ce 01       	movw	r24, r28
    162e:	41 96       	adiw	r24, 0x11	; 17
    1630:	b0 c0       	rjmp	.+352    	; 0x1792 <__mulsf3+0x1e8>
    1632:	2d 84       	ldd	r2, Y+13	; 0x0d
    1634:	3e 84       	ldd	r3, Y+14	; 0x0e
    1636:	4f 84       	ldd	r4, Y+15	; 0x0f
    1638:	58 88       	ldd	r5, Y+16	; 0x10
    163a:	6d 88       	ldd	r6, Y+21	; 0x15
    163c:	7e 88       	ldd	r7, Y+22	; 0x16
    163e:	8f 88       	ldd	r8, Y+23	; 0x17
    1640:	98 8c       	ldd	r9, Y+24	; 0x18
    1642:	ee 24       	eor	r14, r14
    1644:	ff 24       	eor	r15, r15
    1646:	87 01       	movw	r16, r14
    1648:	aa 24       	eor	r10, r10
    164a:	bb 24       	eor	r11, r11
    164c:	65 01       	movw	r12, r10
    164e:	40 e0       	ldi	r20, 0x00	; 0
    1650:	50 e0       	ldi	r21, 0x00	; 0
    1652:	60 e0       	ldi	r22, 0x00	; 0
    1654:	70 e0       	ldi	r23, 0x00	; 0
    1656:	e0 e0       	ldi	r30, 0x00	; 0
    1658:	f0 e0       	ldi	r31, 0x00	; 0
    165a:	c1 01       	movw	r24, r2
    165c:	81 70       	andi	r24, 0x01	; 1
    165e:	90 70       	andi	r25, 0x00	; 0
    1660:	89 2b       	or	r24, r25
    1662:	e9 f0       	breq	.+58     	; 0x169e <__mulsf3+0xf4>
    1664:	e6 0c       	add	r14, r6
    1666:	f7 1c       	adc	r15, r7
    1668:	08 1d       	adc	r16, r8
    166a:	19 1d       	adc	r17, r9
    166c:	9a 01       	movw	r18, r20
    166e:	ab 01       	movw	r20, r22
    1670:	2a 0d       	add	r18, r10
    1672:	3b 1d       	adc	r19, r11
    1674:	4c 1d       	adc	r20, r12
    1676:	5d 1d       	adc	r21, r13
    1678:	80 e0       	ldi	r24, 0x00	; 0
    167a:	90 e0       	ldi	r25, 0x00	; 0
    167c:	a0 e0       	ldi	r26, 0x00	; 0
    167e:	b0 e0       	ldi	r27, 0x00	; 0
    1680:	e6 14       	cp	r14, r6
    1682:	f7 04       	cpc	r15, r7
    1684:	08 05       	cpc	r16, r8
    1686:	19 05       	cpc	r17, r9
    1688:	20 f4       	brcc	.+8      	; 0x1692 <__mulsf3+0xe8>
    168a:	81 e0       	ldi	r24, 0x01	; 1
    168c:	90 e0       	ldi	r25, 0x00	; 0
    168e:	a0 e0       	ldi	r26, 0x00	; 0
    1690:	b0 e0       	ldi	r27, 0x00	; 0
    1692:	ba 01       	movw	r22, r20
    1694:	a9 01       	movw	r20, r18
    1696:	48 0f       	add	r20, r24
    1698:	59 1f       	adc	r21, r25
    169a:	6a 1f       	adc	r22, r26
    169c:	7b 1f       	adc	r23, r27
    169e:	aa 0c       	add	r10, r10
    16a0:	bb 1c       	adc	r11, r11
    16a2:	cc 1c       	adc	r12, r12
    16a4:	dd 1c       	adc	r13, r13
    16a6:	97 fe       	sbrs	r9, 7
    16a8:	08 c0       	rjmp	.+16     	; 0x16ba <__mulsf3+0x110>
    16aa:	81 e0       	ldi	r24, 0x01	; 1
    16ac:	90 e0       	ldi	r25, 0x00	; 0
    16ae:	a0 e0       	ldi	r26, 0x00	; 0
    16b0:	b0 e0       	ldi	r27, 0x00	; 0
    16b2:	a8 2a       	or	r10, r24
    16b4:	b9 2a       	or	r11, r25
    16b6:	ca 2a       	or	r12, r26
    16b8:	db 2a       	or	r13, r27
    16ba:	31 96       	adiw	r30, 0x01	; 1
    16bc:	e0 32       	cpi	r30, 0x20	; 32
    16be:	f1 05       	cpc	r31, r1
    16c0:	49 f0       	breq	.+18     	; 0x16d4 <__mulsf3+0x12a>
    16c2:	66 0c       	add	r6, r6
    16c4:	77 1c       	adc	r7, r7
    16c6:	88 1c       	adc	r8, r8
    16c8:	99 1c       	adc	r9, r9
    16ca:	56 94       	lsr	r5
    16cc:	47 94       	ror	r4
    16ce:	37 94       	ror	r3
    16d0:	27 94       	ror	r2
    16d2:	c3 cf       	rjmp	.-122    	; 0x165a <__mulsf3+0xb0>
    16d4:	fa 85       	ldd	r31, Y+10	; 0x0a
    16d6:	ea 89       	ldd	r30, Y+18	; 0x12
    16d8:	2b 89       	ldd	r18, Y+19	; 0x13
    16da:	3c 89       	ldd	r19, Y+20	; 0x14
    16dc:	8b 85       	ldd	r24, Y+11	; 0x0b
    16de:	9c 85       	ldd	r25, Y+12	; 0x0c
    16e0:	28 0f       	add	r18, r24
    16e2:	39 1f       	adc	r19, r25
    16e4:	2e 5f       	subi	r18, 0xFE	; 254
    16e6:	3f 4f       	sbci	r19, 0xFF	; 255
    16e8:	17 c0       	rjmp	.+46     	; 0x1718 <__mulsf3+0x16e>
    16ea:	ca 01       	movw	r24, r20
    16ec:	81 70       	andi	r24, 0x01	; 1
    16ee:	90 70       	andi	r25, 0x00	; 0
    16f0:	89 2b       	or	r24, r25
    16f2:	61 f0       	breq	.+24     	; 0x170c <__mulsf3+0x162>
    16f4:	16 95       	lsr	r17
    16f6:	07 95       	ror	r16
    16f8:	f7 94       	ror	r15
    16fa:	e7 94       	ror	r14
    16fc:	80 e0       	ldi	r24, 0x00	; 0
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	a0 e0       	ldi	r26, 0x00	; 0
    1702:	b0 e8       	ldi	r27, 0x80	; 128
    1704:	e8 2a       	or	r14, r24
    1706:	f9 2a       	or	r15, r25
    1708:	0a 2b       	or	r16, r26
    170a:	1b 2b       	or	r17, r27
    170c:	76 95       	lsr	r23
    170e:	67 95       	ror	r22
    1710:	57 95       	ror	r21
    1712:	47 95       	ror	r20
    1714:	2f 5f       	subi	r18, 0xFF	; 255
    1716:	3f 4f       	sbci	r19, 0xFF	; 255
    1718:	77 fd       	sbrc	r23, 7
    171a:	e7 cf       	rjmp	.-50     	; 0x16ea <__mulsf3+0x140>
    171c:	0c c0       	rjmp	.+24     	; 0x1736 <__mulsf3+0x18c>
    171e:	44 0f       	add	r20, r20
    1720:	55 1f       	adc	r21, r21
    1722:	66 1f       	adc	r22, r22
    1724:	77 1f       	adc	r23, r23
    1726:	17 fd       	sbrc	r17, 7
    1728:	41 60       	ori	r20, 0x01	; 1
    172a:	ee 0c       	add	r14, r14
    172c:	ff 1c       	adc	r15, r15
    172e:	00 1f       	adc	r16, r16
    1730:	11 1f       	adc	r17, r17
    1732:	21 50       	subi	r18, 0x01	; 1
    1734:	30 40       	sbci	r19, 0x00	; 0
    1736:	40 30       	cpi	r20, 0x00	; 0
    1738:	90 e0       	ldi	r25, 0x00	; 0
    173a:	59 07       	cpc	r21, r25
    173c:	90 e0       	ldi	r25, 0x00	; 0
    173e:	69 07       	cpc	r22, r25
    1740:	90 e4       	ldi	r25, 0x40	; 64
    1742:	79 07       	cpc	r23, r25
    1744:	60 f3       	brcs	.-40     	; 0x171e <__mulsf3+0x174>
    1746:	2b 8f       	std	Y+27, r18	; 0x1b
    1748:	3c 8f       	std	Y+28, r19	; 0x1c
    174a:	db 01       	movw	r26, r22
    174c:	ca 01       	movw	r24, r20
    174e:	8f 77       	andi	r24, 0x7F	; 127
    1750:	90 70       	andi	r25, 0x00	; 0
    1752:	a0 70       	andi	r26, 0x00	; 0
    1754:	b0 70       	andi	r27, 0x00	; 0
    1756:	80 34       	cpi	r24, 0x40	; 64
    1758:	91 05       	cpc	r25, r1
    175a:	a1 05       	cpc	r26, r1
    175c:	b1 05       	cpc	r27, r1
    175e:	61 f4       	brne	.+24     	; 0x1778 <__mulsf3+0x1ce>
    1760:	47 fd       	sbrc	r20, 7
    1762:	0a c0       	rjmp	.+20     	; 0x1778 <__mulsf3+0x1ce>
    1764:	e1 14       	cp	r14, r1
    1766:	f1 04       	cpc	r15, r1
    1768:	01 05       	cpc	r16, r1
    176a:	11 05       	cpc	r17, r1
    176c:	29 f0       	breq	.+10     	; 0x1778 <__mulsf3+0x1ce>
    176e:	40 5c       	subi	r20, 0xC0	; 192
    1770:	5f 4f       	sbci	r21, 0xFF	; 255
    1772:	6f 4f       	sbci	r22, 0xFF	; 255
    1774:	7f 4f       	sbci	r23, 0xFF	; 255
    1776:	40 78       	andi	r20, 0x80	; 128
    1778:	1a 8e       	std	Y+26, r1	; 0x1a
    177a:	fe 17       	cp	r31, r30
    177c:	11 f0       	breq	.+4      	; 0x1782 <__mulsf3+0x1d8>
    177e:	81 e0       	ldi	r24, 0x01	; 1
    1780:	8a 8f       	std	Y+26, r24	; 0x1a
    1782:	4d 8f       	std	Y+29, r20	; 0x1d
    1784:	5e 8f       	std	Y+30, r21	; 0x1e
    1786:	6f 8f       	std	Y+31, r22	; 0x1f
    1788:	78 a3       	std	Y+32, r23	; 0x20
    178a:	83 e0       	ldi	r24, 0x03	; 3
    178c:	89 8f       	std	Y+25, r24	; 0x19
    178e:	ce 01       	movw	r24, r28
    1790:	49 96       	adiw	r24, 0x19	; 25
    1792:	0e 94 b3 0c 	call	0x1966	; 0x1966 <__pack_f>
    1796:	a0 96       	adiw	r28, 0x20	; 32
    1798:	e2 e1       	ldi	r30, 0x12	; 18
    179a:	0c 94 75 0e 	jmp	0x1cea	; 0x1cea <__epilogue_restores__>

0000179e <__gtsf2>:
    179e:	a8 e1       	ldi	r26, 0x18	; 24
    17a0:	b0 e0       	ldi	r27, 0x00	; 0
    17a2:	e5 ed       	ldi	r30, 0xD5	; 213
    17a4:	fb e0       	ldi	r31, 0x0B	; 11
    17a6:	0c 94 65 0e 	jmp	0x1cca	; 0x1cca <__prologue_saves__+0x18>
    17aa:	69 83       	std	Y+1, r22	; 0x01
    17ac:	7a 83       	std	Y+2, r23	; 0x02
    17ae:	8b 83       	std	Y+3, r24	; 0x03
    17b0:	9c 83       	std	Y+4, r25	; 0x04
    17b2:	2d 83       	std	Y+5, r18	; 0x05
    17b4:	3e 83       	std	Y+6, r19	; 0x06
    17b6:	4f 83       	std	Y+7, r20	; 0x07
    17b8:	58 87       	std	Y+8, r21	; 0x08
    17ba:	89 e0       	ldi	r24, 0x09	; 9
    17bc:	e8 2e       	mov	r14, r24
    17be:	f1 2c       	mov	r15, r1
    17c0:	ec 0e       	add	r14, r28
    17c2:	fd 1e       	adc	r15, r29
    17c4:	ce 01       	movw	r24, r28
    17c6:	01 96       	adiw	r24, 0x01	; 1
    17c8:	b7 01       	movw	r22, r14
    17ca:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <__unpack_f>
    17ce:	8e 01       	movw	r16, r28
    17d0:	0f 5e       	subi	r16, 0xEF	; 239
    17d2:	1f 4f       	sbci	r17, 0xFF	; 255
    17d4:	ce 01       	movw	r24, r28
    17d6:	05 96       	adiw	r24, 0x05	; 5
    17d8:	b8 01       	movw	r22, r16
    17da:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <__unpack_f>
    17de:	89 85       	ldd	r24, Y+9	; 0x09
    17e0:	82 30       	cpi	r24, 0x02	; 2
    17e2:	40 f0       	brcs	.+16     	; 0x17f4 <__gtsf2+0x56>
    17e4:	89 89       	ldd	r24, Y+17	; 0x11
    17e6:	82 30       	cpi	r24, 0x02	; 2
    17e8:	28 f0       	brcs	.+10     	; 0x17f4 <__gtsf2+0x56>
    17ea:	c7 01       	movw	r24, r14
    17ec:	b8 01       	movw	r22, r16
    17ee:	0e 94 00 0e 	call	0x1c00	; 0x1c00 <__fpcmp_parts_f>
    17f2:	01 c0       	rjmp	.+2      	; 0x17f6 <__gtsf2+0x58>
    17f4:	8f ef       	ldi	r24, 0xFF	; 255
    17f6:	68 96       	adiw	r28, 0x18	; 24
    17f8:	e6 e0       	ldi	r30, 0x06	; 6
    17fa:	0c 94 81 0e 	jmp	0x1d02	; 0x1d02 <__epilogue_restores__+0x18>

000017fe <__gesf2>:
    17fe:	a8 e1       	ldi	r26, 0x18	; 24
    1800:	b0 e0       	ldi	r27, 0x00	; 0
    1802:	e5 e0       	ldi	r30, 0x05	; 5
    1804:	fc e0       	ldi	r31, 0x0C	; 12
    1806:	0c 94 65 0e 	jmp	0x1cca	; 0x1cca <__prologue_saves__+0x18>
    180a:	69 83       	std	Y+1, r22	; 0x01
    180c:	7a 83       	std	Y+2, r23	; 0x02
    180e:	8b 83       	std	Y+3, r24	; 0x03
    1810:	9c 83       	std	Y+4, r25	; 0x04
    1812:	2d 83       	std	Y+5, r18	; 0x05
    1814:	3e 83       	std	Y+6, r19	; 0x06
    1816:	4f 83       	std	Y+7, r20	; 0x07
    1818:	58 87       	std	Y+8, r21	; 0x08
    181a:	89 e0       	ldi	r24, 0x09	; 9
    181c:	e8 2e       	mov	r14, r24
    181e:	f1 2c       	mov	r15, r1
    1820:	ec 0e       	add	r14, r28
    1822:	fd 1e       	adc	r15, r29
    1824:	ce 01       	movw	r24, r28
    1826:	01 96       	adiw	r24, 0x01	; 1
    1828:	b7 01       	movw	r22, r14
    182a:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <__unpack_f>
    182e:	8e 01       	movw	r16, r28
    1830:	0f 5e       	subi	r16, 0xEF	; 239
    1832:	1f 4f       	sbci	r17, 0xFF	; 255
    1834:	ce 01       	movw	r24, r28
    1836:	05 96       	adiw	r24, 0x05	; 5
    1838:	b8 01       	movw	r22, r16
    183a:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <__unpack_f>
    183e:	89 85       	ldd	r24, Y+9	; 0x09
    1840:	82 30       	cpi	r24, 0x02	; 2
    1842:	40 f0       	brcs	.+16     	; 0x1854 <__gesf2+0x56>
    1844:	89 89       	ldd	r24, Y+17	; 0x11
    1846:	82 30       	cpi	r24, 0x02	; 2
    1848:	28 f0       	brcs	.+10     	; 0x1854 <__gesf2+0x56>
    184a:	c7 01       	movw	r24, r14
    184c:	b8 01       	movw	r22, r16
    184e:	0e 94 00 0e 	call	0x1c00	; 0x1c00 <__fpcmp_parts_f>
    1852:	01 c0       	rjmp	.+2      	; 0x1856 <__gesf2+0x58>
    1854:	8f ef       	ldi	r24, 0xFF	; 255
    1856:	68 96       	adiw	r28, 0x18	; 24
    1858:	e6 e0       	ldi	r30, 0x06	; 6
    185a:	0c 94 81 0e 	jmp	0x1d02	; 0x1d02 <__epilogue_restores__+0x18>

0000185e <__ltsf2>:
    185e:	a8 e1       	ldi	r26, 0x18	; 24
    1860:	b0 e0       	ldi	r27, 0x00	; 0
    1862:	e5 e3       	ldi	r30, 0x35	; 53
    1864:	fc e0       	ldi	r31, 0x0C	; 12
    1866:	0c 94 65 0e 	jmp	0x1cca	; 0x1cca <__prologue_saves__+0x18>
    186a:	69 83       	std	Y+1, r22	; 0x01
    186c:	7a 83       	std	Y+2, r23	; 0x02
    186e:	8b 83       	std	Y+3, r24	; 0x03
    1870:	9c 83       	std	Y+4, r25	; 0x04
    1872:	2d 83       	std	Y+5, r18	; 0x05
    1874:	3e 83       	std	Y+6, r19	; 0x06
    1876:	4f 83       	std	Y+7, r20	; 0x07
    1878:	58 87       	std	Y+8, r21	; 0x08
    187a:	89 e0       	ldi	r24, 0x09	; 9
    187c:	e8 2e       	mov	r14, r24
    187e:	f1 2c       	mov	r15, r1
    1880:	ec 0e       	add	r14, r28
    1882:	fd 1e       	adc	r15, r29
    1884:	ce 01       	movw	r24, r28
    1886:	01 96       	adiw	r24, 0x01	; 1
    1888:	b7 01       	movw	r22, r14
    188a:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <__unpack_f>
    188e:	8e 01       	movw	r16, r28
    1890:	0f 5e       	subi	r16, 0xEF	; 239
    1892:	1f 4f       	sbci	r17, 0xFF	; 255
    1894:	ce 01       	movw	r24, r28
    1896:	05 96       	adiw	r24, 0x05	; 5
    1898:	b8 01       	movw	r22, r16
    189a:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <__unpack_f>
    189e:	89 85       	ldd	r24, Y+9	; 0x09
    18a0:	82 30       	cpi	r24, 0x02	; 2
    18a2:	40 f0       	brcs	.+16     	; 0x18b4 <__ltsf2+0x56>
    18a4:	89 89       	ldd	r24, Y+17	; 0x11
    18a6:	82 30       	cpi	r24, 0x02	; 2
    18a8:	28 f0       	brcs	.+10     	; 0x18b4 <__ltsf2+0x56>
    18aa:	c7 01       	movw	r24, r14
    18ac:	b8 01       	movw	r22, r16
    18ae:	0e 94 00 0e 	call	0x1c00	; 0x1c00 <__fpcmp_parts_f>
    18b2:	01 c0       	rjmp	.+2      	; 0x18b6 <__ltsf2+0x58>
    18b4:	81 e0       	ldi	r24, 0x01	; 1
    18b6:	68 96       	adiw	r28, 0x18	; 24
    18b8:	e6 e0       	ldi	r30, 0x06	; 6
    18ba:	0c 94 81 0e 	jmp	0x1d02	; 0x1d02 <__epilogue_restores__+0x18>

000018be <__fixsfsi>:
    18be:	ac e0       	ldi	r26, 0x0C	; 12
    18c0:	b0 e0       	ldi	r27, 0x00	; 0
    18c2:	e5 e6       	ldi	r30, 0x65	; 101
    18c4:	fc e0       	ldi	r31, 0x0C	; 12
    18c6:	0c 94 69 0e 	jmp	0x1cd2	; 0x1cd2 <__prologue_saves__+0x20>
    18ca:	69 83       	std	Y+1, r22	; 0x01
    18cc:	7a 83       	std	Y+2, r23	; 0x02
    18ce:	8b 83       	std	Y+3, r24	; 0x03
    18d0:	9c 83       	std	Y+4, r25	; 0x04
    18d2:	ce 01       	movw	r24, r28
    18d4:	01 96       	adiw	r24, 0x01	; 1
    18d6:	be 01       	movw	r22, r28
    18d8:	6b 5f       	subi	r22, 0xFB	; 251
    18da:	7f 4f       	sbci	r23, 0xFF	; 255
    18dc:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <__unpack_f>
    18e0:	8d 81       	ldd	r24, Y+5	; 0x05
    18e2:	82 30       	cpi	r24, 0x02	; 2
    18e4:	61 f1       	breq	.+88     	; 0x193e <__fixsfsi+0x80>
    18e6:	82 30       	cpi	r24, 0x02	; 2
    18e8:	50 f1       	brcs	.+84     	; 0x193e <__fixsfsi+0x80>
    18ea:	84 30       	cpi	r24, 0x04	; 4
    18ec:	21 f4       	brne	.+8      	; 0x18f6 <__fixsfsi+0x38>
    18ee:	8e 81       	ldd	r24, Y+6	; 0x06
    18f0:	88 23       	and	r24, r24
    18f2:	51 f1       	breq	.+84     	; 0x1948 <__fixsfsi+0x8a>
    18f4:	2e c0       	rjmp	.+92     	; 0x1952 <__fixsfsi+0x94>
    18f6:	2f 81       	ldd	r18, Y+7	; 0x07
    18f8:	38 85       	ldd	r19, Y+8	; 0x08
    18fa:	37 fd       	sbrc	r19, 7
    18fc:	20 c0       	rjmp	.+64     	; 0x193e <__fixsfsi+0x80>
    18fe:	6e 81       	ldd	r22, Y+6	; 0x06
    1900:	2f 31       	cpi	r18, 0x1F	; 31
    1902:	31 05       	cpc	r19, r1
    1904:	1c f0       	brlt	.+6      	; 0x190c <__fixsfsi+0x4e>
    1906:	66 23       	and	r22, r22
    1908:	f9 f0       	breq	.+62     	; 0x1948 <__fixsfsi+0x8a>
    190a:	23 c0       	rjmp	.+70     	; 0x1952 <__fixsfsi+0x94>
    190c:	8e e1       	ldi	r24, 0x1E	; 30
    190e:	90 e0       	ldi	r25, 0x00	; 0
    1910:	82 1b       	sub	r24, r18
    1912:	93 0b       	sbc	r25, r19
    1914:	29 85       	ldd	r18, Y+9	; 0x09
    1916:	3a 85       	ldd	r19, Y+10	; 0x0a
    1918:	4b 85       	ldd	r20, Y+11	; 0x0b
    191a:	5c 85       	ldd	r21, Y+12	; 0x0c
    191c:	04 c0       	rjmp	.+8      	; 0x1926 <__fixsfsi+0x68>
    191e:	56 95       	lsr	r21
    1920:	47 95       	ror	r20
    1922:	37 95       	ror	r19
    1924:	27 95       	ror	r18
    1926:	8a 95       	dec	r24
    1928:	d2 f7       	brpl	.-12     	; 0x191e <__fixsfsi+0x60>
    192a:	66 23       	and	r22, r22
    192c:	b1 f0       	breq	.+44     	; 0x195a <__fixsfsi+0x9c>
    192e:	50 95       	com	r21
    1930:	40 95       	com	r20
    1932:	30 95       	com	r19
    1934:	21 95       	neg	r18
    1936:	3f 4f       	sbci	r19, 0xFF	; 255
    1938:	4f 4f       	sbci	r20, 0xFF	; 255
    193a:	5f 4f       	sbci	r21, 0xFF	; 255
    193c:	0e c0       	rjmp	.+28     	; 0x195a <__fixsfsi+0x9c>
    193e:	20 e0       	ldi	r18, 0x00	; 0
    1940:	30 e0       	ldi	r19, 0x00	; 0
    1942:	40 e0       	ldi	r20, 0x00	; 0
    1944:	50 e0       	ldi	r21, 0x00	; 0
    1946:	09 c0       	rjmp	.+18     	; 0x195a <__fixsfsi+0x9c>
    1948:	2f ef       	ldi	r18, 0xFF	; 255
    194a:	3f ef       	ldi	r19, 0xFF	; 255
    194c:	4f ef       	ldi	r20, 0xFF	; 255
    194e:	5f e7       	ldi	r21, 0x7F	; 127
    1950:	04 c0       	rjmp	.+8      	; 0x195a <__fixsfsi+0x9c>
    1952:	20 e0       	ldi	r18, 0x00	; 0
    1954:	30 e0       	ldi	r19, 0x00	; 0
    1956:	40 e0       	ldi	r20, 0x00	; 0
    1958:	50 e8       	ldi	r21, 0x80	; 128
    195a:	b9 01       	movw	r22, r18
    195c:	ca 01       	movw	r24, r20
    195e:	2c 96       	adiw	r28, 0x0c	; 12
    1960:	e2 e0       	ldi	r30, 0x02	; 2
    1962:	0c 94 85 0e 	jmp	0x1d0a	; 0x1d0a <__epilogue_restores__+0x20>

00001966 <__pack_f>:
    1966:	df 92       	push	r13
    1968:	ef 92       	push	r14
    196a:	ff 92       	push	r15
    196c:	0f 93       	push	r16
    196e:	1f 93       	push	r17
    1970:	fc 01       	movw	r30, r24
    1972:	e4 80       	ldd	r14, Z+4	; 0x04
    1974:	f5 80       	ldd	r15, Z+5	; 0x05
    1976:	06 81       	ldd	r16, Z+6	; 0x06
    1978:	17 81       	ldd	r17, Z+7	; 0x07
    197a:	d1 80       	ldd	r13, Z+1	; 0x01
    197c:	80 81       	ld	r24, Z
    197e:	82 30       	cpi	r24, 0x02	; 2
    1980:	48 f4       	brcc	.+18     	; 0x1994 <__pack_f+0x2e>
    1982:	80 e0       	ldi	r24, 0x00	; 0
    1984:	90 e0       	ldi	r25, 0x00	; 0
    1986:	a0 e1       	ldi	r26, 0x10	; 16
    1988:	b0 e0       	ldi	r27, 0x00	; 0
    198a:	e8 2a       	or	r14, r24
    198c:	f9 2a       	or	r15, r25
    198e:	0a 2b       	or	r16, r26
    1990:	1b 2b       	or	r17, r27
    1992:	a5 c0       	rjmp	.+330    	; 0x1ade <__pack_f+0x178>
    1994:	84 30       	cpi	r24, 0x04	; 4
    1996:	09 f4       	brne	.+2      	; 0x199a <__pack_f+0x34>
    1998:	9f c0       	rjmp	.+318    	; 0x1ad8 <__pack_f+0x172>
    199a:	82 30       	cpi	r24, 0x02	; 2
    199c:	21 f4       	brne	.+8      	; 0x19a6 <__pack_f+0x40>
    199e:	ee 24       	eor	r14, r14
    19a0:	ff 24       	eor	r15, r15
    19a2:	87 01       	movw	r16, r14
    19a4:	05 c0       	rjmp	.+10     	; 0x19b0 <__pack_f+0x4a>
    19a6:	e1 14       	cp	r14, r1
    19a8:	f1 04       	cpc	r15, r1
    19aa:	01 05       	cpc	r16, r1
    19ac:	11 05       	cpc	r17, r1
    19ae:	19 f4       	brne	.+6      	; 0x19b6 <__pack_f+0x50>
    19b0:	e0 e0       	ldi	r30, 0x00	; 0
    19b2:	f0 e0       	ldi	r31, 0x00	; 0
    19b4:	96 c0       	rjmp	.+300    	; 0x1ae2 <__pack_f+0x17c>
    19b6:	62 81       	ldd	r22, Z+2	; 0x02
    19b8:	73 81       	ldd	r23, Z+3	; 0x03
    19ba:	9f ef       	ldi	r25, 0xFF	; 255
    19bc:	62 38       	cpi	r22, 0x82	; 130
    19be:	79 07       	cpc	r23, r25
    19c0:	0c f0       	brlt	.+2      	; 0x19c4 <__pack_f+0x5e>
    19c2:	5b c0       	rjmp	.+182    	; 0x1a7a <__pack_f+0x114>
    19c4:	22 e8       	ldi	r18, 0x82	; 130
    19c6:	3f ef       	ldi	r19, 0xFF	; 255
    19c8:	26 1b       	sub	r18, r22
    19ca:	37 0b       	sbc	r19, r23
    19cc:	2a 31       	cpi	r18, 0x1A	; 26
    19ce:	31 05       	cpc	r19, r1
    19d0:	2c f0       	brlt	.+10     	; 0x19dc <__pack_f+0x76>
    19d2:	20 e0       	ldi	r18, 0x00	; 0
    19d4:	30 e0       	ldi	r19, 0x00	; 0
    19d6:	40 e0       	ldi	r20, 0x00	; 0
    19d8:	50 e0       	ldi	r21, 0x00	; 0
    19da:	2a c0       	rjmp	.+84     	; 0x1a30 <__pack_f+0xca>
    19dc:	b8 01       	movw	r22, r16
    19de:	a7 01       	movw	r20, r14
    19e0:	02 2e       	mov	r0, r18
    19e2:	04 c0       	rjmp	.+8      	; 0x19ec <__pack_f+0x86>
    19e4:	76 95       	lsr	r23
    19e6:	67 95       	ror	r22
    19e8:	57 95       	ror	r21
    19ea:	47 95       	ror	r20
    19ec:	0a 94       	dec	r0
    19ee:	d2 f7       	brpl	.-12     	; 0x19e4 <__pack_f+0x7e>
    19f0:	81 e0       	ldi	r24, 0x01	; 1
    19f2:	90 e0       	ldi	r25, 0x00	; 0
    19f4:	a0 e0       	ldi	r26, 0x00	; 0
    19f6:	b0 e0       	ldi	r27, 0x00	; 0
    19f8:	04 c0       	rjmp	.+8      	; 0x1a02 <__pack_f+0x9c>
    19fa:	88 0f       	add	r24, r24
    19fc:	99 1f       	adc	r25, r25
    19fe:	aa 1f       	adc	r26, r26
    1a00:	bb 1f       	adc	r27, r27
    1a02:	2a 95       	dec	r18
    1a04:	d2 f7       	brpl	.-12     	; 0x19fa <__pack_f+0x94>
    1a06:	01 97       	sbiw	r24, 0x01	; 1
    1a08:	a1 09       	sbc	r26, r1
    1a0a:	b1 09       	sbc	r27, r1
    1a0c:	8e 21       	and	r24, r14
    1a0e:	9f 21       	and	r25, r15
    1a10:	a0 23       	and	r26, r16
    1a12:	b1 23       	and	r27, r17
    1a14:	00 97       	sbiw	r24, 0x00	; 0
    1a16:	a1 05       	cpc	r26, r1
    1a18:	b1 05       	cpc	r27, r1
    1a1a:	21 f0       	breq	.+8      	; 0x1a24 <__pack_f+0xbe>
    1a1c:	81 e0       	ldi	r24, 0x01	; 1
    1a1e:	90 e0       	ldi	r25, 0x00	; 0
    1a20:	a0 e0       	ldi	r26, 0x00	; 0
    1a22:	b0 e0       	ldi	r27, 0x00	; 0
    1a24:	9a 01       	movw	r18, r20
    1a26:	ab 01       	movw	r20, r22
    1a28:	28 2b       	or	r18, r24
    1a2a:	39 2b       	or	r19, r25
    1a2c:	4a 2b       	or	r20, r26
    1a2e:	5b 2b       	or	r21, r27
    1a30:	da 01       	movw	r26, r20
    1a32:	c9 01       	movw	r24, r18
    1a34:	8f 77       	andi	r24, 0x7F	; 127
    1a36:	90 70       	andi	r25, 0x00	; 0
    1a38:	a0 70       	andi	r26, 0x00	; 0
    1a3a:	b0 70       	andi	r27, 0x00	; 0
    1a3c:	80 34       	cpi	r24, 0x40	; 64
    1a3e:	91 05       	cpc	r25, r1
    1a40:	a1 05       	cpc	r26, r1
    1a42:	b1 05       	cpc	r27, r1
    1a44:	39 f4       	brne	.+14     	; 0x1a54 <__pack_f+0xee>
    1a46:	27 ff       	sbrs	r18, 7
    1a48:	09 c0       	rjmp	.+18     	; 0x1a5c <__pack_f+0xf6>
    1a4a:	20 5c       	subi	r18, 0xC0	; 192
    1a4c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a4e:	4f 4f       	sbci	r20, 0xFF	; 255
    1a50:	5f 4f       	sbci	r21, 0xFF	; 255
    1a52:	04 c0       	rjmp	.+8      	; 0x1a5c <__pack_f+0xf6>
    1a54:	21 5c       	subi	r18, 0xC1	; 193
    1a56:	3f 4f       	sbci	r19, 0xFF	; 255
    1a58:	4f 4f       	sbci	r20, 0xFF	; 255
    1a5a:	5f 4f       	sbci	r21, 0xFF	; 255
    1a5c:	e0 e0       	ldi	r30, 0x00	; 0
    1a5e:	f0 e0       	ldi	r31, 0x00	; 0
    1a60:	20 30       	cpi	r18, 0x00	; 0
    1a62:	a0 e0       	ldi	r26, 0x00	; 0
    1a64:	3a 07       	cpc	r19, r26
    1a66:	a0 e0       	ldi	r26, 0x00	; 0
    1a68:	4a 07       	cpc	r20, r26
    1a6a:	a0 e4       	ldi	r26, 0x40	; 64
    1a6c:	5a 07       	cpc	r21, r26
    1a6e:	10 f0       	brcs	.+4      	; 0x1a74 <__pack_f+0x10e>
    1a70:	e1 e0       	ldi	r30, 0x01	; 1
    1a72:	f0 e0       	ldi	r31, 0x00	; 0
    1a74:	79 01       	movw	r14, r18
    1a76:	8a 01       	movw	r16, r20
    1a78:	27 c0       	rjmp	.+78     	; 0x1ac8 <__pack_f+0x162>
    1a7a:	60 38       	cpi	r22, 0x80	; 128
    1a7c:	71 05       	cpc	r23, r1
    1a7e:	64 f5       	brge	.+88     	; 0x1ad8 <__pack_f+0x172>
    1a80:	fb 01       	movw	r30, r22
    1a82:	e1 58       	subi	r30, 0x81	; 129
    1a84:	ff 4f       	sbci	r31, 0xFF	; 255
    1a86:	d8 01       	movw	r26, r16
    1a88:	c7 01       	movw	r24, r14
    1a8a:	8f 77       	andi	r24, 0x7F	; 127
    1a8c:	90 70       	andi	r25, 0x00	; 0
    1a8e:	a0 70       	andi	r26, 0x00	; 0
    1a90:	b0 70       	andi	r27, 0x00	; 0
    1a92:	80 34       	cpi	r24, 0x40	; 64
    1a94:	91 05       	cpc	r25, r1
    1a96:	a1 05       	cpc	r26, r1
    1a98:	b1 05       	cpc	r27, r1
    1a9a:	39 f4       	brne	.+14     	; 0x1aaa <__pack_f+0x144>
    1a9c:	e7 fe       	sbrs	r14, 7
    1a9e:	0d c0       	rjmp	.+26     	; 0x1aba <__pack_f+0x154>
    1aa0:	80 e4       	ldi	r24, 0x40	; 64
    1aa2:	90 e0       	ldi	r25, 0x00	; 0
    1aa4:	a0 e0       	ldi	r26, 0x00	; 0
    1aa6:	b0 e0       	ldi	r27, 0x00	; 0
    1aa8:	04 c0       	rjmp	.+8      	; 0x1ab2 <__pack_f+0x14c>
    1aaa:	8f e3       	ldi	r24, 0x3F	; 63
    1aac:	90 e0       	ldi	r25, 0x00	; 0
    1aae:	a0 e0       	ldi	r26, 0x00	; 0
    1ab0:	b0 e0       	ldi	r27, 0x00	; 0
    1ab2:	e8 0e       	add	r14, r24
    1ab4:	f9 1e       	adc	r15, r25
    1ab6:	0a 1f       	adc	r16, r26
    1ab8:	1b 1f       	adc	r17, r27
    1aba:	17 ff       	sbrs	r17, 7
    1abc:	05 c0       	rjmp	.+10     	; 0x1ac8 <__pack_f+0x162>
    1abe:	16 95       	lsr	r17
    1ac0:	07 95       	ror	r16
    1ac2:	f7 94       	ror	r15
    1ac4:	e7 94       	ror	r14
    1ac6:	31 96       	adiw	r30, 0x01	; 1
    1ac8:	87 e0       	ldi	r24, 0x07	; 7
    1aca:	16 95       	lsr	r17
    1acc:	07 95       	ror	r16
    1ace:	f7 94       	ror	r15
    1ad0:	e7 94       	ror	r14
    1ad2:	8a 95       	dec	r24
    1ad4:	d1 f7       	brne	.-12     	; 0x1aca <__pack_f+0x164>
    1ad6:	05 c0       	rjmp	.+10     	; 0x1ae2 <__pack_f+0x17c>
    1ad8:	ee 24       	eor	r14, r14
    1ada:	ff 24       	eor	r15, r15
    1adc:	87 01       	movw	r16, r14
    1ade:	ef ef       	ldi	r30, 0xFF	; 255
    1ae0:	f0 e0       	ldi	r31, 0x00	; 0
    1ae2:	6e 2f       	mov	r22, r30
    1ae4:	67 95       	ror	r22
    1ae6:	66 27       	eor	r22, r22
    1ae8:	67 95       	ror	r22
    1aea:	90 2f       	mov	r25, r16
    1aec:	9f 77       	andi	r25, 0x7F	; 127
    1aee:	d7 94       	ror	r13
    1af0:	dd 24       	eor	r13, r13
    1af2:	d7 94       	ror	r13
    1af4:	8e 2f       	mov	r24, r30
    1af6:	86 95       	lsr	r24
    1af8:	49 2f       	mov	r20, r25
    1afa:	46 2b       	or	r20, r22
    1afc:	58 2f       	mov	r21, r24
    1afe:	5d 29       	or	r21, r13
    1b00:	b7 01       	movw	r22, r14
    1b02:	ca 01       	movw	r24, r20
    1b04:	1f 91       	pop	r17
    1b06:	0f 91       	pop	r16
    1b08:	ff 90       	pop	r15
    1b0a:	ef 90       	pop	r14
    1b0c:	df 90       	pop	r13
    1b0e:	08 95       	ret

00001b10 <__unpack_f>:
    1b10:	fc 01       	movw	r30, r24
    1b12:	db 01       	movw	r26, r22
    1b14:	40 81       	ld	r20, Z
    1b16:	51 81       	ldd	r21, Z+1	; 0x01
    1b18:	22 81       	ldd	r18, Z+2	; 0x02
    1b1a:	62 2f       	mov	r22, r18
    1b1c:	6f 77       	andi	r22, 0x7F	; 127
    1b1e:	70 e0       	ldi	r23, 0x00	; 0
    1b20:	22 1f       	adc	r18, r18
    1b22:	22 27       	eor	r18, r18
    1b24:	22 1f       	adc	r18, r18
    1b26:	93 81       	ldd	r25, Z+3	; 0x03
    1b28:	89 2f       	mov	r24, r25
    1b2a:	88 0f       	add	r24, r24
    1b2c:	82 2b       	or	r24, r18
    1b2e:	28 2f       	mov	r18, r24
    1b30:	30 e0       	ldi	r19, 0x00	; 0
    1b32:	99 1f       	adc	r25, r25
    1b34:	99 27       	eor	r25, r25
    1b36:	99 1f       	adc	r25, r25
    1b38:	11 96       	adiw	r26, 0x01	; 1
    1b3a:	9c 93       	st	X, r25
    1b3c:	11 97       	sbiw	r26, 0x01	; 1
    1b3e:	21 15       	cp	r18, r1
    1b40:	31 05       	cpc	r19, r1
    1b42:	a9 f5       	brne	.+106    	; 0x1bae <__unpack_f+0x9e>
    1b44:	41 15       	cp	r20, r1
    1b46:	51 05       	cpc	r21, r1
    1b48:	61 05       	cpc	r22, r1
    1b4a:	71 05       	cpc	r23, r1
    1b4c:	11 f4       	brne	.+4      	; 0x1b52 <__unpack_f+0x42>
    1b4e:	82 e0       	ldi	r24, 0x02	; 2
    1b50:	37 c0       	rjmp	.+110    	; 0x1bc0 <__unpack_f+0xb0>
    1b52:	82 e8       	ldi	r24, 0x82	; 130
    1b54:	9f ef       	ldi	r25, 0xFF	; 255
    1b56:	13 96       	adiw	r26, 0x03	; 3
    1b58:	9c 93       	st	X, r25
    1b5a:	8e 93       	st	-X, r24
    1b5c:	12 97       	sbiw	r26, 0x02	; 2
    1b5e:	9a 01       	movw	r18, r20
    1b60:	ab 01       	movw	r20, r22
    1b62:	67 e0       	ldi	r22, 0x07	; 7
    1b64:	22 0f       	add	r18, r18
    1b66:	33 1f       	adc	r19, r19
    1b68:	44 1f       	adc	r20, r20
    1b6a:	55 1f       	adc	r21, r21
    1b6c:	6a 95       	dec	r22
    1b6e:	d1 f7       	brne	.-12     	; 0x1b64 <__unpack_f+0x54>
    1b70:	83 e0       	ldi	r24, 0x03	; 3
    1b72:	8c 93       	st	X, r24
    1b74:	0d c0       	rjmp	.+26     	; 0x1b90 <__unpack_f+0x80>
    1b76:	22 0f       	add	r18, r18
    1b78:	33 1f       	adc	r19, r19
    1b7a:	44 1f       	adc	r20, r20
    1b7c:	55 1f       	adc	r21, r21
    1b7e:	12 96       	adiw	r26, 0x02	; 2
    1b80:	8d 91       	ld	r24, X+
    1b82:	9c 91       	ld	r25, X
    1b84:	13 97       	sbiw	r26, 0x03	; 3
    1b86:	01 97       	sbiw	r24, 0x01	; 1
    1b88:	13 96       	adiw	r26, 0x03	; 3
    1b8a:	9c 93       	st	X, r25
    1b8c:	8e 93       	st	-X, r24
    1b8e:	12 97       	sbiw	r26, 0x02	; 2
    1b90:	20 30       	cpi	r18, 0x00	; 0
    1b92:	80 e0       	ldi	r24, 0x00	; 0
    1b94:	38 07       	cpc	r19, r24
    1b96:	80 e0       	ldi	r24, 0x00	; 0
    1b98:	48 07       	cpc	r20, r24
    1b9a:	80 e4       	ldi	r24, 0x40	; 64
    1b9c:	58 07       	cpc	r21, r24
    1b9e:	58 f3       	brcs	.-42     	; 0x1b76 <__unpack_f+0x66>
    1ba0:	14 96       	adiw	r26, 0x04	; 4
    1ba2:	2d 93       	st	X+, r18
    1ba4:	3d 93       	st	X+, r19
    1ba6:	4d 93       	st	X+, r20
    1ba8:	5c 93       	st	X, r21
    1baa:	17 97       	sbiw	r26, 0x07	; 7
    1bac:	08 95       	ret
    1bae:	2f 3f       	cpi	r18, 0xFF	; 255
    1bb0:	31 05       	cpc	r19, r1
    1bb2:	79 f4       	brne	.+30     	; 0x1bd2 <__unpack_f+0xc2>
    1bb4:	41 15       	cp	r20, r1
    1bb6:	51 05       	cpc	r21, r1
    1bb8:	61 05       	cpc	r22, r1
    1bba:	71 05       	cpc	r23, r1
    1bbc:	19 f4       	brne	.+6      	; 0x1bc4 <__unpack_f+0xb4>
    1bbe:	84 e0       	ldi	r24, 0x04	; 4
    1bc0:	8c 93       	st	X, r24
    1bc2:	08 95       	ret
    1bc4:	64 ff       	sbrs	r22, 4
    1bc6:	03 c0       	rjmp	.+6      	; 0x1bce <__unpack_f+0xbe>
    1bc8:	81 e0       	ldi	r24, 0x01	; 1
    1bca:	8c 93       	st	X, r24
    1bcc:	12 c0       	rjmp	.+36     	; 0x1bf2 <__unpack_f+0xe2>
    1bce:	1c 92       	st	X, r1
    1bd0:	10 c0       	rjmp	.+32     	; 0x1bf2 <__unpack_f+0xe2>
    1bd2:	2f 57       	subi	r18, 0x7F	; 127
    1bd4:	30 40       	sbci	r19, 0x00	; 0
    1bd6:	13 96       	adiw	r26, 0x03	; 3
    1bd8:	3c 93       	st	X, r19
    1bda:	2e 93       	st	-X, r18
    1bdc:	12 97       	sbiw	r26, 0x02	; 2
    1bde:	83 e0       	ldi	r24, 0x03	; 3
    1be0:	8c 93       	st	X, r24
    1be2:	87 e0       	ldi	r24, 0x07	; 7
    1be4:	44 0f       	add	r20, r20
    1be6:	55 1f       	adc	r21, r21
    1be8:	66 1f       	adc	r22, r22
    1bea:	77 1f       	adc	r23, r23
    1bec:	8a 95       	dec	r24
    1bee:	d1 f7       	brne	.-12     	; 0x1be4 <__unpack_f+0xd4>
    1bf0:	70 64       	ori	r23, 0x40	; 64
    1bf2:	14 96       	adiw	r26, 0x04	; 4
    1bf4:	4d 93       	st	X+, r20
    1bf6:	5d 93       	st	X+, r21
    1bf8:	6d 93       	st	X+, r22
    1bfa:	7c 93       	st	X, r23
    1bfc:	17 97       	sbiw	r26, 0x07	; 7
    1bfe:	08 95       	ret

00001c00 <__fpcmp_parts_f>:
    1c00:	1f 93       	push	r17
    1c02:	dc 01       	movw	r26, r24
    1c04:	fb 01       	movw	r30, r22
    1c06:	9c 91       	ld	r25, X
    1c08:	92 30       	cpi	r25, 0x02	; 2
    1c0a:	08 f4       	brcc	.+2      	; 0x1c0e <__fpcmp_parts_f+0xe>
    1c0c:	47 c0       	rjmp	.+142    	; 0x1c9c <__fpcmp_parts_f+0x9c>
    1c0e:	80 81       	ld	r24, Z
    1c10:	82 30       	cpi	r24, 0x02	; 2
    1c12:	08 f4       	brcc	.+2      	; 0x1c16 <__fpcmp_parts_f+0x16>
    1c14:	43 c0       	rjmp	.+134    	; 0x1c9c <__fpcmp_parts_f+0x9c>
    1c16:	94 30       	cpi	r25, 0x04	; 4
    1c18:	51 f4       	brne	.+20     	; 0x1c2e <__fpcmp_parts_f+0x2e>
    1c1a:	11 96       	adiw	r26, 0x01	; 1
    1c1c:	1c 91       	ld	r17, X
    1c1e:	84 30       	cpi	r24, 0x04	; 4
    1c20:	99 f5       	brne	.+102    	; 0x1c88 <__fpcmp_parts_f+0x88>
    1c22:	81 81       	ldd	r24, Z+1	; 0x01
    1c24:	68 2f       	mov	r22, r24
    1c26:	70 e0       	ldi	r23, 0x00	; 0
    1c28:	61 1b       	sub	r22, r17
    1c2a:	71 09       	sbc	r23, r1
    1c2c:	3f c0       	rjmp	.+126    	; 0x1cac <__fpcmp_parts_f+0xac>
    1c2e:	84 30       	cpi	r24, 0x04	; 4
    1c30:	21 f0       	breq	.+8      	; 0x1c3a <__fpcmp_parts_f+0x3a>
    1c32:	92 30       	cpi	r25, 0x02	; 2
    1c34:	31 f4       	brne	.+12     	; 0x1c42 <__fpcmp_parts_f+0x42>
    1c36:	82 30       	cpi	r24, 0x02	; 2
    1c38:	b9 f1       	breq	.+110    	; 0x1ca8 <__fpcmp_parts_f+0xa8>
    1c3a:	81 81       	ldd	r24, Z+1	; 0x01
    1c3c:	88 23       	and	r24, r24
    1c3e:	89 f1       	breq	.+98     	; 0x1ca2 <__fpcmp_parts_f+0xa2>
    1c40:	2d c0       	rjmp	.+90     	; 0x1c9c <__fpcmp_parts_f+0x9c>
    1c42:	11 96       	adiw	r26, 0x01	; 1
    1c44:	1c 91       	ld	r17, X
    1c46:	11 97       	sbiw	r26, 0x01	; 1
    1c48:	82 30       	cpi	r24, 0x02	; 2
    1c4a:	f1 f0       	breq	.+60     	; 0x1c88 <__fpcmp_parts_f+0x88>
    1c4c:	81 81       	ldd	r24, Z+1	; 0x01
    1c4e:	18 17       	cp	r17, r24
    1c50:	d9 f4       	brne	.+54     	; 0x1c88 <__fpcmp_parts_f+0x88>
    1c52:	12 96       	adiw	r26, 0x02	; 2
    1c54:	2d 91       	ld	r18, X+
    1c56:	3c 91       	ld	r19, X
    1c58:	13 97       	sbiw	r26, 0x03	; 3
    1c5a:	82 81       	ldd	r24, Z+2	; 0x02
    1c5c:	93 81       	ldd	r25, Z+3	; 0x03
    1c5e:	82 17       	cp	r24, r18
    1c60:	93 07       	cpc	r25, r19
    1c62:	94 f0       	brlt	.+36     	; 0x1c88 <__fpcmp_parts_f+0x88>
    1c64:	28 17       	cp	r18, r24
    1c66:	39 07       	cpc	r19, r25
    1c68:	bc f0       	brlt	.+46     	; 0x1c98 <__fpcmp_parts_f+0x98>
    1c6a:	14 96       	adiw	r26, 0x04	; 4
    1c6c:	8d 91       	ld	r24, X+
    1c6e:	9d 91       	ld	r25, X+
    1c70:	0d 90       	ld	r0, X+
    1c72:	bc 91       	ld	r27, X
    1c74:	a0 2d       	mov	r26, r0
    1c76:	24 81       	ldd	r18, Z+4	; 0x04
    1c78:	35 81       	ldd	r19, Z+5	; 0x05
    1c7a:	46 81       	ldd	r20, Z+6	; 0x06
    1c7c:	57 81       	ldd	r21, Z+7	; 0x07
    1c7e:	28 17       	cp	r18, r24
    1c80:	39 07       	cpc	r19, r25
    1c82:	4a 07       	cpc	r20, r26
    1c84:	5b 07       	cpc	r21, r27
    1c86:	18 f4       	brcc	.+6      	; 0x1c8e <__fpcmp_parts_f+0x8e>
    1c88:	11 23       	and	r17, r17
    1c8a:	41 f0       	breq	.+16     	; 0x1c9c <__fpcmp_parts_f+0x9c>
    1c8c:	0a c0       	rjmp	.+20     	; 0x1ca2 <__fpcmp_parts_f+0xa2>
    1c8e:	82 17       	cp	r24, r18
    1c90:	93 07       	cpc	r25, r19
    1c92:	a4 07       	cpc	r26, r20
    1c94:	b5 07       	cpc	r27, r21
    1c96:	40 f4       	brcc	.+16     	; 0x1ca8 <__fpcmp_parts_f+0xa8>
    1c98:	11 23       	and	r17, r17
    1c9a:	19 f0       	breq	.+6      	; 0x1ca2 <__fpcmp_parts_f+0xa2>
    1c9c:	61 e0       	ldi	r22, 0x01	; 1
    1c9e:	70 e0       	ldi	r23, 0x00	; 0
    1ca0:	05 c0       	rjmp	.+10     	; 0x1cac <__fpcmp_parts_f+0xac>
    1ca2:	6f ef       	ldi	r22, 0xFF	; 255
    1ca4:	7f ef       	ldi	r23, 0xFF	; 255
    1ca6:	02 c0       	rjmp	.+4      	; 0x1cac <__fpcmp_parts_f+0xac>
    1ca8:	60 e0       	ldi	r22, 0x00	; 0
    1caa:	70 e0       	ldi	r23, 0x00	; 0
    1cac:	cb 01       	movw	r24, r22
    1cae:	1f 91       	pop	r17
    1cb0:	08 95       	ret

00001cb2 <__prologue_saves__>:
    1cb2:	2f 92       	push	r2
    1cb4:	3f 92       	push	r3
    1cb6:	4f 92       	push	r4
    1cb8:	5f 92       	push	r5
    1cba:	6f 92       	push	r6
    1cbc:	7f 92       	push	r7
    1cbe:	8f 92       	push	r8
    1cc0:	9f 92       	push	r9
    1cc2:	af 92       	push	r10
    1cc4:	bf 92       	push	r11
    1cc6:	cf 92       	push	r12
    1cc8:	df 92       	push	r13
    1cca:	ef 92       	push	r14
    1ccc:	ff 92       	push	r15
    1cce:	0f 93       	push	r16
    1cd0:	1f 93       	push	r17
    1cd2:	cf 93       	push	r28
    1cd4:	df 93       	push	r29
    1cd6:	cd b7       	in	r28, 0x3d	; 61
    1cd8:	de b7       	in	r29, 0x3e	; 62
    1cda:	ca 1b       	sub	r28, r26
    1cdc:	db 0b       	sbc	r29, r27
    1cde:	0f b6       	in	r0, 0x3f	; 63
    1ce0:	f8 94       	cli
    1ce2:	de bf       	out	0x3e, r29	; 62
    1ce4:	0f be       	out	0x3f, r0	; 63
    1ce6:	cd bf       	out	0x3d, r28	; 61
    1ce8:	09 94       	ijmp

00001cea <__epilogue_restores__>:
    1cea:	2a 88       	ldd	r2, Y+18	; 0x12
    1cec:	39 88       	ldd	r3, Y+17	; 0x11
    1cee:	48 88       	ldd	r4, Y+16	; 0x10
    1cf0:	5f 84       	ldd	r5, Y+15	; 0x0f
    1cf2:	6e 84       	ldd	r6, Y+14	; 0x0e
    1cf4:	7d 84       	ldd	r7, Y+13	; 0x0d
    1cf6:	8c 84       	ldd	r8, Y+12	; 0x0c
    1cf8:	9b 84       	ldd	r9, Y+11	; 0x0b
    1cfa:	aa 84       	ldd	r10, Y+10	; 0x0a
    1cfc:	b9 84       	ldd	r11, Y+9	; 0x09
    1cfe:	c8 84       	ldd	r12, Y+8	; 0x08
    1d00:	df 80       	ldd	r13, Y+7	; 0x07
    1d02:	ee 80       	ldd	r14, Y+6	; 0x06
    1d04:	fd 80       	ldd	r15, Y+5	; 0x05
    1d06:	0c 81       	ldd	r16, Y+4	; 0x04
    1d08:	1b 81       	ldd	r17, Y+3	; 0x03
    1d0a:	aa 81       	ldd	r26, Y+2	; 0x02
    1d0c:	b9 81       	ldd	r27, Y+1	; 0x01
    1d0e:	ce 0f       	add	r28, r30
    1d10:	d1 1d       	adc	r29, r1
    1d12:	0f b6       	in	r0, 0x3f	; 63
    1d14:	f8 94       	cli
    1d16:	de bf       	out	0x3e, r29	; 62
    1d18:	0f be       	out	0x3f, r0	; 63
    1d1a:	cd bf       	out	0x3d, r28	; 61
    1d1c:	ed 01       	movw	r28, r26
    1d1e:	08 95       	ret

00001d20 <_exit>:
    1d20:	f8 94       	cli

00001d22 <__stop_program>:
    1d22:	ff cf       	rjmp	.-2      	; 0x1d22 <__stop_program>
