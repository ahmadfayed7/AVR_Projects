
bin\Debug\keypad_with_7segemt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000202  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  00000202  000002b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800078  00800078  000002ce  2**0
                  ALLOC
  3 .fuse         00000002  00820000  00820000  000002ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 00000020  00000000  00000000  000002d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000006c  00000000  00000000  000002f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000001bc  00000000  00000000  0000035c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000014c  00000000  00000000  00000518  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000165  00000000  00000000  00000664  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000040  00000000  00000000  000007cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000000b9  00000000  00000000  0000080c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e0       	ldi	r30, 0x02	; 2
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a8 37       	cpi	r26, 0x78	; 120
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a8 e7       	ldi	r26, 0x78	; 120
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 37       	cpi	r26, 0x7A	; 122
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <main>
  8a:	0c 94 ff 00 	jmp	0x1fe	; 0x1fe <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <keypad_3x4>:
   {3,6, 9} ,  /*  initializers for row indexed by 2 */
   {11,0,12}
};
int num =0;
int keypad_3x4 ()
{ int i,j,flag=0;
  92:	df 93       	push	r29
  94:	cf 93       	push	r28
  96:	cd b7       	in	r28, 0x3d	; 61
  98:	de b7       	in	r29, 0x3e	; 62
  9a:	28 97       	sbiw	r28, 0x08	; 8
  9c:	0f b6       	in	r0, 0x3f	; 63
  9e:	f8 94       	cli
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	0f be       	out	0x3f, r0	; 63
  a4:	cd bf       	out	0x3d, r28	; 61
  a6:	1a 82       	std	Y+2, r1	; 0x02
  a8:	19 82       	std	Y+1, r1	; 0x01
  for(i=0;i<3;i++)
  aa:	1e 82       	std	Y+6, r1	; 0x06
  ac:	1d 82       	std	Y+5, r1	; 0x05
  ae:	57 c0       	rjmp	.+174    	; 0x15e <keypad_3x4+0xcc>
  {
      DDRA =1<<(i+4);
  b0:	ea e3       	ldi	r30, 0x3A	; 58
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	8d 81       	ldd	r24, Y+5	; 0x05
  b6:	9e 81       	ldd	r25, Y+6	; 0x06
  b8:	9c 01       	movw	r18, r24
  ba:	2c 5f       	subi	r18, 0xFC	; 252
  bc:	3f 4f       	sbci	r19, 0xFF	; 255
  be:	81 e0       	ldi	r24, 0x01	; 1
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <keypad_3x4+0x36>
  c4:	88 0f       	add	r24, r24
  c6:	99 1f       	adc	r25, r25
  c8:	2a 95       	dec	r18
  ca:	e2 f7       	brpl	.-8      	; 0xc4 <keypad_3x4+0x32>
  cc:	80 83       	st	Z, r24
       PORTA &=~(1<<(i+4));
  ce:	ab e3       	ldi	r26, 0x3B	; 59
  d0:	b0 e0       	ldi	r27, 0x00	; 0
  d2:	eb e3       	ldi	r30, 0x3B	; 59
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	48 2f       	mov	r20, r24
  da:	8d 81       	ldd	r24, Y+5	; 0x05
  dc:	9e 81       	ldd	r25, Y+6	; 0x06
  de:	9c 01       	movw	r18, r24
  e0:	2c 5f       	subi	r18, 0xFC	; 252
  e2:	3f 4f       	sbci	r19, 0xFF	; 255
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	02 2e       	mov	r0, r18
  ea:	02 c0       	rjmp	.+4      	; 0xf0 <keypad_3x4+0x5e>
  ec:	88 0f       	add	r24, r24
  ee:	99 1f       	adc	r25, r25
  f0:	0a 94       	dec	r0
  f2:	e2 f7       	brpl	.-8      	; 0xec <keypad_3x4+0x5a>
  f4:	80 95       	com	r24
  f6:	84 23       	and	r24, r20
  f8:	8c 93       	st	X, r24
       for(j=0;j<4;j++)
  fa:	1c 82       	std	Y+4, r1	; 0x04
  fc:	1b 82       	std	Y+3, r1	; 0x03
  fe:	25 c0       	rjmp	.+74     	; 0x14a <keypad_3x4+0xb8>
          if(!(PINA& (1<<j)))
 100:	e9 e3       	ldi	r30, 0x39	; 57
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	88 2f       	mov	r24, r24
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	0b 80       	ldd	r0, Y+3	; 0x03
 10c:	02 c0       	rjmp	.+4      	; 0x112 <keypad_3x4+0x80>
 10e:	95 95       	asr	r25
 110:	87 95       	ror	r24
 112:	0a 94       	dec	r0
 114:	e2 f7       	brpl	.-8      	; 0x10e <keypad_3x4+0x7c>
 116:	81 70       	andi	r24, 0x01	; 1
 118:	90 70       	andi	r25, 0x00	; 0
 11a:	00 97       	sbiw	r24, 0x00	; 0
 11c:	89 f4       	brne	.+34     	; 0x140 <keypad_3x4+0xae>
          {

              return ((3*j)+i+1);
 11e:	2b 81       	ldd	r18, Y+3	; 0x03
 120:	3c 81       	ldd	r19, Y+4	; 0x04
 122:	c9 01       	movw	r24, r18
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	28 0f       	add	r18, r24
 12a:	39 1f       	adc	r19, r25
 12c:	8d 81       	ldd	r24, Y+5	; 0x05
 12e:	9e 81       	ldd	r25, Y+6	; 0x06
 130:	82 0f       	add	r24, r18
 132:	93 1f       	adc	r25, r19
 134:	9c 01       	movw	r18, r24
 136:	2f 5f       	subi	r18, 0xFF	; 255
 138:	3f 4f       	sbci	r19, 0xFF	; 255
 13a:	38 87       	std	Y+8, r19	; 0x08
 13c:	2f 83       	std	Y+7, r18	; 0x07
 13e:	17 c0       	rjmp	.+46     	; 0x16e <keypad_3x4+0xdc>
{ int i,j,flag=0;
  for(i=0;i<3;i++)
  {
      DDRA =1<<(i+4);
       PORTA &=~(1<<(i+4));
       for(j=0;j<4;j++)
 140:	8b 81       	ldd	r24, Y+3	; 0x03
 142:	9c 81       	ldd	r25, Y+4	; 0x04
 144:	01 96       	adiw	r24, 0x01	; 1
 146:	9c 83       	std	Y+4, r25	; 0x04
 148:	8b 83       	std	Y+3, r24	; 0x03
 14a:	8b 81       	ldd	r24, Y+3	; 0x03
 14c:	9c 81       	ldd	r25, Y+4	; 0x04
 14e:	84 30       	cpi	r24, 0x04	; 4
 150:	91 05       	cpc	r25, r1
 152:	b4 f2       	brlt	.-84     	; 0x100 <keypad_3x4+0x6e>
   {11,0,12}
};
int num =0;
int keypad_3x4 ()
{ int i,j,flag=0;
  for(i=0;i<3;i++)
 154:	8d 81       	ldd	r24, Y+5	; 0x05
 156:	9e 81       	ldd	r25, Y+6	; 0x06
 158:	01 96       	adiw	r24, 0x01	; 1
 15a:	9e 83       	std	Y+6, r25	; 0x06
 15c:	8d 83       	std	Y+5, r24	; 0x05
 15e:	8d 81       	ldd	r24, Y+5	; 0x05
 160:	9e 81       	ldd	r25, Y+6	; 0x06
 162:	83 30       	cpi	r24, 0x03	; 3
 164:	91 05       	cpc	r25, r1
 166:	0c f4       	brge	.+2      	; 0x16a <keypad_3x4+0xd8>
 168:	a3 cf       	rjmp	.-186    	; 0xb0 <keypad_3x4+0x1e>
              return ((3*j)+i+1);

          }

  }
 return 0;
 16a:	18 86       	std	Y+8, r1	; 0x08
 16c:	1f 82       	std	Y+7, r1	; 0x07
 16e:	8f 81       	ldd	r24, Y+7	; 0x07
 170:	98 85       	ldd	r25, Y+8	; 0x08
}
 172:	28 96       	adiw	r28, 0x08	; 8
 174:	0f b6       	in	r0, 0x3f	; 63
 176:	f8 94       	cli
 178:	de bf       	out	0x3e, r29	; 62
 17a:	0f be       	out	0x3f, r0	; 63
 17c:	cd bf       	out	0x3d, r28	; 61
 17e:	cf 91       	pop	r28
 180:	df 91       	pop	r29
 182:	08 95       	ret

00000184 <seven_seg>:
void seven_seg (int  num)
{
 184:	df 93       	push	r29
 186:	cf 93       	push	r28
 188:	00 d0       	rcall	.+0      	; 0x18a <seven_seg+0x6>
 18a:	cd b7       	in	r28, 0x3d	; 61
 18c:	de b7       	in	r29, 0x3e	; 62
 18e:	9a 83       	std	Y+2, r25	; 0x02
 190:	89 83       	std	Y+1, r24	; 0x01
  PORTC =(PORTC &0xf0) |(num& 0x0f);
 192:	a5 e3       	ldi	r26, 0x35	; 53
 194:	b0 e0       	ldi	r27, 0x00	; 0
 196:	e5 e3       	ldi	r30, 0x35	; 53
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	80 81       	ld	r24, Z
 19c:	98 2f       	mov	r25, r24
 19e:	90 7f       	andi	r25, 0xF0	; 240
 1a0:	89 81       	ldd	r24, Y+1	; 0x01
 1a2:	8f 70       	andi	r24, 0x0F	; 15
 1a4:	89 2b       	or	r24, r25
 1a6:	8c 93       	st	X, r24
}
 1a8:	0f 90       	pop	r0
 1aa:	0f 90       	pop	r0
 1ac:	cf 91       	pop	r28
 1ae:	df 91       	pop	r29
 1b0:	08 95       	ret

000001b2 <main>:
int main(void)
{
 1b2:	df 93       	push	r29
 1b4:	cf 93       	push	r28
 1b6:	cd b7       	in	r28, 0x3d	; 61
 1b8:	de b7       	in	r29, 0x3e	; 62

 DDRC = 0x0f;
 1ba:	e4 e3       	ldi	r30, 0x34	; 52
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	8f e0       	ldi	r24, 0x0F	; 15
 1c0:	80 83       	st	Z, r24
PORTC =0;
 1c2:	e5 e3       	ldi	r30, 0x35	; 53
 1c4:	f0 e0       	ldi	r31, 0x00	; 0
 1c6:	10 82       	st	Z, r1

    while(1)
    {
         num=keypad_3x4 ();
 1c8:	0e 94 49 00 	call	0x92	; 0x92 <keypad_3x4>
 1cc:	90 93 79 00 	sts	0x0079, r25
 1d0:	80 93 78 00 	sts	0x0078, r24
        if((num >= 0) && (num <= 9))
 1d4:	80 91 78 00 	lds	r24, 0x0078
 1d8:	90 91 79 00 	lds	r25, 0x0079
 1dc:	99 23       	and	r25, r25
 1de:	a4 f3       	brlt	.-24     	; 0x1c8 <main+0x16>
 1e0:	80 91 78 00 	lds	r24, 0x0078
 1e4:	90 91 79 00 	lds	r25, 0x0079
 1e8:	8a 30       	cpi	r24, 0x0A	; 10
 1ea:	91 05       	cpc	r25, r1
 1ec:	6c f7       	brge	.-38     	; 0x1c8 <main+0x16>
		{
			 PORTC = num;
 1ee:	e5 e3       	ldi	r30, 0x35	; 53
 1f0:	f0 e0       	ldi	r31, 0x00	; 0
 1f2:	80 91 78 00 	lds	r24, 0x0078
 1f6:	90 91 79 00 	lds	r25, 0x0079
 1fa:	80 83       	st	Z, r24
 1fc:	e5 cf       	rjmp	.-54     	; 0x1c8 <main+0x16>

000001fe <_exit>:
 1fe:	f8 94       	cli

00000200 <__stop_program>:
 200:	ff cf       	rjmp	.-2      	; 0x200 <__stop_program>
