
bin\Debug\ADC_with_temp_sensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000017a6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000017a6  0000183a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .fuse         00000002  00820000  00820000  00001842  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .debug_aranges 00000180  00000000  00000000  00001844  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000285  00000000  00000000  000019c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000022a3  00000000  00000000  00001c49  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001103  00000000  00000000  00003eec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000014ae  00000000  00000000  00004fef  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000240  00000000  00000000  000064a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003d5  00000000  00000000  000066e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007ce  00000000  00000000  00006ab5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00007283  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 ea       	ldi	r30, 0xA6	; 166
      68:	f7 e1       	ldi	r31, 0x17	; 23
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 b7 05 	call	0xb6e	; 0xb6e <main>
      7a:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <LCD_data>:
#include "LCD.h"
void LCD_data(unsigned char data)
{
      82:	df 93       	push	r29
      84:	cf 93       	push	r28
      86:	cd b7       	in	r28, 0x3d	; 61
      88:	de b7       	in	r29, 0x3e	; 62
      8a:	e9 97       	sbiw	r28, 0x39	; 57
      8c:	0f b6       	in	r0, 0x3f	; 63
      8e:	f8 94       	cli
      90:	de bf       	out	0x3e, r29	; 62
      92:	0f be       	out	0x3f, r0	; 63
      94:	cd bf       	out	0x3d, r28	; 61
      96:	89 af       	std	Y+57, r24	; 0x39
  set_RS;
      98:	a2 e3       	ldi	r26, 0x32	; 50
      9a:	b0 e0       	ldi	r27, 0x00	; 0
      9c:	e2 e3       	ldi	r30, 0x32	; 50
      9e:	f0 e0       	ldi	r31, 0x00	; 0
      a0:	80 81       	ld	r24, Z
      a2:	80 61       	ori	r24, 0x10	; 16
      a4:	8c 93       	st	X, r24
  clear_RW;
      a6:	a2 e3       	ldi	r26, 0x32	; 50
      a8:	b0 e0       	ldi	r27, 0x00	; 0
      aa:	e2 e3       	ldi	r30, 0x32	; 50
      ac:	f0 e0       	ldi	r31, 0x00	; 0
      ae:	80 81       	ld	r24, Z
      b0:	8f 7d       	andi	r24, 0xDF	; 223
      b2:	8c 93       	st	X, r24
      b4:	80 e0       	ldi	r24, 0x00	; 0
      b6:	90 e0       	ldi	r25, 0x00	; 0
      b8:	a0 e8       	ldi	r26, 0x80	; 128
      ba:	bf e3       	ldi	r27, 0x3F	; 63
      bc:	8d ab       	std	Y+53, r24	; 0x35
      be:	9e ab       	std	Y+54, r25	; 0x36
      c0:	af ab       	std	Y+55, r26	; 0x37
      c2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
      c4:	6d a9       	ldd	r22, Y+53	; 0x35
      c6:	7e a9       	ldd	r23, Y+54	; 0x36
      c8:	8f a9       	ldd	r24, Y+55	; 0x37
      ca:	98 ad       	ldd	r25, Y+56	; 0x38
      cc:	20 e0       	ldi	r18, 0x00	; 0
      ce:	30 e0       	ldi	r19, 0x00	; 0
      d0:	4a ef       	ldi	r20, 0xFA	; 250
      d2:	54 e4       	ldi	r21, 0x44	; 68
      d4:	0e 94 ba 07 	call	0xf74	; 0xf74 <__mulsf3>
      d8:	dc 01       	movw	r26, r24
      da:	cb 01       	movw	r24, r22
      dc:	89 ab       	std	Y+49, r24	; 0x31
      de:	9a ab       	std	Y+50, r25	; 0x32
      e0:	ab ab       	std	Y+51, r26	; 0x33
      e2:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
      e4:	69 a9       	ldd	r22, Y+49	; 0x31
      e6:	7a a9       	ldd	r23, Y+50	; 0x32
      e8:	8b a9       	ldd	r24, Y+51	; 0x33
      ea:	9c a9       	ldd	r25, Y+52	; 0x34
      ec:	20 e0       	ldi	r18, 0x00	; 0
      ee:	30 e0       	ldi	r19, 0x00	; 0
      f0:	40 e8       	ldi	r20, 0x80	; 128
      f2:	5f e3       	ldi	r21, 0x3F	; 63
      f4:	0e 94 14 09 	call	0x1228	; 0x1228 <__ltsf2>
      f8:	88 23       	and	r24, r24
      fa:	2c f4       	brge	.+10     	; 0x106 <LCD_data+0x84>
		__ticks = 1;
      fc:	81 e0       	ldi	r24, 0x01	; 1
      fe:	90 e0       	ldi	r25, 0x00	; 0
     100:	98 ab       	std	Y+48, r25	; 0x30
     102:	8f a7       	std	Y+47, r24	; 0x2f
     104:	3f c0       	rjmp	.+126    	; 0x184 <LCD_data+0x102>
	else if (__tmp > 65535)
     106:	69 a9       	ldd	r22, Y+49	; 0x31
     108:	7a a9       	ldd	r23, Y+50	; 0x32
     10a:	8b a9       	ldd	r24, Y+51	; 0x33
     10c:	9c a9       	ldd	r25, Y+52	; 0x34
     10e:	20 e0       	ldi	r18, 0x00	; 0
     110:	3f ef       	ldi	r19, 0xFF	; 255
     112:	4f e7       	ldi	r20, 0x7F	; 127
     114:	57 e4       	ldi	r21, 0x47	; 71
     116:	0e 94 b4 08 	call	0x1168	; 0x1168 <__gtsf2>
     11a:	18 16       	cp	r1, r24
     11c:	4c f5       	brge	.+82     	; 0x170 <LCD_data+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     11e:	6d a9       	ldd	r22, Y+53	; 0x35
     120:	7e a9       	ldd	r23, Y+54	; 0x36
     122:	8f a9       	ldd	r24, Y+55	; 0x37
     124:	98 ad       	ldd	r25, Y+56	; 0x38
     126:	20 e0       	ldi	r18, 0x00	; 0
     128:	30 e0       	ldi	r19, 0x00	; 0
     12a:	40 e2       	ldi	r20, 0x20	; 32
     12c:	51 e4       	ldi	r21, 0x41	; 65
     12e:	0e 94 ba 07 	call	0xf74	; 0xf74 <__mulsf3>
     132:	dc 01       	movw	r26, r24
     134:	cb 01       	movw	r24, r22
     136:	bc 01       	movw	r22, r24
     138:	cd 01       	movw	r24, r26
     13a:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fixunssfsi>
     13e:	dc 01       	movw	r26, r24
     140:	cb 01       	movw	r24, r22
     142:	98 ab       	std	Y+48, r25	; 0x30
     144:	8f a7       	std	Y+47, r24	; 0x2f
     146:	0f c0       	rjmp	.+30     	; 0x166 <LCD_data+0xe4>
     148:	88 ec       	ldi	r24, 0xC8	; 200
     14a:	90 e0       	ldi	r25, 0x00	; 0
     14c:	9e a7       	std	Y+46, r25	; 0x2e
     14e:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     150:	8d a5       	ldd	r24, Y+45	; 0x2d
     152:	9e a5       	ldd	r25, Y+46	; 0x2e
     154:	01 97       	sbiw	r24, 0x01	; 1
     156:	f1 f7       	brne	.-4      	; 0x154 <LCD_data+0xd2>
     158:	9e a7       	std	Y+46, r25	; 0x2e
     15a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     15c:	8f a5       	ldd	r24, Y+47	; 0x2f
     15e:	98 a9       	ldd	r25, Y+48	; 0x30
     160:	01 97       	sbiw	r24, 0x01	; 1
     162:	98 ab       	std	Y+48, r25	; 0x30
     164:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     166:	8f a5       	ldd	r24, Y+47	; 0x2f
     168:	98 a9       	ldd	r25, Y+48	; 0x30
     16a:	00 97       	sbiw	r24, 0x00	; 0
     16c:	69 f7       	brne	.-38     	; 0x148 <LCD_data+0xc6>
     16e:	14 c0       	rjmp	.+40     	; 0x198 <LCD_data+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     170:	69 a9       	ldd	r22, Y+49	; 0x31
     172:	7a a9       	ldd	r23, Y+50	; 0x32
     174:	8b a9       	ldd	r24, Y+51	; 0x33
     176:	9c a9       	ldd	r25, Y+52	; 0x34
     178:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fixunssfsi>
     17c:	dc 01       	movw	r26, r24
     17e:	cb 01       	movw	r24, r22
     180:	98 ab       	std	Y+48, r25	; 0x30
     182:	8f a7       	std	Y+47, r24	; 0x2f
     184:	8f a5       	ldd	r24, Y+47	; 0x2f
     186:	98 a9       	ldd	r25, Y+48	; 0x30
     188:	9c a7       	std	Y+44, r25	; 0x2c
     18a:	8b a7       	std	Y+43, r24	; 0x2b
     18c:	8b a5       	ldd	r24, Y+43	; 0x2b
     18e:	9c a5       	ldd	r25, Y+44	; 0x2c
     190:	01 97       	sbiw	r24, 0x01	; 1
     192:	f1 f7       	brne	.-4      	; 0x190 <LCD_data+0x10e>
     194:	9c a7       	std	Y+44, r25	; 0x2c
     196:	8b a7       	std	Y+43, r24	; 0x2b
  _delay_ms(1);
  set_E;
     198:	a2 e3       	ldi	r26, 0x32	; 50
     19a:	b0 e0       	ldi	r27, 0x00	; 0
     19c:	e2 e3       	ldi	r30, 0x32	; 50
     19e:	f0 e0       	ldi	r31, 0x00	; 0
     1a0:	80 81       	ld	r24, Z
     1a2:	80 64       	ori	r24, 0x40	; 64
     1a4:	8c 93       	st	X, r24
     1a6:	80 e0       	ldi	r24, 0x00	; 0
     1a8:	90 e0       	ldi	r25, 0x00	; 0
     1aa:	a0 e8       	ldi	r26, 0x80	; 128
     1ac:	bf e3       	ldi	r27, 0x3F	; 63
     1ae:	8f a3       	std	Y+39, r24	; 0x27
     1b0:	98 a7       	std	Y+40, r25	; 0x28
     1b2:	a9 a7       	std	Y+41, r26	; 0x29
     1b4:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     1b6:	6f a1       	ldd	r22, Y+39	; 0x27
     1b8:	78 a5       	ldd	r23, Y+40	; 0x28
     1ba:	89 a5       	ldd	r24, Y+41	; 0x29
     1bc:	9a a5       	ldd	r25, Y+42	; 0x2a
     1be:	20 e0       	ldi	r18, 0x00	; 0
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	4a ef       	ldi	r20, 0xFA	; 250
     1c4:	54 e4       	ldi	r21, 0x44	; 68
     1c6:	0e 94 ba 07 	call	0xf74	; 0xf74 <__mulsf3>
     1ca:	dc 01       	movw	r26, r24
     1cc:	cb 01       	movw	r24, r22
     1ce:	8b a3       	std	Y+35, r24	; 0x23
     1d0:	9c a3       	std	Y+36, r25	; 0x24
     1d2:	ad a3       	std	Y+37, r26	; 0x25
     1d4:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     1d6:	6b a1       	ldd	r22, Y+35	; 0x23
     1d8:	7c a1       	ldd	r23, Y+36	; 0x24
     1da:	8d a1       	ldd	r24, Y+37	; 0x25
     1dc:	9e a1       	ldd	r25, Y+38	; 0x26
     1de:	20 e0       	ldi	r18, 0x00	; 0
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e8       	ldi	r20, 0x80	; 128
     1e4:	5f e3       	ldi	r21, 0x3F	; 63
     1e6:	0e 94 14 09 	call	0x1228	; 0x1228 <__ltsf2>
     1ea:	88 23       	and	r24, r24
     1ec:	2c f4       	brge	.+10     	; 0x1f8 <LCD_data+0x176>
		__ticks = 1;
     1ee:	81 e0       	ldi	r24, 0x01	; 1
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	9a a3       	std	Y+34, r25	; 0x22
     1f4:	89 a3       	std	Y+33, r24	; 0x21
     1f6:	3f c0       	rjmp	.+126    	; 0x276 <LCD_data+0x1f4>
	else if (__tmp > 65535)
     1f8:	6b a1       	ldd	r22, Y+35	; 0x23
     1fa:	7c a1       	ldd	r23, Y+36	; 0x24
     1fc:	8d a1       	ldd	r24, Y+37	; 0x25
     1fe:	9e a1       	ldd	r25, Y+38	; 0x26
     200:	20 e0       	ldi	r18, 0x00	; 0
     202:	3f ef       	ldi	r19, 0xFF	; 255
     204:	4f e7       	ldi	r20, 0x7F	; 127
     206:	57 e4       	ldi	r21, 0x47	; 71
     208:	0e 94 b4 08 	call	0x1168	; 0x1168 <__gtsf2>
     20c:	18 16       	cp	r1, r24
     20e:	4c f5       	brge	.+82     	; 0x262 <LCD_data+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     210:	6f a1       	ldd	r22, Y+39	; 0x27
     212:	78 a5       	ldd	r23, Y+40	; 0x28
     214:	89 a5       	ldd	r24, Y+41	; 0x29
     216:	9a a5       	ldd	r25, Y+42	; 0x2a
     218:	20 e0       	ldi	r18, 0x00	; 0
     21a:	30 e0       	ldi	r19, 0x00	; 0
     21c:	40 e2       	ldi	r20, 0x20	; 32
     21e:	51 e4       	ldi	r21, 0x41	; 65
     220:	0e 94 ba 07 	call	0xf74	; 0xf74 <__mulsf3>
     224:	dc 01       	movw	r26, r24
     226:	cb 01       	movw	r24, r22
     228:	bc 01       	movw	r22, r24
     22a:	cd 01       	movw	r24, r26
     22c:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fixunssfsi>
     230:	dc 01       	movw	r26, r24
     232:	cb 01       	movw	r24, r22
     234:	9a a3       	std	Y+34, r25	; 0x22
     236:	89 a3       	std	Y+33, r24	; 0x21
     238:	0f c0       	rjmp	.+30     	; 0x258 <LCD_data+0x1d6>
     23a:	88 ec       	ldi	r24, 0xC8	; 200
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	98 a3       	std	Y+32, r25	; 0x20
     240:	8f 8f       	std	Y+31, r24	; 0x1f
     242:	8f 8d       	ldd	r24, Y+31	; 0x1f
     244:	98 a1       	ldd	r25, Y+32	; 0x20
     246:	01 97       	sbiw	r24, 0x01	; 1
     248:	f1 f7       	brne	.-4      	; 0x246 <LCD_data+0x1c4>
     24a:	98 a3       	std	Y+32, r25	; 0x20
     24c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     24e:	89 a1       	ldd	r24, Y+33	; 0x21
     250:	9a a1       	ldd	r25, Y+34	; 0x22
     252:	01 97       	sbiw	r24, 0x01	; 1
     254:	9a a3       	std	Y+34, r25	; 0x22
     256:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     258:	89 a1       	ldd	r24, Y+33	; 0x21
     25a:	9a a1       	ldd	r25, Y+34	; 0x22
     25c:	00 97       	sbiw	r24, 0x00	; 0
     25e:	69 f7       	brne	.-38     	; 0x23a <LCD_data+0x1b8>
     260:	14 c0       	rjmp	.+40     	; 0x28a <LCD_data+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     262:	6b a1       	ldd	r22, Y+35	; 0x23
     264:	7c a1       	ldd	r23, Y+36	; 0x24
     266:	8d a1       	ldd	r24, Y+37	; 0x25
     268:	9e a1       	ldd	r25, Y+38	; 0x26
     26a:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fixunssfsi>
     26e:	dc 01       	movw	r26, r24
     270:	cb 01       	movw	r24, r22
     272:	9a a3       	std	Y+34, r25	; 0x22
     274:	89 a3       	std	Y+33, r24	; 0x21
     276:	89 a1       	ldd	r24, Y+33	; 0x21
     278:	9a a1       	ldd	r25, Y+34	; 0x22
     27a:	9e 8f       	std	Y+30, r25	; 0x1e
     27c:	8d 8f       	std	Y+29, r24	; 0x1d
     27e:	8d 8d       	ldd	r24, Y+29	; 0x1d
     280:	9e 8d       	ldd	r25, Y+30	; 0x1e
     282:	01 97       	sbiw	r24, 0x01	; 1
     284:	f1 f7       	brne	.-4      	; 0x282 <LCD_data+0x200>
     286:	9e 8f       	std	Y+30, r25	; 0x1e
     288:	8d 8f       	std	Y+29, r24	; 0x1d
  _delay_ms(1);
  PORTC =data;
     28a:	e5 e3       	ldi	r30, 0x35	; 53
     28c:	f0 e0       	ldi	r31, 0x00	; 0
     28e:	89 ad       	ldd	r24, Y+57	; 0x39
     290:	80 83       	st	Z, r24
     292:	80 e0       	ldi	r24, 0x00	; 0
     294:	90 e0       	ldi	r25, 0x00	; 0
     296:	a0 e8       	ldi	r26, 0x80	; 128
     298:	bf e3       	ldi	r27, 0x3F	; 63
     29a:	89 8f       	std	Y+25, r24	; 0x19
     29c:	9a 8f       	std	Y+26, r25	; 0x1a
     29e:	ab 8f       	std	Y+27, r26	; 0x1b
     2a0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     2a2:	69 8d       	ldd	r22, Y+25	; 0x19
     2a4:	7a 8d       	ldd	r23, Y+26	; 0x1a
     2a6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2a8:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2aa:	20 e0       	ldi	r18, 0x00	; 0
     2ac:	30 e0       	ldi	r19, 0x00	; 0
     2ae:	4a ef       	ldi	r20, 0xFA	; 250
     2b0:	54 e4       	ldi	r21, 0x44	; 68
     2b2:	0e 94 ba 07 	call	0xf74	; 0xf74 <__mulsf3>
     2b6:	dc 01       	movw	r26, r24
     2b8:	cb 01       	movw	r24, r22
     2ba:	8d 8b       	std	Y+21, r24	; 0x15
     2bc:	9e 8b       	std	Y+22, r25	; 0x16
     2be:	af 8b       	std	Y+23, r26	; 0x17
     2c0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     2c2:	6d 89       	ldd	r22, Y+21	; 0x15
     2c4:	7e 89       	ldd	r23, Y+22	; 0x16
     2c6:	8f 89       	ldd	r24, Y+23	; 0x17
     2c8:	98 8d       	ldd	r25, Y+24	; 0x18
     2ca:	20 e0       	ldi	r18, 0x00	; 0
     2cc:	30 e0       	ldi	r19, 0x00	; 0
     2ce:	40 e8       	ldi	r20, 0x80	; 128
     2d0:	5f e3       	ldi	r21, 0x3F	; 63
     2d2:	0e 94 14 09 	call	0x1228	; 0x1228 <__ltsf2>
     2d6:	88 23       	and	r24, r24
     2d8:	2c f4       	brge	.+10     	; 0x2e4 <LCD_data+0x262>
		__ticks = 1;
     2da:	81 e0       	ldi	r24, 0x01	; 1
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	9c 8b       	std	Y+20, r25	; 0x14
     2e0:	8b 8b       	std	Y+19, r24	; 0x13
     2e2:	3f c0       	rjmp	.+126    	; 0x362 <LCD_data+0x2e0>
	else if (__tmp > 65535)
     2e4:	6d 89       	ldd	r22, Y+21	; 0x15
     2e6:	7e 89       	ldd	r23, Y+22	; 0x16
     2e8:	8f 89       	ldd	r24, Y+23	; 0x17
     2ea:	98 8d       	ldd	r25, Y+24	; 0x18
     2ec:	20 e0       	ldi	r18, 0x00	; 0
     2ee:	3f ef       	ldi	r19, 0xFF	; 255
     2f0:	4f e7       	ldi	r20, 0x7F	; 127
     2f2:	57 e4       	ldi	r21, 0x47	; 71
     2f4:	0e 94 b4 08 	call	0x1168	; 0x1168 <__gtsf2>
     2f8:	18 16       	cp	r1, r24
     2fa:	4c f5       	brge	.+82     	; 0x34e <LCD_data+0x2cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2fc:	69 8d       	ldd	r22, Y+25	; 0x19
     2fe:	7a 8d       	ldd	r23, Y+26	; 0x1a
     300:	8b 8d       	ldd	r24, Y+27	; 0x1b
     302:	9c 8d       	ldd	r25, Y+28	; 0x1c
     304:	20 e0       	ldi	r18, 0x00	; 0
     306:	30 e0       	ldi	r19, 0x00	; 0
     308:	40 e2       	ldi	r20, 0x20	; 32
     30a:	51 e4       	ldi	r21, 0x41	; 65
     30c:	0e 94 ba 07 	call	0xf74	; 0xf74 <__mulsf3>
     310:	dc 01       	movw	r26, r24
     312:	cb 01       	movw	r24, r22
     314:	bc 01       	movw	r22, r24
     316:	cd 01       	movw	r24, r26
     318:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fixunssfsi>
     31c:	dc 01       	movw	r26, r24
     31e:	cb 01       	movw	r24, r22
     320:	9c 8b       	std	Y+20, r25	; 0x14
     322:	8b 8b       	std	Y+19, r24	; 0x13
     324:	0f c0       	rjmp	.+30     	; 0x344 <LCD_data+0x2c2>
     326:	88 ec       	ldi	r24, 0xC8	; 200
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	9a 8b       	std	Y+18, r25	; 0x12
     32c:	89 8b       	std	Y+17, r24	; 0x11
     32e:	89 89       	ldd	r24, Y+17	; 0x11
     330:	9a 89       	ldd	r25, Y+18	; 0x12
     332:	01 97       	sbiw	r24, 0x01	; 1
     334:	f1 f7       	brne	.-4      	; 0x332 <LCD_data+0x2b0>
     336:	9a 8b       	std	Y+18, r25	; 0x12
     338:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     33a:	8b 89       	ldd	r24, Y+19	; 0x13
     33c:	9c 89       	ldd	r25, Y+20	; 0x14
     33e:	01 97       	sbiw	r24, 0x01	; 1
     340:	9c 8b       	std	Y+20, r25	; 0x14
     342:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     344:	8b 89       	ldd	r24, Y+19	; 0x13
     346:	9c 89       	ldd	r25, Y+20	; 0x14
     348:	00 97       	sbiw	r24, 0x00	; 0
     34a:	69 f7       	brne	.-38     	; 0x326 <LCD_data+0x2a4>
     34c:	14 c0       	rjmp	.+40     	; 0x376 <LCD_data+0x2f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     34e:	6d 89       	ldd	r22, Y+21	; 0x15
     350:	7e 89       	ldd	r23, Y+22	; 0x16
     352:	8f 89       	ldd	r24, Y+23	; 0x17
     354:	98 8d       	ldd	r25, Y+24	; 0x18
     356:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fixunssfsi>
     35a:	dc 01       	movw	r26, r24
     35c:	cb 01       	movw	r24, r22
     35e:	9c 8b       	std	Y+20, r25	; 0x14
     360:	8b 8b       	std	Y+19, r24	; 0x13
     362:	8b 89       	ldd	r24, Y+19	; 0x13
     364:	9c 89       	ldd	r25, Y+20	; 0x14
     366:	98 8b       	std	Y+16, r25	; 0x10
     368:	8f 87       	std	Y+15, r24	; 0x0f
     36a:	8f 85       	ldd	r24, Y+15	; 0x0f
     36c:	98 89       	ldd	r25, Y+16	; 0x10
     36e:	01 97       	sbiw	r24, 0x01	; 1
     370:	f1 f7       	brne	.-4      	; 0x36e <LCD_data+0x2ec>
     372:	98 8b       	std	Y+16, r25	; 0x10
     374:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_ms(1);
  clear_E;
     376:	a2 e3       	ldi	r26, 0x32	; 50
     378:	b0 e0       	ldi	r27, 0x00	; 0
     37a:	e2 e3       	ldi	r30, 0x32	; 50
     37c:	f0 e0       	ldi	r31, 0x00	; 0
     37e:	80 81       	ld	r24, Z
     380:	8f 7b       	andi	r24, 0xBF	; 191
     382:	8c 93       	st	X, r24
     384:	80 e0       	ldi	r24, 0x00	; 0
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	a0 e8       	ldi	r26, 0x80	; 128
     38a:	bf e3       	ldi	r27, 0x3F	; 63
     38c:	8b 87       	std	Y+11, r24	; 0x0b
     38e:	9c 87       	std	Y+12, r25	; 0x0c
     390:	ad 87       	std	Y+13, r26	; 0x0d
     392:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     394:	6b 85       	ldd	r22, Y+11	; 0x0b
     396:	7c 85       	ldd	r23, Y+12	; 0x0c
     398:	8d 85       	ldd	r24, Y+13	; 0x0d
     39a:	9e 85       	ldd	r25, Y+14	; 0x0e
     39c:	20 e0       	ldi	r18, 0x00	; 0
     39e:	30 e0       	ldi	r19, 0x00	; 0
     3a0:	4a ef       	ldi	r20, 0xFA	; 250
     3a2:	54 e4       	ldi	r21, 0x44	; 68
     3a4:	0e 94 ba 07 	call	0xf74	; 0xf74 <__mulsf3>
     3a8:	dc 01       	movw	r26, r24
     3aa:	cb 01       	movw	r24, r22
     3ac:	8f 83       	std	Y+7, r24	; 0x07
     3ae:	98 87       	std	Y+8, r25	; 0x08
     3b0:	a9 87       	std	Y+9, r26	; 0x09
     3b2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     3b4:	6f 81       	ldd	r22, Y+7	; 0x07
     3b6:	78 85       	ldd	r23, Y+8	; 0x08
     3b8:	89 85       	ldd	r24, Y+9	; 0x09
     3ba:	9a 85       	ldd	r25, Y+10	; 0x0a
     3bc:	20 e0       	ldi	r18, 0x00	; 0
     3be:	30 e0       	ldi	r19, 0x00	; 0
     3c0:	40 e8       	ldi	r20, 0x80	; 128
     3c2:	5f e3       	ldi	r21, 0x3F	; 63
     3c4:	0e 94 14 09 	call	0x1228	; 0x1228 <__ltsf2>
     3c8:	88 23       	and	r24, r24
     3ca:	2c f4       	brge	.+10     	; 0x3d6 <LCD_data+0x354>
		__ticks = 1;
     3cc:	81 e0       	ldi	r24, 0x01	; 1
     3ce:	90 e0       	ldi	r25, 0x00	; 0
     3d0:	9e 83       	std	Y+6, r25	; 0x06
     3d2:	8d 83       	std	Y+5, r24	; 0x05
     3d4:	3f c0       	rjmp	.+126    	; 0x454 <LCD_data+0x3d2>
	else if (__tmp > 65535)
     3d6:	6f 81       	ldd	r22, Y+7	; 0x07
     3d8:	78 85       	ldd	r23, Y+8	; 0x08
     3da:	89 85       	ldd	r24, Y+9	; 0x09
     3dc:	9a 85       	ldd	r25, Y+10	; 0x0a
     3de:	20 e0       	ldi	r18, 0x00	; 0
     3e0:	3f ef       	ldi	r19, 0xFF	; 255
     3e2:	4f e7       	ldi	r20, 0x7F	; 127
     3e4:	57 e4       	ldi	r21, 0x47	; 71
     3e6:	0e 94 b4 08 	call	0x1168	; 0x1168 <__gtsf2>
     3ea:	18 16       	cp	r1, r24
     3ec:	4c f5       	brge	.+82     	; 0x440 <LCD_data+0x3be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3ee:	6b 85       	ldd	r22, Y+11	; 0x0b
     3f0:	7c 85       	ldd	r23, Y+12	; 0x0c
     3f2:	8d 85       	ldd	r24, Y+13	; 0x0d
     3f4:	9e 85       	ldd	r25, Y+14	; 0x0e
     3f6:	20 e0       	ldi	r18, 0x00	; 0
     3f8:	30 e0       	ldi	r19, 0x00	; 0
     3fa:	40 e2       	ldi	r20, 0x20	; 32
     3fc:	51 e4       	ldi	r21, 0x41	; 65
     3fe:	0e 94 ba 07 	call	0xf74	; 0xf74 <__mulsf3>
     402:	dc 01       	movw	r26, r24
     404:	cb 01       	movw	r24, r22
     406:	bc 01       	movw	r22, r24
     408:	cd 01       	movw	r24, r26
     40a:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fixunssfsi>
     40e:	dc 01       	movw	r26, r24
     410:	cb 01       	movw	r24, r22
     412:	9e 83       	std	Y+6, r25	; 0x06
     414:	8d 83       	std	Y+5, r24	; 0x05
     416:	0f c0       	rjmp	.+30     	; 0x436 <LCD_data+0x3b4>
     418:	88 ec       	ldi	r24, 0xC8	; 200
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	9c 83       	std	Y+4, r25	; 0x04
     41e:	8b 83       	std	Y+3, r24	; 0x03
     420:	8b 81       	ldd	r24, Y+3	; 0x03
     422:	9c 81       	ldd	r25, Y+4	; 0x04
     424:	01 97       	sbiw	r24, 0x01	; 1
     426:	f1 f7       	brne	.-4      	; 0x424 <LCD_data+0x3a2>
     428:	9c 83       	std	Y+4, r25	; 0x04
     42a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     42c:	8d 81       	ldd	r24, Y+5	; 0x05
     42e:	9e 81       	ldd	r25, Y+6	; 0x06
     430:	01 97       	sbiw	r24, 0x01	; 1
     432:	9e 83       	std	Y+6, r25	; 0x06
     434:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     436:	8d 81       	ldd	r24, Y+5	; 0x05
     438:	9e 81       	ldd	r25, Y+6	; 0x06
     43a:	00 97       	sbiw	r24, 0x00	; 0
     43c:	69 f7       	brne	.-38     	; 0x418 <LCD_data+0x396>
     43e:	14 c0       	rjmp	.+40     	; 0x468 <__stack+0x9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     440:	6f 81       	ldd	r22, Y+7	; 0x07
     442:	78 85       	ldd	r23, Y+8	; 0x08
     444:	89 85       	ldd	r24, Y+9	; 0x09
     446:	9a 85       	ldd	r25, Y+10	; 0x0a
     448:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fixunssfsi>
     44c:	dc 01       	movw	r26, r24
     44e:	cb 01       	movw	r24, r22
     450:	9e 83       	std	Y+6, r25	; 0x06
     452:	8d 83       	std	Y+5, r24	; 0x05
     454:	8d 81       	ldd	r24, Y+5	; 0x05
     456:	9e 81       	ldd	r25, Y+6	; 0x06
     458:	9a 83       	std	Y+2, r25	; 0x02
     45a:	89 83       	std	Y+1, r24	; 0x01
     45c:	89 81       	ldd	r24, Y+1	; 0x01
     45e:	9a 81       	ldd	r25, Y+2	; 0x02
     460:	01 97       	sbiw	r24, 0x01	; 1
     462:	f1 f7       	brne	.-4      	; 0x460 <__stack+0x1>
     464:	9a 83       	std	Y+2, r25	; 0x02
     466:	89 83       	std	Y+1, r24	; 0x01
  _delay_ms(1);
}
     468:	e9 96       	adiw	r28, 0x39	; 57
     46a:	0f b6       	in	r0, 0x3f	; 63
     46c:	f8 94       	cli
     46e:	de bf       	out	0x3e, r29	; 62
     470:	0f be       	out	0x3f, r0	; 63
     472:	cd bf       	out	0x3d, r28	; 61
     474:	cf 91       	pop	r28
     476:	df 91       	pop	r29
     478:	08 95       	ret

0000047a <LCD_cmd>:
void LCD_cmd(unsigned char cmd)
{
     47a:	df 93       	push	r29
     47c:	cf 93       	push	r28
     47e:	cd b7       	in	r28, 0x3d	; 61
     480:	de b7       	in	r29, 0x3e	; 62
     482:	e9 97       	sbiw	r28, 0x39	; 57
     484:	0f b6       	in	r0, 0x3f	; 63
     486:	f8 94       	cli
     488:	de bf       	out	0x3e, r29	; 62
     48a:	0f be       	out	0x3f, r0	; 63
     48c:	cd bf       	out	0x3d, r28	; 61
     48e:	89 af       	std	Y+57, r24	; 0x39
  clear_RS;
     490:	a2 e3       	ldi	r26, 0x32	; 50
     492:	b0 e0       	ldi	r27, 0x00	; 0
     494:	e2 e3       	ldi	r30, 0x32	; 50
     496:	f0 e0       	ldi	r31, 0x00	; 0
     498:	80 81       	ld	r24, Z
     49a:	8f 7e       	andi	r24, 0xEF	; 239
     49c:	8c 93       	st	X, r24
  clear_RW;
     49e:	a2 e3       	ldi	r26, 0x32	; 50
     4a0:	b0 e0       	ldi	r27, 0x00	; 0
     4a2:	e2 e3       	ldi	r30, 0x32	; 50
     4a4:	f0 e0       	ldi	r31, 0x00	; 0
     4a6:	80 81       	ld	r24, Z
     4a8:	8f 7d       	andi	r24, 0xDF	; 223
     4aa:	8c 93       	st	X, r24
     4ac:	80 e0       	ldi	r24, 0x00	; 0
     4ae:	90 e0       	ldi	r25, 0x00	; 0
     4b0:	a0 e8       	ldi	r26, 0x80	; 128
     4b2:	bf e3       	ldi	r27, 0x3F	; 63
     4b4:	8d ab       	std	Y+53, r24	; 0x35
     4b6:	9e ab       	std	Y+54, r25	; 0x36
     4b8:	af ab       	std	Y+55, r26	; 0x37
     4ba:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     4bc:	6d a9       	ldd	r22, Y+53	; 0x35
     4be:	7e a9       	ldd	r23, Y+54	; 0x36
     4c0:	8f a9       	ldd	r24, Y+55	; 0x37
     4c2:	98 ad       	ldd	r25, Y+56	; 0x38
     4c4:	20 e0       	ldi	r18, 0x00	; 0
     4c6:	30 e0       	ldi	r19, 0x00	; 0
     4c8:	4a ef       	ldi	r20, 0xFA	; 250
     4ca:	54 e4       	ldi	r21, 0x44	; 68
     4cc:	0e 94 ba 07 	call	0xf74	; 0xf74 <__mulsf3>
     4d0:	dc 01       	movw	r26, r24
     4d2:	cb 01       	movw	r24, r22
     4d4:	89 ab       	std	Y+49, r24	; 0x31
     4d6:	9a ab       	std	Y+50, r25	; 0x32
     4d8:	ab ab       	std	Y+51, r26	; 0x33
     4da:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     4dc:	69 a9       	ldd	r22, Y+49	; 0x31
     4de:	7a a9       	ldd	r23, Y+50	; 0x32
     4e0:	8b a9       	ldd	r24, Y+51	; 0x33
     4e2:	9c a9       	ldd	r25, Y+52	; 0x34
     4e4:	20 e0       	ldi	r18, 0x00	; 0
     4e6:	30 e0       	ldi	r19, 0x00	; 0
     4e8:	40 e8       	ldi	r20, 0x80	; 128
     4ea:	5f e3       	ldi	r21, 0x3F	; 63
     4ec:	0e 94 14 09 	call	0x1228	; 0x1228 <__ltsf2>
     4f0:	88 23       	and	r24, r24
     4f2:	2c f4       	brge	.+10     	; 0x4fe <LCD_cmd+0x84>
		__ticks = 1;
     4f4:	81 e0       	ldi	r24, 0x01	; 1
     4f6:	90 e0       	ldi	r25, 0x00	; 0
     4f8:	98 ab       	std	Y+48, r25	; 0x30
     4fa:	8f a7       	std	Y+47, r24	; 0x2f
     4fc:	3f c0       	rjmp	.+126    	; 0x57c <LCD_cmd+0x102>
	else if (__tmp > 65535)
     4fe:	69 a9       	ldd	r22, Y+49	; 0x31
     500:	7a a9       	ldd	r23, Y+50	; 0x32
     502:	8b a9       	ldd	r24, Y+51	; 0x33
     504:	9c a9       	ldd	r25, Y+52	; 0x34
     506:	20 e0       	ldi	r18, 0x00	; 0
     508:	3f ef       	ldi	r19, 0xFF	; 255
     50a:	4f e7       	ldi	r20, 0x7F	; 127
     50c:	57 e4       	ldi	r21, 0x47	; 71
     50e:	0e 94 b4 08 	call	0x1168	; 0x1168 <__gtsf2>
     512:	18 16       	cp	r1, r24
     514:	4c f5       	brge	.+82     	; 0x568 <LCD_cmd+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     516:	6d a9       	ldd	r22, Y+53	; 0x35
     518:	7e a9       	ldd	r23, Y+54	; 0x36
     51a:	8f a9       	ldd	r24, Y+55	; 0x37
     51c:	98 ad       	ldd	r25, Y+56	; 0x38
     51e:	20 e0       	ldi	r18, 0x00	; 0
     520:	30 e0       	ldi	r19, 0x00	; 0
     522:	40 e2       	ldi	r20, 0x20	; 32
     524:	51 e4       	ldi	r21, 0x41	; 65
     526:	0e 94 ba 07 	call	0xf74	; 0xf74 <__mulsf3>
     52a:	dc 01       	movw	r26, r24
     52c:	cb 01       	movw	r24, r22
     52e:	bc 01       	movw	r22, r24
     530:	cd 01       	movw	r24, r26
     532:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fixunssfsi>
     536:	dc 01       	movw	r26, r24
     538:	cb 01       	movw	r24, r22
     53a:	98 ab       	std	Y+48, r25	; 0x30
     53c:	8f a7       	std	Y+47, r24	; 0x2f
     53e:	0f c0       	rjmp	.+30     	; 0x55e <LCD_cmd+0xe4>
     540:	88 ec       	ldi	r24, 0xC8	; 200
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	9e a7       	std	Y+46, r25	; 0x2e
     546:	8d a7       	std	Y+45, r24	; 0x2d
     548:	8d a5       	ldd	r24, Y+45	; 0x2d
     54a:	9e a5       	ldd	r25, Y+46	; 0x2e
     54c:	01 97       	sbiw	r24, 0x01	; 1
     54e:	f1 f7       	brne	.-4      	; 0x54c <LCD_cmd+0xd2>
     550:	9e a7       	std	Y+46, r25	; 0x2e
     552:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     554:	8f a5       	ldd	r24, Y+47	; 0x2f
     556:	98 a9       	ldd	r25, Y+48	; 0x30
     558:	01 97       	sbiw	r24, 0x01	; 1
     55a:	98 ab       	std	Y+48, r25	; 0x30
     55c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     55e:	8f a5       	ldd	r24, Y+47	; 0x2f
     560:	98 a9       	ldd	r25, Y+48	; 0x30
     562:	00 97       	sbiw	r24, 0x00	; 0
     564:	69 f7       	brne	.-38     	; 0x540 <LCD_cmd+0xc6>
     566:	14 c0       	rjmp	.+40     	; 0x590 <LCD_cmd+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     568:	69 a9       	ldd	r22, Y+49	; 0x31
     56a:	7a a9       	ldd	r23, Y+50	; 0x32
     56c:	8b a9       	ldd	r24, Y+51	; 0x33
     56e:	9c a9       	ldd	r25, Y+52	; 0x34
     570:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fixunssfsi>
     574:	dc 01       	movw	r26, r24
     576:	cb 01       	movw	r24, r22
     578:	98 ab       	std	Y+48, r25	; 0x30
     57a:	8f a7       	std	Y+47, r24	; 0x2f
     57c:	8f a5       	ldd	r24, Y+47	; 0x2f
     57e:	98 a9       	ldd	r25, Y+48	; 0x30
     580:	9c a7       	std	Y+44, r25	; 0x2c
     582:	8b a7       	std	Y+43, r24	; 0x2b
     584:	8b a5       	ldd	r24, Y+43	; 0x2b
     586:	9c a5       	ldd	r25, Y+44	; 0x2c
     588:	01 97       	sbiw	r24, 0x01	; 1
     58a:	f1 f7       	brne	.-4      	; 0x588 <LCD_cmd+0x10e>
     58c:	9c a7       	std	Y+44, r25	; 0x2c
     58e:	8b a7       	std	Y+43, r24	; 0x2b
  _delay_ms(1);
  set_E;
     590:	a2 e3       	ldi	r26, 0x32	; 50
     592:	b0 e0       	ldi	r27, 0x00	; 0
     594:	e2 e3       	ldi	r30, 0x32	; 50
     596:	f0 e0       	ldi	r31, 0x00	; 0
     598:	80 81       	ld	r24, Z
     59a:	80 64       	ori	r24, 0x40	; 64
     59c:	8c 93       	st	X, r24
     59e:	80 e0       	ldi	r24, 0x00	; 0
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	a0 e8       	ldi	r26, 0x80	; 128
     5a4:	bf e3       	ldi	r27, 0x3F	; 63
     5a6:	8f a3       	std	Y+39, r24	; 0x27
     5a8:	98 a7       	std	Y+40, r25	; 0x28
     5aa:	a9 a7       	std	Y+41, r26	; 0x29
     5ac:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     5ae:	6f a1       	ldd	r22, Y+39	; 0x27
     5b0:	78 a5       	ldd	r23, Y+40	; 0x28
     5b2:	89 a5       	ldd	r24, Y+41	; 0x29
     5b4:	9a a5       	ldd	r25, Y+42	; 0x2a
     5b6:	20 e0       	ldi	r18, 0x00	; 0
     5b8:	30 e0       	ldi	r19, 0x00	; 0
     5ba:	4a ef       	ldi	r20, 0xFA	; 250
     5bc:	54 e4       	ldi	r21, 0x44	; 68
     5be:	0e 94 ba 07 	call	0xf74	; 0xf74 <__mulsf3>
     5c2:	dc 01       	movw	r26, r24
     5c4:	cb 01       	movw	r24, r22
     5c6:	8b a3       	std	Y+35, r24	; 0x23
     5c8:	9c a3       	std	Y+36, r25	; 0x24
     5ca:	ad a3       	std	Y+37, r26	; 0x25
     5cc:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     5ce:	6b a1       	ldd	r22, Y+35	; 0x23
     5d0:	7c a1       	ldd	r23, Y+36	; 0x24
     5d2:	8d a1       	ldd	r24, Y+37	; 0x25
     5d4:	9e a1       	ldd	r25, Y+38	; 0x26
     5d6:	20 e0       	ldi	r18, 0x00	; 0
     5d8:	30 e0       	ldi	r19, 0x00	; 0
     5da:	40 e8       	ldi	r20, 0x80	; 128
     5dc:	5f e3       	ldi	r21, 0x3F	; 63
     5de:	0e 94 14 09 	call	0x1228	; 0x1228 <__ltsf2>
     5e2:	88 23       	and	r24, r24
     5e4:	2c f4       	brge	.+10     	; 0x5f0 <LCD_cmd+0x176>
		__ticks = 1;
     5e6:	81 e0       	ldi	r24, 0x01	; 1
     5e8:	90 e0       	ldi	r25, 0x00	; 0
     5ea:	9a a3       	std	Y+34, r25	; 0x22
     5ec:	89 a3       	std	Y+33, r24	; 0x21
     5ee:	3f c0       	rjmp	.+126    	; 0x66e <LCD_cmd+0x1f4>
	else if (__tmp > 65535)
     5f0:	6b a1       	ldd	r22, Y+35	; 0x23
     5f2:	7c a1       	ldd	r23, Y+36	; 0x24
     5f4:	8d a1       	ldd	r24, Y+37	; 0x25
     5f6:	9e a1       	ldd	r25, Y+38	; 0x26
     5f8:	20 e0       	ldi	r18, 0x00	; 0
     5fa:	3f ef       	ldi	r19, 0xFF	; 255
     5fc:	4f e7       	ldi	r20, 0x7F	; 127
     5fe:	57 e4       	ldi	r21, 0x47	; 71
     600:	0e 94 b4 08 	call	0x1168	; 0x1168 <__gtsf2>
     604:	18 16       	cp	r1, r24
     606:	4c f5       	brge	.+82     	; 0x65a <LCD_cmd+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     608:	6f a1       	ldd	r22, Y+39	; 0x27
     60a:	78 a5       	ldd	r23, Y+40	; 0x28
     60c:	89 a5       	ldd	r24, Y+41	; 0x29
     60e:	9a a5       	ldd	r25, Y+42	; 0x2a
     610:	20 e0       	ldi	r18, 0x00	; 0
     612:	30 e0       	ldi	r19, 0x00	; 0
     614:	40 e2       	ldi	r20, 0x20	; 32
     616:	51 e4       	ldi	r21, 0x41	; 65
     618:	0e 94 ba 07 	call	0xf74	; 0xf74 <__mulsf3>
     61c:	dc 01       	movw	r26, r24
     61e:	cb 01       	movw	r24, r22
     620:	bc 01       	movw	r22, r24
     622:	cd 01       	movw	r24, r26
     624:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fixunssfsi>
     628:	dc 01       	movw	r26, r24
     62a:	cb 01       	movw	r24, r22
     62c:	9a a3       	std	Y+34, r25	; 0x22
     62e:	89 a3       	std	Y+33, r24	; 0x21
     630:	0f c0       	rjmp	.+30     	; 0x650 <LCD_cmd+0x1d6>
     632:	88 ec       	ldi	r24, 0xC8	; 200
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	98 a3       	std	Y+32, r25	; 0x20
     638:	8f 8f       	std	Y+31, r24	; 0x1f
     63a:	8f 8d       	ldd	r24, Y+31	; 0x1f
     63c:	98 a1       	ldd	r25, Y+32	; 0x20
     63e:	01 97       	sbiw	r24, 0x01	; 1
     640:	f1 f7       	brne	.-4      	; 0x63e <LCD_cmd+0x1c4>
     642:	98 a3       	std	Y+32, r25	; 0x20
     644:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     646:	89 a1       	ldd	r24, Y+33	; 0x21
     648:	9a a1       	ldd	r25, Y+34	; 0x22
     64a:	01 97       	sbiw	r24, 0x01	; 1
     64c:	9a a3       	std	Y+34, r25	; 0x22
     64e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     650:	89 a1       	ldd	r24, Y+33	; 0x21
     652:	9a a1       	ldd	r25, Y+34	; 0x22
     654:	00 97       	sbiw	r24, 0x00	; 0
     656:	69 f7       	brne	.-38     	; 0x632 <LCD_cmd+0x1b8>
     658:	14 c0       	rjmp	.+40     	; 0x682 <LCD_cmd+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     65a:	6b a1       	ldd	r22, Y+35	; 0x23
     65c:	7c a1       	ldd	r23, Y+36	; 0x24
     65e:	8d a1       	ldd	r24, Y+37	; 0x25
     660:	9e a1       	ldd	r25, Y+38	; 0x26
     662:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fixunssfsi>
     666:	dc 01       	movw	r26, r24
     668:	cb 01       	movw	r24, r22
     66a:	9a a3       	std	Y+34, r25	; 0x22
     66c:	89 a3       	std	Y+33, r24	; 0x21
     66e:	89 a1       	ldd	r24, Y+33	; 0x21
     670:	9a a1       	ldd	r25, Y+34	; 0x22
     672:	9e 8f       	std	Y+30, r25	; 0x1e
     674:	8d 8f       	std	Y+29, r24	; 0x1d
     676:	8d 8d       	ldd	r24, Y+29	; 0x1d
     678:	9e 8d       	ldd	r25, Y+30	; 0x1e
     67a:	01 97       	sbiw	r24, 0x01	; 1
     67c:	f1 f7       	brne	.-4      	; 0x67a <LCD_cmd+0x200>
     67e:	9e 8f       	std	Y+30, r25	; 0x1e
     680:	8d 8f       	std	Y+29, r24	; 0x1d
  _delay_ms(1);
   PORTC =cmd;
     682:	e5 e3       	ldi	r30, 0x35	; 53
     684:	f0 e0       	ldi	r31, 0x00	; 0
     686:	89 ad       	ldd	r24, Y+57	; 0x39
     688:	80 83       	st	Z, r24
     68a:	80 e0       	ldi	r24, 0x00	; 0
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	a0 e8       	ldi	r26, 0x80	; 128
     690:	bf e3       	ldi	r27, 0x3F	; 63
     692:	89 8f       	std	Y+25, r24	; 0x19
     694:	9a 8f       	std	Y+26, r25	; 0x1a
     696:	ab 8f       	std	Y+27, r26	; 0x1b
     698:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     69a:	69 8d       	ldd	r22, Y+25	; 0x19
     69c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     69e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     6a0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     6a2:	20 e0       	ldi	r18, 0x00	; 0
     6a4:	30 e0       	ldi	r19, 0x00	; 0
     6a6:	4a ef       	ldi	r20, 0xFA	; 250
     6a8:	54 e4       	ldi	r21, 0x44	; 68
     6aa:	0e 94 ba 07 	call	0xf74	; 0xf74 <__mulsf3>
     6ae:	dc 01       	movw	r26, r24
     6b0:	cb 01       	movw	r24, r22
     6b2:	8d 8b       	std	Y+21, r24	; 0x15
     6b4:	9e 8b       	std	Y+22, r25	; 0x16
     6b6:	af 8b       	std	Y+23, r26	; 0x17
     6b8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     6ba:	6d 89       	ldd	r22, Y+21	; 0x15
     6bc:	7e 89       	ldd	r23, Y+22	; 0x16
     6be:	8f 89       	ldd	r24, Y+23	; 0x17
     6c0:	98 8d       	ldd	r25, Y+24	; 0x18
     6c2:	20 e0       	ldi	r18, 0x00	; 0
     6c4:	30 e0       	ldi	r19, 0x00	; 0
     6c6:	40 e8       	ldi	r20, 0x80	; 128
     6c8:	5f e3       	ldi	r21, 0x3F	; 63
     6ca:	0e 94 14 09 	call	0x1228	; 0x1228 <__ltsf2>
     6ce:	88 23       	and	r24, r24
     6d0:	2c f4       	brge	.+10     	; 0x6dc <LCD_cmd+0x262>
		__ticks = 1;
     6d2:	81 e0       	ldi	r24, 0x01	; 1
     6d4:	90 e0       	ldi	r25, 0x00	; 0
     6d6:	9c 8b       	std	Y+20, r25	; 0x14
     6d8:	8b 8b       	std	Y+19, r24	; 0x13
     6da:	3f c0       	rjmp	.+126    	; 0x75a <LCD_cmd+0x2e0>
	else if (__tmp > 65535)
     6dc:	6d 89       	ldd	r22, Y+21	; 0x15
     6de:	7e 89       	ldd	r23, Y+22	; 0x16
     6e0:	8f 89       	ldd	r24, Y+23	; 0x17
     6e2:	98 8d       	ldd	r25, Y+24	; 0x18
     6e4:	20 e0       	ldi	r18, 0x00	; 0
     6e6:	3f ef       	ldi	r19, 0xFF	; 255
     6e8:	4f e7       	ldi	r20, 0x7F	; 127
     6ea:	57 e4       	ldi	r21, 0x47	; 71
     6ec:	0e 94 b4 08 	call	0x1168	; 0x1168 <__gtsf2>
     6f0:	18 16       	cp	r1, r24
     6f2:	4c f5       	brge	.+82     	; 0x746 <LCD_cmd+0x2cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6f4:	69 8d       	ldd	r22, Y+25	; 0x19
     6f6:	7a 8d       	ldd	r23, Y+26	; 0x1a
     6f8:	8b 8d       	ldd	r24, Y+27	; 0x1b
     6fa:	9c 8d       	ldd	r25, Y+28	; 0x1c
     6fc:	20 e0       	ldi	r18, 0x00	; 0
     6fe:	30 e0       	ldi	r19, 0x00	; 0
     700:	40 e2       	ldi	r20, 0x20	; 32
     702:	51 e4       	ldi	r21, 0x41	; 65
     704:	0e 94 ba 07 	call	0xf74	; 0xf74 <__mulsf3>
     708:	dc 01       	movw	r26, r24
     70a:	cb 01       	movw	r24, r22
     70c:	bc 01       	movw	r22, r24
     70e:	cd 01       	movw	r24, r26
     710:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fixunssfsi>
     714:	dc 01       	movw	r26, r24
     716:	cb 01       	movw	r24, r22
     718:	9c 8b       	std	Y+20, r25	; 0x14
     71a:	8b 8b       	std	Y+19, r24	; 0x13
     71c:	0f c0       	rjmp	.+30     	; 0x73c <LCD_cmd+0x2c2>
     71e:	88 ec       	ldi	r24, 0xC8	; 200
     720:	90 e0       	ldi	r25, 0x00	; 0
     722:	9a 8b       	std	Y+18, r25	; 0x12
     724:	89 8b       	std	Y+17, r24	; 0x11
     726:	89 89       	ldd	r24, Y+17	; 0x11
     728:	9a 89       	ldd	r25, Y+18	; 0x12
     72a:	01 97       	sbiw	r24, 0x01	; 1
     72c:	f1 f7       	brne	.-4      	; 0x72a <LCD_cmd+0x2b0>
     72e:	9a 8b       	std	Y+18, r25	; 0x12
     730:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     732:	8b 89       	ldd	r24, Y+19	; 0x13
     734:	9c 89       	ldd	r25, Y+20	; 0x14
     736:	01 97       	sbiw	r24, 0x01	; 1
     738:	9c 8b       	std	Y+20, r25	; 0x14
     73a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     73c:	8b 89       	ldd	r24, Y+19	; 0x13
     73e:	9c 89       	ldd	r25, Y+20	; 0x14
     740:	00 97       	sbiw	r24, 0x00	; 0
     742:	69 f7       	brne	.-38     	; 0x71e <LCD_cmd+0x2a4>
     744:	14 c0       	rjmp	.+40     	; 0x76e <LCD_cmd+0x2f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     746:	6d 89       	ldd	r22, Y+21	; 0x15
     748:	7e 89       	ldd	r23, Y+22	; 0x16
     74a:	8f 89       	ldd	r24, Y+23	; 0x17
     74c:	98 8d       	ldd	r25, Y+24	; 0x18
     74e:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fixunssfsi>
     752:	dc 01       	movw	r26, r24
     754:	cb 01       	movw	r24, r22
     756:	9c 8b       	std	Y+20, r25	; 0x14
     758:	8b 8b       	std	Y+19, r24	; 0x13
     75a:	8b 89       	ldd	r24, Y+19	; 0x13
     75c:	9c 89       	ldd	r25, Y+20	; 0x14
     75e:	98 8b       	std	Y+16, r25	; 0x10
     760:	8f 87       	std	Y+15, r24	; 0x0f
     762:	8f 85       	ldd	r24, Y+15	; 0x0f
     764:	98 89       	ldd	r25, Y+16	; 0x10
     766:	01 97       	sbiw	r24, 0x01	; 1
     768:	f1 f7       	brne	.-4      	; 0x766 <LCD_cmd+0x2ec>
     76a:	98 8b       	std	Y+16, r25	; 0x10
     76c:	8f 87       	std	Y+15, r24	; 0x0f
  _delay_ms(1);
  clear_E;
     76e:	a2 e3       	ldi	r26, 0x32	; 50
     770:	b0 e0       	ldi	r27, 0x00	; 0
     772:	e2 e3       	ldi	r30, 0x32	; 50
     774:	f0 e0       	ldi	r31, 0x00	; 0
     776:	80 81       	ld	r24, Z
     778:	8f 7b       	andi	r24, 0xBF	; 191
     77a:	8c 93       	st	X, r24
     77c:	80 e0       	ldi	r24, 0x00	; 0
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	a0 e8       	ldi	r26, 0x80	; 128
     782:	bf e3       	ldi	r27, 0x3F	; 63
     784:	8b 87       	std	Y+11, r24	; 0x0b
     786:	9c 87       	std	Y+12, r25	; 0x0c
     788:	ad 87       	std	Y+13, r26	; 0x0d
     78a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     78c:	6b 85       	ldd	r22, Y+11	; 0x0b
     78e:	7c 85       	ldd	r23, Y+12	; 0x0c
     790:	8d 85       	ldd	r24, Y+13	; 0x0d
     792:	9e 85       	ldd	r25, Y+14	; 0x0e
     794:	20 e0       	ldi	r18, 0x00	; 0
     796:	30 e0       	ldi	r19, 0x00	; 0
     798:	4a ef       	ldi	r20, 0xFA	; 250
     79a:	54 e4       	ldi	r21, 0x44	; 68
     79c:	0e 94 ba 07 	call	0xf74	; 0xf74 <__mulsf3>
     7a0:	dc 01       	movw	r26, r24
     7a2:	cb 01       	movw	r24, r22
     7a4:	8f 83       	std	Y+7, r24	; 0x07
     7a6:	98 87       	std	Y+8, r25	; 0x08
     7a8:	a9 87       	std	Y+9, r26	; 0x09
     7aa:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     7ac:	6f 81       	ldd	r22, Y+7	; 0x07
     7ae:	78 85       	ldd	r23, Y+8	; 0x08
     7b0:	89 85       	ldd	r24, Y+9	; 0x09
     7b2:	9a 85       	ldd	r25, Y+10	; 0x0a
     7b4:	20 e0       	ldi	r18, 0x00	; 0
     7b6:	30 e0       	ldi	r19, 0x00	; 0
     7b8:	40 e8       	ldi	r20, 0x80	; 128
     7ba:	5f e3       	ldi	r21, 0x3F	; 63
     7bc:	0e 94 14 09 	call	0x1228	; 0x1228 <__ltsf2>
     7c0:	88 23       	and	r24, r24
     7c2:	2c f4       	brge	.+10     	; 0x7ce <LCD_cmd+0x354>
		__ticks = 1;
     7c4:	81 e0       	ldi	r24, 0x01	; 1
     7c6:	90 e0       	ldi	r25, 0x00	; 0
     7c8:	9e 83       	std	Y+6, r25	; 0x06
     7ca:	8d 83       	std	Y+5, r24	; 0x05
     7cc:	3f c0       	rjmp	.+126    	; 0x84c <LCD_cmd+0x3d2>
	else if (__tmp > 65535)
     7ce:	6f 81       	ldd	r22, Y+7	; 0x07
     7d0:	78 85       	ldd	r23, Y+8	; 0x08
     7d2:	89 85       	ldd	r24, Y+9	; 0x09
     7d4:	9a 85       	ldd	r25, Y+10	; 0x0a
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	3f ef       	ldi	r19, 0xFF	; 255
     7da:	4f e7       	ldi	r20, 0x7F	; 127
     7dc:	57 e4       	ldi	r21, 0x47	; 71
     7de:	0e 94 b4 08 	call	0x1168	; 0x1168 <__gtsf2>
     7e2:	18 16       	cp	r1, r24
     7e4:	4c f5       	brge	.+82     	; 0x838 <LCD_cmd+0x3be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7e6:	6b 85       	ldd	r22, Y+11	; 0x0b
     7e8:	7c 85       	ldd	r23, Y+12	; 0x0c
     7ea:	8d 85       	ldd	r24, Y+13	; 0x0d
     7ec:	9e 85       	ldd	r25, Y+14	; 0x0e
     7ee:	20 e0       	ldi	r18, 0x00	; 0
     7f0:	30 e0       	ldi	r19, 0x00	; 0
     7f2:	40 e2       	ldi	r20, 0x20	; 32
     7f4:	51 e4       	ldi	r21, 0x41	; 65
     7f6:	0e 94 ba 07 	call	0xf74	; 0xf74 <__mulsf3>
     7fa:	dc 01       	movw	r26, r24
     7fc:	cb 01       	movw	r24, r22
     7fe:	bc 01       	movw	r22, r24
     800:	cd 01       	movw	r24, r26
     802:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fixunssfsi>
     806:	dc 01       	movw	r26, r24
     808:	cb 01       	movw	r24, r22
     80a:	9e 83       	std	Y+6, r25	; 0x06
     80c:	8d 83       	std	Y+5, r24	; 0x05
     80e:	0f c0       	rjmp	.+30     	; 0x82e <LCD_cmd+0x3b4>
     810:	88 ec       	ldi	r24, 0xC8	; 200
     812:	90 e0       	ldi	r25, 0x00	; 0
     814:	9c 83       	std	Y+4, r25	; 0x04
     816:	8b 83       	std	Y+3, r24	; 0x03
     818:	8b 81       	ldd	r24, Y+3	; 0x03
     81a:	9c 81       	ldd	r25, Y+4	; 0x04
     81c:	01 97       	sbiw	r24, 0x01	; 1
     81e:	f1 f7       	brne	.-4      	; 0x81c <LCD_cmd+0x3a2>
     820:	9c 83       	std	Y+4, r25	; 0x04
     822:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     824:	8d 81       	ldd	r24, Y+5	; 0x05
     826:	9e 81       	ldd	r25, Y+6	; 0x06
     828:	01 97       	sbiw	r24, 0x01	; 1
     82a:	9e 83       	std	Y+6, r25	; 0x06
     82c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     82e:	8d 81       	ldd	r24, Y+5	; 0x05
     830:	9e 81       	ldd	r25, Y+6	; 0x06
     832:	00 97       	sbiw	r24, 0x00	; 0
     834:	69 f7       	brne	.-38     	; 0x810 <LCD_cmd+0x396>
     836:	14 c0       	rjmp	.+40     	; 0x860 <LCD_cmd+0x3e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     838:	6f 81       	ldd	r22, Y+7	; 0x07
     83a:	78 85       	ldd	r23, Y+8	; 0x08
     83c:	89 85       	ldd	r24, Y+9	; 0x09
     83e:	9a 85       	ldd	r25, Y+10	; 0x0a
     840:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <__fixunssfsi>
     844:	dc 01       	movw	r26, r24
     846:	cb 01       	movw	r24, r22
     848:	9e 83       	std	Y+6, r25	; 0x06
     84a:	8d 83       	std	Y+5, r24	; 0x05
     84c:	8d 81       	ldd	r24, Y+5	; 0x05
     84e:	9e 81       	ldd	r25, Y+6	; 0x06
     850:	9a 83       	std	Y+2, r25	; 0x02
     852:	89 83       	std	Y+1, r24	; 0x01
     854:	89 81       	ldd	r24, Y+1	; 0x01
     856:	9a 81       	ldd	r25, Y+2	; 0x02
     858:	01 97       	sbiw	r24, 0x01	; 1
     85a:	f1 f7       	brne	.-4      	; 0x858 <LCD_cmd+0x3de>
     85c:	9a 83       	std	Y+2, r25	; 0x02
     85e:	89 83       	std	Y+1, r24	; 0x01
  _delay_ms(1);
}
     860:	e9 96       	adiw	r28, 0x39	; 57
     862:	0f b6       	in	r0, 0x3f	; 63
     864:	f8 94       	cli
     866:	de bf       	out	0x3e, r29	; 62
     868:	0f be       	out	0x3f, r0	; 63
     86a:	cd bf       	out	0x3d, r28	; 61
     86c:	cf 91       	pop	r28
     86e:	df 91       	pop	r29
     870:	08 95       	ret

00000872 <LCD_intialize>:
void LCD_intialize ()
{
     872:	df 93       	push	r29
     874:	cf 93       	push	r28
     876:	cd b7       	in	r28, 0x3d	; 61
     878:	de b7       	in	r29, 0x3e	; 62
    LCD_cmd(0x38);  //2 lines
     87a:	88 e3       	ldi	r24, 0x38	; 56
     87c:	0e 94 3d 02 	call	0x47a	; 0x47a <LCD_cmd>
   LCD_cmd(0x01);   //clear
     880:	81 e0       	ldi	r24, 0x01	; 1
     882:	0e 94 3d 02 	call	0x47a	; 0x47a <LCD_cmd>
   LCD_cmd(0x0c);   //cursor off
     886:	8c e0       	ldi	r24, 0x0C	; 12
     888:	0e 94 3d 02 	call	0x47a	; 0x47a <LCD_cmd>

}
     88c:	cf 91       	pop	r28
     88e:	df 91       	pop	r29
     890:	08 95       	ret

00000892 <LCD_display_char>:
void LCD_display_char (unsigned char a)
{
     892:	df 93       	push	r29
     894:	cf 93       	push	r28
     896:	0f 92       	push	r0
     898:	cd b7       	in	r28, 0x3d	; 61
     89a:	de b7       	in	r29, 0x3e	; 62
     89c:	89 83       	std	Y+1, r24	; 0x01
     LCD_data(a);
     89e:	89 81       	ldd	r24, Y+1	; 0x01
     8a0:	0e 94 41 00 	call	0x82	; 0x82 <LCD_data>
}
     8a4:	0f 90       	pop	r0
     8a6:	cf 91       	pop	r28
     8a8:	df 91       	pop	r29
     8aa:	08 95       	ret

000008ac <LCD_display_string>:
void LCD_display_string (unsigned char *a)
{
     8ac:	df 93       	push	r29
     8ae:	cf 93       	push	r28
     8b0:	00 d0       	rcall	.+0      	; 0x8b2 <LCD_display_string+0x6>
     8b2:	00 d0       	rcall	.+0      	; 0x8b4 <LCD_display_string+0x8>
     8b4:	cd b7       	in	r28, 0x3d	; 61
     8b6:	de b7       	in	r29, 0x3e	; 62
     8b8:	9c 83       	std	Y+4, r25	; 0x04
     8ba:	8b 83       	std	Y+3, r24	; 0x03
    int i=0; ;
     8bc:	1a 82       	std	Y+2, r1	; 0x02
     8be:	19 82       	std	Y+1, r1	; 0x01
     8c0:	0f c0       	rjmp	.+30     	; 0x8e0 <LCD_display_string+0x34>
    while(a[i]!='\0')
    {
       LCD_data(a[i]);
     8c2:	29 81       	ldd	r18, Y+1	; 0x01
     8c4:	3a 81       	ldd	r19, Y+2	; 0x02
     8c6:	8b 81       	ldd	r24, Y+3	; 0x03
     8c8:	9c 81       	ldd	r25, Y+4	; 0x04
     8ca:	fc 01       	movw	r30, r24
     8cc:	e2 0f       	add	r30, r18
     8ce:	f3 1f       	adc	r31, r19
     8d0:	80 81       	ld	r24, Z
     8d2:	0e 94 41 00 	call	0x82	; 0x82 <LCD_data>
        i++;
     8d6:	89 81       	ldd	r24, Y+1	; 0x01
     8d8:	9a 81       	ldd	r25, Y+2	; 0x02
     8da:	01 96       	adiw	r24, 0x01	; 1
     8dc:	9a 83       	std	Y+2, r25	; 0x02
     8de:	89 83       	std	Y+1, r24	; 0x01
     LCD_data(a);
}
void LCD_display_string (unsigned char *a)
{
    int i=0; ;
    while(a[i]!='\0')
     8e0:	29 81       	ldd	r18, Y+1	; 0x01
     8e2:	3a 81       	ldd	r19, Y+2	; 0x02
     8e4:	8b 81       	ldd	r24, Y+3	; 0x03
     8e6:	9c 81       	ldd	r25, Y+4	; 0x04
     8e8:	fc 01       	movw	r30, r24
     8ea:	e2 0f       	add	r30, r18
     8ec:	f3 1f       	adc	r31, r19
     8ee:	80 81       	ld	r24, Z
     8f0:	88 23       	and	r24, r24
     8f2:	39 f7       	brne	.-50     	; 0x8c2 <LCD_display_string+0x16>
    {
       LCD_data(a[i]);
        i++;
    }
}
     8f4:	0f 90       	pop	r0
     8f6:	0f 90       	pop	r0
     8f8:	0f 90       	pop	r0
     8fa:	0f 90       	pop	r0
     8fc:	cf 91       	pop	r28
     8fe:	df 91       	pop	r29
     900:	08 95       	ret

00000902 <LCD_loc>:
void LCD_loc(int raw ,int col)
{
     902:	df 93       	push	r29
     904:	cf 93       	push	r28
     906:	00 d0       	rcall	.+0      	; 0x908 <LCD_loc+0x6>
     908:	00 d0       	rcall	.+0      	; 0x90a <LCD_loc+0x8>
     90a:	00 d0       	rcall	.+0      	; 0x90c <LCD_loc+0xa>
     90c:	cd b7       	in	r28, 0x3d	; 61
     90e:	de b7       	in	r29, 0x3e	; 62
     910:	9a 83       	std	Y+2, r25	; 0x02
     912:	89 83       	std	Y+1, r24	; 0x01
     914:	7c 83       	std	Y+4, r23	; 0x04
     916:	6b 83       	std	Y+3, r22	; 0x03
 switch(raw)
     918:	89 81       	ldd	r24, Y+1	; 0x01
     91a:	9a 81       	ldd	r25, Y+2	; 0x02
     91c:	9e 83       	std	Y+6, r25	; 0x06
     91e:	8d 83       	std	Y+5, r24	; 0x05
     920:	8d 81       	ldd	r24, Y+5	; 0x05
     922:	9e 81       	ldd	r25, Y+6	; 0x06
     924:	81 30       	cpi	r24, 0x01	; 1
     926:	91 05       	cpc	r25, r1
     928:	31 f0       	breq	.+12     	; 0x936 <LCD_loc+0x34>
     92a:	8d 81       	ldd	r24, Y+5	; 0x05
     92c:	9e 81       	ldd	r25, Y+6	; 0x06
     92e:	82 30       	cpi	r24, 0x02	; 2
     930:	91 05       	cpc	r25, r1
     932:	31 f0       	breq	.+12     	; 0x940 <LCD_loc+0x3e>
     934:	0a c0       	rjmp	.+20     	; 0x94a <LCD_loc+0x48>
    {
    case 1 :
        {
            LCD_cmd(col | 0x80);
     936:	8b 81       	ldd	r24, Y+3	; 0x03
     938:	80 68       	ori	r24, 0x80	; 128
     93a:	0e 94 3d 02 	call	0x47a	; 0x47a <LCD_cmd>
     93e:	05 c0       	rjmp	.+10     	; 0x94a <LCD_loc+0x48>

            break;
        }
     case 2 :
        {
            LCD_cmd((col+0x40) | 0x80);
     940:	8b 81       	ldd	r24, Y+3	; 0x03
     942:	80 5c       	subi	r24, 0xC0	; 192
     944:	80 68       	ori	r24, 0x80	; 128
     946:	0e 94 3d 02 	call	0x47a	; 0x47a <LCD_cmd>
            break;
        }
    }
}
     94a:	26 96       	adiw	r28, 0x06	; 6
     94c:	0f b6       	in	r0, 0x3f	; 63
     94e:	f8 94       	cli
     950:	de bf       	out	0x3e, r29	; 62
     952:	0f be       	out	0x3f, r0	; 63
     954:	cd bf       	out	0x3d, r28	; 61
     956:	cf 91       	pop	r28
     958:	df 91       	pop	r29
     95a:	08 95       	ret

0000095c <LCD_display_string_byloc>:
void LCD_display_string_byloc (unsigned char *a,int raw ,int col)
{
     95c:	df 93       	push	r29
     95e:	cf 93       	push	r28
     960:	cd b7       	in	r28, 0x3d	; 61
     962:	de b7       	in	r29, 0x3e	; 62
     964:	28 97       	sbiw	r28, 0x08	; 8
     966:	0f b6       	in	r0, 0x3f	; 63
     968:	f8 94       	cli
     96a:	de bf       	out	0x3e, r29	; 62
     96c:	0f be       	out	0x3f, r0	; 63
     96e:	cd bf       	out	0x3d, r28	; 61
     970:	9a 83       	std	Y+2, r25	; 0x02
     972:	89 83       	std	Y+1, r24	; 0x01
     974:	7c 83       	std	Y+4, r23	; 0x04
     976:	6b 83       	std	Y+3, r22	; 0x03
     978:	5e 83       	std	Y+6, r21	; 0x06
     97a:	4d 83       	std	Y+5, r20	; 0x05
    switch(raw)
     97c:	8b 81       	ldd	r24, Y+3	; 0x03
     97e:	9c 81       	ldd	r25, Y+4	; 0x04
     980:	98 87       	std	Y+8, r25	; 0x08
     982:	8f 83       	std	Y+7, r24	; 0x07
     984:	8f 81       	ldd	r24, Y+7	; 0x07
     986:	98 85       	ldd	r25, Y+8	; 0x08
     988:	81 30       	cpi	r24, 0x01	; 1
     98a:	91 05       	cpc	r25, r1
     98c:	31 f0       	breq	.+12     	; 0x99a <LCD_display_string_byloc+0x3e>
     98e:	8f 81       	ldd	r24, Y+7	; 0x07
     990:	98 85       	ldd	r25, Y+8	; 0x08
     992:	82 30       	cpi	r24, 0x02	; 2
     994:	91 05       	cpc	r25, r1
     996:	51 f0       	breq	.+20     	; 0x9ac <LCD_display_string_byloc+0x50>
     998:	12 c0       	rjmp	.+36     	; 0x9be <LCD_display_string_byloc+0x62>
    {
    case 1 :
        {
            LCD_cmd(col | 0x80);
     99a:	8d 81       	ldd	r24, Y+5	; 0x05
     99c:	80 68       	ori	r24, 0x80	; 128
     99e:	0e 94 3d 02 	call	0x47a	; 0x47a <LCD_cmd>
            LCD_display_string(a);
     9a2:	89 81       	ldd	r24, Y+1	; 0x01
     9a4:	9a 81       	ldd	r25, Y+2	; 0x02
     9a6:	0e 94 56 04 	call	0x8ac	; 0x8ac <LCD_display_string>
     9aa:	09 c0       	rjmp	.+18     	; 0x9be <LCD_display_string_byloc+0x62>
            break;
        }
     case 2 :
        {
            LCD_cmd((col+0x40) | 0x80);
     9ac:	8d 81       	ldd	r24, Y+5	; 0x05
     9ae:	80 5c       	subi	r24, 0xC0	; 192
     9b0:	80 68       	ori	r24, 0x80	; 128
     9b2:	0e 94 3d 02 	call	0x47a	; 0x47a <LCD_cmd>
            LCD_display_string(a);
     9b6:	89 81       	ldd	r24, Y+1	; 0x01
     9b8:	9a 81       	ldd	r25, Y+2	; 0x02
     9ba:	0e 94 56 04 	call	0x8ac	; 0x8ac <LCD_display_string>
            break;
        }
    }
}
     9be:	28 96       	adiw	r28, 0x08	; 8
     9c0:	0f b6       	in	r0, 0x3f	; 63
     9c2:	f8 94       	cli
     9c4:	de bf       	out	0x3e, r29	; 62
     9c6:	0f be       	out	0x3f, r0	; 63
     9c8:	cd bf       	out	0x3d, r28	; 61
     9ca:	cf 91       	pop	r28
     9cc:	df 91       	pop	r29
     9ce:	08 95       	ret

000009d0 <intrger_to_string>:
void intrger_to_string (char *s ,int size,int i)
{
     9d0:	df 93       	push	r29
     9d2:	cf 93       	push	r28
     9d4:	cd b7       	in	r28, 0x3d	; 61
     9d6:	de b7       	in	r29, 0x3e	; 62
     9d8:	2e 97       	sbiw	r28, 0x0e	; 14
     9da:	0f b6       	in	r0, 0x3f	; 63
     9dc:	f8 94       	cli
     9de:	de bf       	out	0x3e, r29	; 62
     9e0:	0f be       	out	0x3f, r0	; 63
     9e2:	cd bf       	out	0x3d, r28	; 61
     9e4:	9a 87       	std	Y+10, r25	; 0x0a
     9e6:	89 87       	std	Y+9, r24	; 0x09
     9e8:	7c 87       	std	Y+12, r23	; 0x0c
     9ea:	6b 87       	std	Y+11, r22	; 0x0b
     9ec:	5e 87       	std	Y+14, r21	; 0x0e
     9ee:	4d 87       	std	Y+13, r20	; 0x0d
    int rem;
     int len =0;
     9f0:	1e 82       	std	Y+6, r1	; 0x06
     9f2:	1d 82       	std	Y+5, r1	; 0x05
     int n = i;
     9f4:	8d 85       	ldd	r24, Y+13	; 0x0d
     9f6:	9e 85       	ldd	r25, Y+14	; 0x0e
     9f8:	9c 83       	std	Y+4, r25	; 0x04
     9fa:	8b 83       	std	Y+3, r24	; 0x03
     int k=0;
     9fc:	1a 82       	std	Y+2, r1	; 0x02
     9fe:	19 82       	std	Y+1, r1	; 0x01
     a00:	0f c0       	rjmp	.+30     	; 0xa20 <intrger_to_string+0x50>
     while(i!=0)
     {
         len++;
     a02:	8d 81       	ldd	r24, Y+5	; 0x05
     a04:	9e 81       	ldd	r25, Y+6	; 0x06
     a06:	01 96       	adiw	r24, 0x01	; 1
     a08:	9e 83       	std	Y+6, r25	; 0x06
     a0a:	8d 83       	std	Y+5, r24	; 0x05
         n=n/10;
     a0c:	8b 81       	ldd	r24, Y+3	; 0x03
     a0e:	9c 81       	ldd	r25, Y+4	; 0x04
     a10:	2a e0       	ldi	r18, 0x0A	; 10
     a12:	30 e0       	ldi	r19, 0x00	; 0
     a14:	b9 01       	movw	r22, r18
     a16:	0e 94 3e 0b 	call	0x167c	; 0x167c <__divmodhi4>
     a1a:	cb 01       	movw	r24, r22
     a1c:	9c 83       	std	Y+4, r25	; 0x04
     a1e:	8b 83       	std	Y+3, r24	; 0x03
{
    int rem;
     int len =0;
     int n = i;
     int k=0;
     while(i!=0)
     a20:	8d 85       	ldd	r24, Y+13	; 0x0d
     a22:	9e 85       	ldd	r25, Y+14	; 0x0e
     a24:	00 97       	sbiw	r24, 0x00	; 0
     a26:	69 f7       	brne	.-38     	; 0xa02 <intrger_to_string+0x32>
     {
         len++;
         n=n/10;
     }
for(k=0;k<len;k++)
     a28:	1a 82       	std	Y+2, r1	; 0x02
     a2a:	19 82       	std	Y+1, r1	; 0x01
     a2c:	2a c0       	rjmp	.+84     	; 0xa82 <intrger_to_string+0xb2>
{
  rem = i%10;
     a2e:	8d 85       	ldd	r24, Y+13	; 0x0d
     a30:	9e 85       	ldd	r25, Y+14	; 0x0e
     a32:	2a e0       	ldi	r18, 0x0A	; 10
     a34:	30 e0       	ldi	r19, 0x00	; 0
     a36:	b9 01       	movw	r22, r18
     a38:	0e 94 3e 0b 	call	0x167c	; 0x167c <__divmodhi4>
     a3c:	98 87       	std	Y+8, r25	; 0x08
     a3e:	8f 83       	std	Y+7, r24	; 0x07
  i=i/10;
     a40:	8d 85       	ldd	r24, Y+13	; 0x0d
     a42:	9e 85       	ldd	r25, Y+14	; 0x0e
     a44:	2a e0       	ldi	r18, 0x0A	; 10
     a46:	30 e0       	ldi	r19, 0x00	; 0
     a48:	b9 01       	movw	r22, r18
     a4a:	0e 94 3e 0b 	call	0x167c	; 0x167c <__divmodhi4>
     a4e:	cb 01       	movw	r24, r22
     a50:	9e 87       	std	Y+14, r25	; 0x0e
     a52:	8d 87       	std	Y+13, r24	; 0x0d
  s[len - (k+1)]=rem + '0';
     a54:	89 81       	ldd	r24, Y+1	; 0x01
     a56:	9a 81       	ldd	r25, Y+2	; 0x02
     a58:	9c 01       	movw	r18, r24
     a5a:	20 95       	com	r18
     a5c:	30 95       	com	r19
     a5e:	8d 81       	ldd	r24, Y+5	; 0x05
     a60:	9e 81       	ldd	r25, Y+6	; 0x06
     a62:	82 0f       	add	r24, r18
     a64:	93 1f       	adc	r25, r19
     a66:	9c 01       	movw	r18, r24
     a68:	89 85       	ldd	r24, Y+9	; 0x09
     a6a:	9a 85       	ldd	r25, Y+10	; 0x0a
     a6c:	fc 01       	movw	r30, r24
     a6e:	e2 0f       	add	r30, r18
     a70:	f3 1f       	adc	r31, r19
     a72:	8f 81       	ldd	r24, Y+7	; 0x07
     a74:	80 5d       	subi	r24, 0xD0	; 208
     a76:	80 83       	st	Z, r24
     while(i!=0)
     {
         len++;
         n=n/10;
     }
for(k=0;k<len;k++)
     a78:	89 81       	ldd	r24, Y+1	; 0x01
     a7a:	9a 81       	ldd	r25, Y+2	; 0x02
     a7c:	01 96       	adiw	r24, 0x01	; 1
     a7e:	9a 83       	std	Y+2, r25	; 0x02
     a80:	89 83       	std	Y+1, r24	; 0x01
     a82:	29 81       	ldd	r18, Y+1	; 0x01
     a84:	3a 81       	ldd	r19, Y+2	; 0x02
     a86:	8d 81       	ldd	r24, Y+5	; 0x05
     a88:	9e 81       	ldd	r25, Y+6	; 0x06
     a8a:	28 17       	cp	r18, r24
     a8c:	39 07       	cpc	r19, r25
     a8e:	7c f2       	brlt	.-98     	; 0xa2e <intrger_to_string+0x5e>
{
  rem = i%10;
  i=i/10;
  s[len - (k+1)]=rem + '0';
}
s[len]='\0';
     a90:	8d 81       	ldd	r24, Y+5	; 0x05
     a92:	9e 81       	ldd	r25, Y+6	; 0x06
     a94:	29 85       	ldd	r18, Y+9	; 0x09
     a96:	3a 85       	ldd	r19, Y+10	; 0x0a
     a98:	f9 01       	movw	r30, r18
     a9a:	e8 0f       	add	r30, r24
     a9c:	f9 1f       	adc	r31, r25
     a9e:	10 82       	st	Z, r1
}
     aa0:	2e 96       	adiw	r28, 0x0e	; 14
     aa2:	0f b6       	in	r0, 0x3f	; 63
     aa4:	f8 94       	cli
     aa6:	de bf       	out	0x3e, r29	; 62
     aa8:	0f be       	out	0x3f, r0	; 63
     aaa:	cd bf       	out	0x3d, r28	; 61
     aac:	cf 91       	pop	r28
     aae:	df 91       	pop	r29
     ab0:	08 95       	ret

00000ab2 <LCD_int_to_string>:
void LCD_int_to_string (int data)
{
     ab2:	df 93       	push	r29
     ab4:	cf 93       	push	r28
     ab6:	cd b7       	in	r28, 0x3d	; 61
     ab8:	de b7       	in	r29, 0x3e	; 62
     aba:	62 97       	sbiw	r28, 0x12	; 18
     abc:	0f b6       	in	r0, 0x3f	; 63
     abe:	f8 94       	cli
     ac0:	de bf       	out	0x3e, r29	; 62
     ac2:	0f be       	out	0x3f, r0	; 63
     ac4:	cd bf       	out	0x3d, r28	; 61
     ac6:	9a 8b       	std	Y+18, r25	; 0x12
     ac8:	89 8b       	std	Y+17, r24	; 0x11

     char buff[16]; /* String to hold the ascii result */
   itoa(data,buff,10); /* 10 for decimal */
     aca:	89 89       	ldd	r24, Y+17	; 0x11
     acc:	9a 89       	ldd	r25, Y+18	; 0x12
     ace:	9e 01       	movw	r18, r28
     ad0:	2f 5f       	subi	r18, 0xFF	; 255
     ad2:	3f 4f       	sbci	r19, 0xFF	; 255
     ad4:	b9 01       	movw	r22, r18
     ad6:	4a e0       	ldi	r20, 0x0A	; 10
     ad8:	50 e0       	ldi	r21, 0x00	; 0
     ada:	0e 94 9c 0b 	call	0x1738	; 0x1738 <itoa>

   LCD_display_string(buff);
     ade:	ce 01       	movw	r24, r28
     ae0:	01 96       	adiw	r24, 0x01	; 1
     ae2:	0e 94 56 04 	call	0x8ac	; 0x8ac <LCD_display_string>
}
     ae6:	62 96       	adiw	r28, 0x12	; 18
     ae8:	0f b6       	in	r0, 0x3f	; 63
     aea:	f8 94       	cli
     aec:	de bf       	out	0x3e, r29	; 62
     aee:	0f be       	out	0x3f, r0	; 63
     af0:	cd bf       	out	0x3d, r28	; 61
     af2:	cf 91       	pop	r28
     af4:	df 91       	pop	r29
     af6:	08 95       	ret

00000af8 <intialize_ADC>:

#include "LCD.h"
void intialize_ADC ()
{
     af8:	df 93       	push	r29
     afa:	cf 93       	push	r28
     afc:	cd b7       	in	r28, 0x3d	; 61
     afe:	de b7       	in	r29, 0x3e	; 62

  ADMUX = 0;;
     b00:	e7 e2       	ldi	r30, 0x27	; 39
     b02:	f0 e0       	ldi	r31, 0x00	; 0
     b04:	10 82       	st	Z, r1
  ADCSRA = (1<<ADEN) | (1<<ADPS1) | (1<<ADPS0) ;
     b06:	e6 e2       	ldi	r30, 0x26	; 38
     b08:	f0 e0       	ldi	r31, 0x00	; 0
     b0a:	83 e8       	ldi	r24, 0x83	; 131
     b0c:	80 83       	st	Z, r24

}
     b0e:	cf 91       	pop	r28
     b10:	df 91       	pop	r29
     b12:	08 95       	ret

00000b14 <ADC_read>:
unsigned int ADC_read()
{
     b14:	df 93       	push	r29
     b16:	cf 93       	push	r28
     b18:	cd b7       	in	r28, 0x3d	; 61
     b1a:	de b7       	in	r29, 0x3e	; 62
ADMUX &= 0xE0;
     b1c:	a7 e2       	ldi	r26, 0x27	; 39
     b1e:	b0 e0       	ldi	r27, 0x00	; 0
     b20:	e7 e2       	ldi	r30, 0x27	; 39
     b22:	f0 e0       	ldi	r31, 0x00	; 0
     b24:	80 81       	ld	r24, Z
     b26:	80 7e       	andi	r24, 0xE0	; 224
     b28:	8c 93       	st	X, r24
ADMUX = 0xE0|2;
     b2a:	e7 e2       	ldi	r30, 0x27	; 39
     b2c:	f0 e0       	ldi	r31, 0x00	; 0
     b2e:	82 ee       	ldi	r24, 0xE2	; 226
     b30:	80 83       	st	Z, r24
ADCSRA |=(1<<ADSC);
     b32:	a6 e2       	ldi	r26, 0x26	; 38
     b34:	b0 e0       	ldi	r27, 0x00	; 0
     b36:	e6 e2       	ldi	r30, 0x26	; 38
     b38:	f0 e0       	ldi	r31, 0x00	; 0
     b3a:	80 81       	ld	r24, Z
     b3c:	80 64       	ori	r24, 0x40	; 64
     b3e:	8c 93       	st	X, r24
while(!(ADCSRA&(1<<ADIF)));
     b40:	e6 e2       	ldi	r30, 0x26	; 38
     b42:	f0 e0       	ldi	r31, 0x00	; 0
     b44:	80 81       	ld	r24, Z
     b46:	88 2f       	mov	r24, r24
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	80 71       	andi	r24, 0x10	; 16
     b4c:	90 70       	andi	r25, 0x00	; 0
     b4e:	00 97       	sbiw	r24, 0x00	; 0
     b50:	b9 f3       	breq	.-18     	; 0xb40 <ADC_read+0x2c>
ADCSRA |=1<<ADIF;
     b52:	a6 e2       	ldi	r26, 0x26	; 38
     b54:	b0 e0       	ldi	r27, 0x00	; 0
     b56:	e6 e2       	ldi	r30, 0x26	; 38
     b58:	f0 e0       	ldi	r31, 0x00	; 0
     b5a:	80 81       	ld	r24, Z
     b5c:	80 61       	ori	r24, 0x10	; 16
     b5e:	8c 93       	st	X, r24
return ADC;
     b60:	e4 e2       	ldi	r30, 0x24	; 36
     b62:	f0 e0       	ldi	r31, 0x00	; 0
     b64:	80 81       	ld	r24, Z
     b66:	91 81       	ldd	r25, Z+1	; 0x01
}
     b68:	cf 91       	pop	r28
     b6a:	df 91       	pop	r29
     b6c:	08 95       	ret

00000b6e <main>:

int main(void)
{
     b6e:	df 93       	push	r29
     b70:	cf 93       	push	r28
     b72:	00 d0       	rcall	.+0      	; 0xb74 <main+0x6>
     b74:	cd b7       	in	r28, 0x3d	; 61
     b76:	de b7       	in	r29, 0x3e	; 62
   DDRC =0xff;
     b78:	e4 e3       	ldi	r30, 0x34	; 52
     b7a:	f0 e0       	ldi	r31, 0x00	; 0
     b7c:	8f ef       	ldi	r24, 0xFF	; 255
     b7e:	80 83       	st	Z, r24
   DDRD =0xff;
     b80:	e1 e3       	ldi	r30, 0x31	; 49
     b82:	f0 e0       	ldi	r31, 0x00	; 0
     b84:	8f ef       	ldi	r24, 0xFF	; 255
     b86:	80 83       	st	Z, r24
     DDRA &=~(1<<PA2);
     b88:	aa e3       	ldi	r26, 0x3A	; 58
     b8a:	b0 e0       	ldi	r27, 0x00	; 0
     b8c:	ea e3       	ldi	r30, 0x3A	; 58
     b8e:	f0 e0       	ldi	r31, 0x00	; 0
     b90:	80 81       	ld	r24, Z
     b92:	8b 7f       	andi	r24, 0xFB	; 251
     b94:	8c 93       	st	X, r24
   unsigned int temp;
  LCD_intialize ();
     b96:	0e 94 39 04 	call	0x872	; 0x872 <LCD_intialize>
  intialize_ADC ();
     b9a:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <intialize_ADC>
    while(1)
    {
        LCD_loc(1,1);
     b9e:	81 e0       	ldi	r24, 0x01	; 1
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	61 e0       	ldi	r22, 0x01	; 1
     ba4:	70 e0       	ldi	r23, 0x00	; 0
     ba6:	0e 94 81 04 	call	0x902	; 0x902 <LCD_loc>
       temp =ADC_read();
     baa:	0e 94 8a 05 	call	0xb14	; 0xb14 <ADC_read>
     bae:	9a 83       	std	Y+2, r25	; 0x02
     bb0:	89 83       	std	Y+1, r24	; 0x01
       temp = temp/256;
     bb2:	89 81       	ldd	r24, Y+1	; 0x01
     bb4:	9a 81       	ldd	r25, Y+2	; 0x02
     bb6:	89 2f       	mov	r24, r25
     bb8:	99 27       	eor	r25, r25
     bba:	9a 83       	std	Y+2, r25	; 0x02
     bbc:	89 83       	std	Y+1, r24	; 0x01

       LCD_int_to_string(temp);
     bbe:	89 81       	ldd	r24, Y+1	; 0x01
     bc0:	9a 81       	ldd	r25, Y+2	; 0x02
     bc2:	0e 94 59 05 	call	0xab2	; 0xab2 <LCD_int_to_string>
     bc6:	eb cf       	rjmp	.-42     	; 0xb9e <main+0x30>

00000bc8 <__fixunssfsi>:
     bc8:	ef 92       	push	r14
     bca:	ff 92       	push	r15
     bcc:	0f 93       	push	r16
     bce:	1f 93       	push	r17
     bd0:	7b 01       	movw	r14, r22
     bd2:	8c 01       	movw	r16, r24
     bd4:	20 e0       	ldi	r18, 0x00	; 0
     bd6:	30 e0       	ldi	r19, 0x00	; 0
     bd8:	40 e0       	ldi	r20, 0x00	; 0
     bda:	5f e4       	ldi	r21, 0x4F	; 79
     bdc:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <__gesf2>
     be0:	88 23       	and	r24, r24
     be2:	8c f0       	brlt	.+34     	; 0xc06 <__fixunssfsi+0x3e>
     be4:	c8 01       	movw	r24, r16
     be6:	b7 01       	movw	r22, r14
     be8:	20 e0       	ldi	r18, 0x00	; 0
     bea:	30 e0       	ldi	r19, 0x00	; 0
     bec:	40 e0       	ldi	r20, 0x00	; 0
     bee:	5f e4       	ldi	r21, 0x4F	; 79
     bf0:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <__subsf3>
     bf4:	0e 94 44 09 	call	0x1288	; 0x1288 <__fixsfsi>
     bf8:	9b 01       	movw	r18, r22
     bfa:	ac 01       	movw	r20, r24
     bfc:	20 50       	subi	r18, 0x00	; 0
     bfe:	30 40       	sbci	r19, 0x00	; 0
     c00:	40 40       	sbci	r20, 0x00	; 0
     c02:	50 48       	sbci	r21, 0x80	; 128
     c04:	06 c0       	rjmp	.+12     	; 0xc12 <__fixunssfsi+0x4a>
     c06:	c8 01       	movw	r24, r16
     c08:	b7 01       	movw	r22, r14
     c0a:	0e 94 44 09 	call	0x1288	; 0x1288 <__fixsfsi>
     c0e:	9b 01       	movw	r18, r22
     c10:	ac 01       	movw	r20, r24
     c12:	b9 01       	movw	r22, r18
     c14:	ca 01       	movw	r24, r20
     c16:	1f 91       	pop	r17
     c18:	0f 91       	pop	r16
     c1a:	ff 90       	pop	r15
     c1c:	ef 90       	pop	r14
     c1e:	08 95       	ret

00000c20 <_fpadd_parts>:
     c20:	a0 e0       	ldi	r26, 0x00	; 0
     c22:	b0 e0       	ldi	r27, 0x00	; 0
     c24:	e6 e1       	ldi	r30, 0x16	; 22
     c26:	f6 e0       	ldi	r31, 0x06	; 6
     c28:	0c 94 65 0b 	jmp	0x16ca	; 0x16ca <__prologue_saves__>
     c2c:	dc 01       	movw	r26, r24
     c2e:	2b 01       	movw	r4, r22
     c30:	fa 01       	movw	r30, r20
     c32:	9c 91       	ld	r25, X
     c34:	92 30       	cpi	r25, 0x02	; 2
     c36:	08 f4       	brcc	.+2      	; 0xc3a <_fpadd_parts+0x1a>
     c38:	39 c1       	rjmp	.+626    	; 0xeac <_fpadd_parts+0x28c>
     c3a:	eb 01       	movw	r28, r22
     c3c:	88 81       	ld	r24, Y
     c3e:	82 30       	cpi	r24, 0x02	; 2
     c40:	08 f4       	brcc	.+2      	; 0xc44 <_fpadd_parts+0x24>
     c42:	33 c1       	rjmp	.+614    	; 0xeaa <_fpadd_parts+0x28a>
     c44:	94 30       	cpi	r25, 0x04	; 4
     c46:	69 f4       	brne	.+26     	; 0xc62 <_fpadd_parts+0x42>
     c48:	84 30       	cpi	r24, 0x04	; 4
     c4a:	09 f0       	breq	.+2      	; 0xc4e <_fpadd_parts+0x2e>
     c4c:	2f c1       	rjmp	.+606    	; 0xeac <_fpadd_parts+0x28c>
     c4e:	11 96       	adiw	r26, 0x01	; 1
     c50:	9c 91       	ld	r25, X
     c52:	11 97       	sbiw	r26, 0x01	; 1
     c54:	89 81       	ldd	r24, Y+1	; 0x01
     c56:	98 17       	cp	r25, r24
     c58:	09 f4       	brne	.+2      	; 0xc5c <_fpadd_parts+0x3c>
     c5a:	28 c1       	rjmp	.+592    	; 0xeac <_fpadd_parts+0x28c>
     c5c:	a0 e6       	ldi	r26, 0x60	; 96
     c5e:	b0 e0       	ldi	r27, 0x00	; 0
     c60:	25 c1       	rjmp	.+586    	; 0xeac <_fpadd_parts+0x28c>
     c62:	84 30       	cpi	r24, 0x04	; 4
     c64:	09 f4       	brne	.+2      	; 0xc68 <_fpadd_parts+0x48>
     c66:	21 c1       	rjmp	.+578    	; 0xeaa <_fpadd_parts+0x28a>
     c68:	82 30       	cpi	r24, 0x02	; 2
     c6a:	a9 f4       	brne	.+42     	; 0xc96 <_fpadd_parts+0x76>
     c6c:	92 30       	cpi	r25, 0x02	; 2
     c6e:	09 f0       	breq	.+2      	; 0xc72 <_fpadd_parts+0x52>
     c70:	1d c1       	rjmp	.+570    	; 0xeac <_fpadd_parts+0x28c>
     c72:	9a 01       	movw	r18, r20
     c74:	ad 01       	movw	r20, r26
     c76:	88 e0       	ldi	r24, 0x08	; 8
     c78:	ea 01       	movw	r28, r20
     c7a:	09 90       	ld	r0, Y+
     c7c:	ae 01       	movw	r20, r28
     c7e:	e9 01       	movw	r28, r18
     c80:	09 92       	st	Y+, r0
     c82:	9e 01       	movw	r18, r28
     c84:	81 50       	subi	r24, 0x01	; 1
     c86:	c1 f7       	brne	.-16     	; 0xc78 <_fpadd_parts+0x58>
     c88:	e2 01       	movw	r28, r4
     c8a:	89 81       	ldd	r24, Y+1	; 0x01
     c8c:	11 96       	adiw	r26, 0x01	; 1
     c8e:	9c 91       	ld	r25, X
     c90:	89 23       	and	r24, r25
     c92:	81 83       	std	Z+1, r24	; 0x01
     c94:	08 c1       	rjmp	.+528    	; 0xea6 <_fpadd_parts+0x286>
     c96:	92 30       	cpi	r25, 0x02	; 2
     c98:	09 f4       	brne	.+2      	; 0xc9c <_fpadd_parts+0x7c>
     c9a:	07 c1       	rjmp	.+526    	; 0xeaa <_fpadd_parts+0x28a>
     c9c:	12 96       	adiw	r26, 0x02	; 2
     c9e:	2d 90       	ld	r2, X+
     ca0:	3c 90       	ld	r3, X
     ca2:	13 97       	sbiw	r26, 0x03	; 3
     ca4:	eb 01       	movw	r28, r22
     ca6:	8a 81       	ldd	r24, Y+2	; 0x02
     ca8:	9b 81       	ldd	r25, Y+3	; 0x03
     caa:	14 96       	adiw	r26, 0x04	; 4
     cac:	ad 90       	ld	r10, X+
     cae:	bd 90       	ld	r11, X+
     cb0:	cd 90       	ld	r12, X+
     cb2:	dc 90       	ld	r13, X
     cb4:	17 97       	sbiw	r26, 0x07	; 7
     cb6:	ec 80       	ldd	r14, Y+4	; 0x04
     cb8:	fd 80       	ldd	r15, Y+5	; 0x05
     cba:	0e 81       	ldd	r16, Y+6	; 0x06
     cbc:	1f 81       	ldd	r17, Y+7	; 0x07
     cbe:	91 01       	movw	r18, r2
     cc0:	28 1b       	sub	r18, r24
     cc2:	39 0b       	sbc	r19, r25
     cc4:	b9 01       	movw	r22, r18
     cc6:	37 ff       	sbrs	r19, 7
     cc8:	04 c0       	rjmp	.+8      	; 0xcd2 <_fpadd_parts+0xb2>
     cca:	66 27       	eor	r22, r22
     ccc:	77 27       	eor	r23, r23
     cce:	62 1b       	sub	r22, r18
     cd0:	73 0b       	sbc	r23, r19
     cd2:	60 32       	cpi	r22, 0x20	; 32
     cd4:	71 05       	cpc	r23, r1
     cd6:	0c f0       	brlt	.+2      	; 0xcda <_fpadd_parts+0xba>
     cd8:	61 c0       	rjmp	.+194    	; 0xd9c <_fpadd_parts+0x17c>
     cda:	12 16       	cp	r1, r18
     cdc:	13 06       	cpc	r1, r19
     cde:	6c f5       	brge	.+90     	; 0xd3a <_fpadd_parts+0x11a>
     ce0:	37 01       	movw	r6, r14
     ce2:	48 01       	movw	r8, r16
     ce4:	06 2e       	mov	r0, r22
     ce6:	04 c0       	rjmp	.+8      	; 0xcf0 <_fpadd_parts+0xd0>
     ce8:	96 94       	lsr	r9
     cea:	87 94       	ror	r8
     cec:	77 94       	ror	r7
     cee:	67 94       	ror	r6
     cf0:	0a 94       	dec	r0
     cf2:	d2 f7       	brpl	.-12     	; 0xce8 <_fpadd_parts+0xc8>
     cf4:	21 e0       	ldi	r18, 0x01	; 1
     cf6:	30 e0       	ldi	r19, 0x00	; 0
     cf8:	40 e0       	ldi	r20, 0x00	; 0
     cfa:	50 e0       	ldi	r21, 0x00	; 0
     cfc:	04 c0       	rjmp	.+8      	; 0xd06 <_fpadd_parts+0xe6>
     cfe:	22 0f       	add	r18, r18
     d00:	33 1f       	adc	r19, r19
     d02:	44 1f       	adc	r20, r20
     d04:	55 1f       	adc	r21, r21
     d06:	6a 95       	dec	r22
     d08:	d2 f7       	brpl	.-12     	; 0xcfe <_fpadd_parts+0xde>
     d0a:	21 50       	subi	r18, 0x01	; 1
     d0c:	30 40       	sbci	r19, 0x00	; 0
     d0e:	40 40       	sbci	r20, 0x00	; 0
     d10:	50 40       	sbci	r21, 0x00	; 0
     d12:	2e 21       	and	r18, r14
     d14:	3f 21       	and	r19, r15
     d16:	40 23       	and	r20, r16
     d18:	51 23       	and	r21, r17
     d1a:	21 15       	cp	r18, r1
     d1c:	31 05       	cpc	r19, r1
     d1e:	41 05       	cpc	r20, r1
     d20:	51 05       	cpc	r21, r1
     d22:	21 f0       	breq	.+8      	; 0xd2c <_fpadd_parts+0x10c>
     d24:	21 e0       	ldi	r18, 0x01	; 1
     d26:	30 e0       	ldi	r19, 0x00	; 0
     d28:	40 e0       	ldi	r20, 0x00	; 0
     d2a:	50 e0       	ldi	r21, 0x00	; 0
     d2c:	79 01       	movw	r14, r18
     d2e:	8a 01       	movw	r16, r20
     d30:	e6 28       	or	r14, r6
     d32:	f7 28       	or	r15, r7
     d34:	08 29       	or	r16, r8
     d36:	19 29       	or	r17, r9
     d38:	3c c0       	rjmp	.+120    	; 0xdb2 <_fpadd_parts+0x192>
     d3a:	23 2b       	or	r18, r19
     d3c:	d1 f1       	breq	.+116    	; 0xdb2 <_fpadd_parts+0x192>
     d3e:	26 0e       	add	r2, r22
     d40:	37 1e       	adc	r3, r23
     d42:	35 01       	movw	r6, r10
     d44:	46 01       	movw	r8, r12
     d46:	06 2e       	mov	r0, r22
     d48:	04 c0       	rjmp	.+8      	; 0xd52 <_fpadd_parts+0x132>
     d4a:	96 94       	lsr	r9
     d4c:	87 94       	ror	r8
     d4e:	77 94       	ror	r7
     d50:	67 94       	ror	r6
     d52:	0a 94       	dec	r0
     d54:	d2 f7       	brpl	.-12     	; 0xd4a <_fpadd_parts+0x12a>
     d56:	21 e0       	ldi	r18, 0x01	; 1
     d58:	30 e0       	ldi	r19, 0x00	; 0
     d5a:	40 e0       	ldi	r20, 0x00	; 0
     d5c:	50 e0       	ldi	r21, 0x00	; 0
     d5e:	04 c0       	rjmp	.+8      	; 0xd68 <_fpadd_parts+0x148>
     d60:	22 0f       	add	r18, r18
     d62:	33 1f       	adc	r19, r19
     d64:	44 1f       	adc	r20, r20
     d66:	55 1f       	adc	r21, r21
     d68:	6a 95       	dec	r22
     d6a:	d2 f7       	brpl	.-12     	; 0xd60 <_fpadd_parts+0x140>
     d6c:	21 50       	subi	r18, 0x01	; 1
     d6e:	30 40       	sbci	r19, 0x00	; 0
     d70:	40 40       	sbci	r20, 0x00	; 0
     d72:	50 40       	sbci	r21, 0x00	; 0
     d74:	2a 21       	and	r18, r10
     d76:	3b 21       	and	r19, r11
     d78:	4c 21       	and	r20, r12
     d7a:	5d 21       	and	r21, r13
     d7c:	21 15       	cp	r18, r1
     d7e:	31 05       	cpc	r19, r1
     d80:	41 05       	cpc	r20, r1
     d82:	51 05       	cpc	r21, r1
     d84:	21 f0       	breq	.+8      	; 0xd8e <_fpadd_parts+0x16e>
     d86:	21 e0       	ldi	r18, 0x01	; 1
     d88:	30 e0       	ldi	r19, 0x00	; 0
     d8a:	40 e0       	ldi	r20, 0x00	; 0
     d8c:	50 e0       	ldi	r21, 0x00	; 0
     d8e:	59 01       	movw	r10, r18
     d90:	6a 01       	movw	r12, r20
     d92:	a6 28       	or	r10, r6
     d94:	b7 28       	or	r11, r7
     d96:	c8 28       	or	r12, r8
     d98:	d9 28       	or	r13, r9
     d9a:	0b c0       	rjmp	.+22     	; 0xdb2 <_fpadd_parts+0x192>
     d9c:	82 15       	cp	r24, r2
     d9e:	93 05       	cpc	r25, r3
     da0:	2c f0       	brlt	.+10     	; 0xdac <_fpadd_parts+0x18c>
     da2:	1c 01       	movw	r2, r24
     da4:	aa 24       	eor	r10, r10
     da6:	bb 24       	eor	r11, r11
     da8:	65 01       	movw	r12, r10
     daa:	03 c0       	rjmp	.+6      	; 0xdb2 <_fpadd_parts+0x192>
     dac:	ee 24       	eor	r14, r14
     dae:	ff 24       	eor	r15, r15
     db0:	87 01       	movw	r16, r14
     db2:	11 96       	adiw	r26, 0x01	; 1
     db4:	9c 91       	ld	r25, X
     db6:	d2 01       	movw	r26, r4
     db8:	11 96       	adiw	r26, 0x01	; 1
     dba:	8c 91       	ld	r24, X
     dbc:	98 17       	cp	r25, r24
     dbe:	09 f4       	brne	.+2      	; 0xdc2 <_fpadd_parts+0x1a2>
     dc0:	45 c0       	rjmp	.+138    	; 0xe4c <_fpadd_parts+0x22c>
     dc2:	99 23       	and	r25, r25
     dc4:	39 f0       	breq	.+14     	; 0xdd4 <_fpadd_parts+0x1b4>
     dc6:	a8 01       	movw	r20, r16
     dc8:	97 01       	movw	r18, r14
     dca:	2a 19       	sub	r18, r10
     dcc:	3b 09       	sbc	r19, r11
     dce:	4c 09       	sbc	r20, r12
     dd0:	5d 09       	sbc	r21, r13
     dd2:	06 c0       	rjmp	.+12     	; 0xde0 <_fpadd_parts+0x1c0>
     dd4:	a6 01       	movw	r20, r12
     dd6:	95 01       	movw	r18, r10
     dd8:	2e 19       	sub	r18, r14
     dda:	3f 09       	sbc	r19, r15
     ddc:	40 0b       	sbc	r20, r16
     dde:	51 0b       	sbc	r21, r17
     de0:	57 fd       	sbrc	r21, 7
     de2:	08 c0       	rjmp	.+16     	; 0xdf4 <_fpadd_parts+0x1d4>
     de4:	11 82       	std	Z+1, r1	; 0x01
     de6:	33 82       	std	Z+3, r3	; 0x03
     de8:	22 82       	std	Z+2, r2	; 0x02
     dea:	24 83       	std	Z+4, r18	; 0x04
     dec:	35 83       	std	Z+5, r19	; 0x05
     dee:	46 83       	std	Z+6, r20	; 0x06
     df0:	57 83       	std	Z+7, r21	; 0x07
     df2:	1d c0       	rjmp	.+58     	; 0xe2e <_fpadd_parts+0x20e>
     df4:	81 e0       	ldi	r24, 0x01	; 1
     df6:	81 83       	std	Z+1, r24	; 0x01
     df8:	33 82       	std	Z+3, r3	; 0x03
     dfa:	22 82       	std	Z+2, r2	; 0x02
     dfc:	88 27       	eor	r24, r24
     dfe:	99 27       	eor	r25, r25
     e00:	dc 01       	movw	r26, r24
     e02:	82 1b       	sub	r24, r18
     e04:	93 0b       	sbc	r25, r19
     e06:	a4 0b       	sbc	r26, r20
     e08:	b5 0b       	sbc	r27, r21
     e0a:	84 83       	std	Z+4, r24	; 0x04
     e0c:	95 83       	std	Z+5, r25	; 0x05
     e0e:	a6 83       	std	Z+6, r26	; 0x06
     e10:	b7 83       	std	Z+7, r27	; 0x07
     e12:	0d c0       	rjmp	.+26     	; 0xe2e <_fpadd_parts+0x20e>
     e14:	22 0f       	add	r18, r18
     e16:	33 1f       	adc	r19, r19
     e18:	44 1f       	adc	r20, r20
     e1a:	55 1f       	adc	r21, r21
     e1c:	24 83       	std	Z+4, r18	; 0x04
     e1e:	35 83       	std	Z+5, r19	; 0x05
     e20:	46 83       	std	Z+6, r20	; 0x06
     e22:	57 83       	std	Z+7, r21	; 0x07
     e24:	82 81       	ldd	r24, Z+2	; 0x02
     e26:	93 81       	ldd	r25, Z+3	; 0x03
     e28:	01 97       	sbiw	r24, 0x01	; 1
     e2a:	93 83       	std	Z+3, r25	; 0x03
     e2c:	82 83       	std	Z+2, r24	; 0x02
     e2e:	24 81       	ldd	r18, Z+4	; 0x04
     e30:	35 81       	ldd	r19, Z+5	; 0x05
     e32:	46 81       	ldd	r20, Z+6	; 0x06
     e34:	57 81       	ldd	r21, Z+7	; 0x07
     e36:	da 01       	movw	r26, r20
     e38:	c9 01       	movw	r24, r18
     e3a:	01 97       	sbiw	r24, 0x01	; 1
     e3c:	a1 09       	sbc	r26, r1
     e3e:	b1 09       	sbc	r27, r1
     e40:	8f 5f       	subi	r24, 0xFF	; 255
     e42:	9f 4f       	sbci	r25, 0xFF	; 255
     e44:	af 4f       	sbci	r26, 0xFF	; 255
     e46:	bf 43       	sbci	r27, 0x3F	; 63
     e48:	28 f3       	brcs	.-54     	; 0xe14 <_fpadd_parts+0x1f4>
     e4a:	0b c0       	rjmp	.+22     	; 0xe62 <_fpadd_parts+0x242>
     e4c:	91 83       	std	Z+1, r25	; 0x01
     e4e:	33 82       	std	Z+3, r3	; 0x03
     e50:	22 82       	std	Z+2, r2	; 0x02
     e52:	ea 0c       	add	r14, r10
     e54:	fb 1c       	adc	r15, r11
     e56:	0c 1d       	adc	r16, r12
     e58:	1d 1d       	adc	r17, r13
     e5a:	e4 82       	std	Z+4, r14	; 0x04
     e5c:	f5 82       	std	Z+5, r15	; 0x05
     e5e:	06 83       	std	Z+6, r16	; 0x06
     e60:	17 83       	std	Z+7, r17	; 0x07
     e62:	83 e0       	ldi	r24, 0x03	; 3
     e64:	80 83       	st	Z, r24
     e66:	24 81       	ldd	r18, Z+4	; 0x04
     e68:	35 81       	ldd	r19, Z+5	; 0x05
     e6a:	46 81       	ldd	r20, Z+6	; 0x06
     e6c:	57 81       	ldd	r21, Z+7	; 0x07
     e6e:	57 ff       	sbrs	r21, 7
     e70:	1a c0       	rjmp	.+52     	; 0xea6 <_fpadd_parts+0x286>
     e72:	c9 01       	movw	r24, r18
     e74:	aa 27       	eor	r26, r26
     e76:	97 fd       	sbrc	r25, 7
     e78:	a0 95       	com	r26
     e7a:	ba 2f       	mov	r27, r26
     e7c:	81 70       	andi	r24, 0x01	; 1
     e7e:	90 70       	andi	r25, 0x00	; 0
     e80:	a0 70       	andi	r26, 0x00	; 0
     e82:	b0 70       	andi	r27, 0x00	; 0
     e84:	56 95       	lsr	r21
     e86:	47 95       	ror	r20
     e88:	37 95       	ror	r19
     e8a:	27 95       	ror	r18
     e8c:	82 2b       	or	r24, r18
     e8e:	93 2b       	or	r25, r19
     e90:	a4 2b       	or	r26, r20
     e92:	b5 2b       	or	r27, r21
     e94:	84 83       	std	Z+4, r24	; 0x04
     e96:	95 83       	std	Z+5, r25	; 0x05
     e98:	a6 83       	std	Z+6, r26	; 0x06
     e9a:	b7 83       	std	Z+7, r27	; 0x07
     e9c:	82 81       	ldd	r24, Z+2	; 0x02
     e9e:	93 81       	ldd	r25, Z+3	; 0x03
     ea0:	01 96       	adiw	r24, 0x01	; 1
     ea2:	93 83       	std	Z+3, r25	; 0x03
     ea4:	82 83       	std	Z+2, r24	; 0x02
     ea6:	df 01       	movw	r26, r30
     ea8:	01 c0       	rjmp	.+2      	; 0xeac <_fpadd_parts+0x28c>
     eaa:	d2 01       	movw	r26, r4
     eac:	cd 01       	movw	r24, r26
     eae:	cd b7       	in	r28, 0x3d	; 61
     eb0:	de b7       	in	r29, 0x3e	; 62
     eb2:	e2 e1       	ldi	r30, 0x12	; 18
     eb4:	0c 94 81 0b 	jmp	0x1702	; 0x1702 <__epilogue_restores__>

00000eb8 <__subsf3>:
     eb8:	a0 e2       	ldi	r26, 0x20	; 32
     eba:	b0 e0       	ldi	r27, 0x00	; 0
     ebc:	e2 e6       	ldi	r30, 0x62	; 98
     ebe:	f7 e0       	ldi	r31, 0x07	; 7
     ec0:	0c 94 71 0b 	jmp	0x16e2	; 0x16e2 <__prologue_saves__+0x18>
     ec4:	69 83       	std	Y+1, r22	; 0x01
     ec6:	7a 83       	std	Y+2, r23	; 0x02
     ec8:	8b 83       	std	Y+3, r24	; 0x03
     eca:	9c 83       	std	Y+4, r25	; 0x04
     ecc:	2d 83       	std	Y+5, r18	; 0x05
     ece:	3e 83       	std	Y+6, r19	; 0x06
     ed0:	4f 83       	std	Y+7, r20	; 0x07
     ed2:	58 87       	std	Y+8, r21	; 0x08
     ed4:	e9 e0       	ldi	r30, 0x09	; 9
     ed6:	ee 2e       	mov	r14, r30
     ed8:	f1 2c       	mov	r15, r1
     eda:	ec 0e       	add	r14, r28
     edc:	fd 1e       	adc	r15, r29
     ede:	ce 01       	movw	r24, r28
     ee0:	01 96       	adiw	r24, 0x01	; 1
     ee2:	b7 01       	movw	r22, r14
     ee4:	0e 94 6d 0a 	call	0x14da	; 0x14da <__unpack_f>
     ee8:	8e 01       	movw	r16, r28
     eea:	0f 5e       	subi	r16, 0xEF	; 239
     eec:	1f 4f       	sbci	r17, 0xFF	; 255
     eee:	ce 01       	movw	r24, r28
     ef0:	05 96       	adiw	r24, 0x05	; 5
     ef2:	b8 01       	movw	r22, r16
     ef4:	0e 94 6d 0a 	call	0x14da	; 0x14da <__unpack_f>
     ef8:	8a 89       	ldd	r24, Y+18	; 0x12
     efa:	91 e0       	ldi	r25, 0x01	; 1
     efc:	89 27       	eor	r24, r25
     efe:	8a 8b       	std	Y+18, r24	; 0x12
     f00:	c7 01       	movw	r24, r14
     f02:	b8 01       	movw	r22, r16
     f04:	ae 01       	movw	r20, r28
     f06:	47 5e       	subi	r20, 0xE7	; 231
     f08:	5f 4f       	sbci	r21, 0xFF	; 255
     f0a:	0e 94 10 06 	call	0xc20	; 0xc20 <_fpadd_parts>
     f0e:	0e 94 98 09 	call	0x1330	; 0x1330 <__pack_f>
     f12:	a0 96       	adiw	r28, 0x20	; 32
     f14:	e6 e0       	ldi	r30, 0x06	; 6
     f16:	0c 94 8d 0b 	jmp	0x171a	; 0x171a <__epilogue_restores__+0x18>

00000f1a <__addsf3>:
     f1a:	a0 e2       	ldi	r26, 0x20	; 32
     f1c:	b0 e0       	ldi	r27, 0x00	; 0
     f1e:	e3 e9       	ldi	r30, 0x93	; 147
     f20:	f7 e0       	ldi	r31, 0x07	; 7
     f22:	0c 94 71 0b 	jmp	0x16e2	; 0x16e2 <__prologue_saves__+0x18>
     f26:	69 83       	std	Y+1, r22	; 0x01
     f28:	7a 83       	std	Y+2, r23	; 0x02
     f2a:	8b 83       	std	Y+3, r24	; 0x03
     f2c:	9c 83       	std	Y+4, r25	; 0x04
     f2e:	2d 83       	std	Y+5, r18	; 0x05
     f30:	3e 83       	std	Y+6, r19	; 0x06
     f32:	4f 83       	std	Y+7, r20	; 0x07
     f34:	58 87       	std	Y+8, r21	; 0x08
     f36:	f9 e0       	ldi	r31, 0x09	; 9
     f38:	ef 2e       	mov	r14, r31
     f3a:	f1 2c       	mov	r15, r1
     f3c:	ec 0e       	add	r14, r28
     f3e:	fd 1e       	adc	r15, r29
     f40:	ce 01       	movw	r24, r28
     f42:	01 96       	adiw	r24, 0x01	; 1
     f44:	b7 01       	movw	r22, r14
     f46:	0e 94 6d 0a 	call	0x14da	; 0x14da <__unpack_f>
     f4a:	8e 01       	movw	r16, r28
     f4c:	0f 5e       	subi	r16, 0xEF	; 239
     f4e:	1f 4f       	sbci	r17, 0xFF	; 255
     f50:	ce 01       	movw	r24, r28
     f52:	05 96       	adiw	r24, 0x05	; 5
     f54:	b8 01       	movw	r22, r16
     f56:	0e 94 6d 0a 	call	0x14da	; 0x14da <__unpack_f>
     f5a:	c7 01       	movw	r24, r14
     f5c:	b8 01       	movw	r22, r16
     f5e:	ae 01       	movw	r20, r28
     f60:	47 5e       	subi	r20, 0xE7	; 231
     f62:	5f 4f       	sbci	r21, 0xFF	; 255
     f64:	0e 94 10 06 	call	0xc20	; 0xc20 <_fpadd_parts>
     f68:	0e 94 98 09 	call	0x1330	; 0x1330 <__pack_f>
     f6c:	a0 96       	adiw	r28, 0x20	; 32
     f6e:	e6 e0       	ldi	r30, 0x06	; 6
     f70:	0c 94 8d 0b 	jmp	0x171a	; 0x171a <__epilogue_restores__+0x18>

00000f74 <__mulsf3>:
     f74:	a0 e2       	ldi	r26, 0x20	; 32
     f76:	b0 e0       	ldi	r27, 0x00	; 0
     f78:	e0 ec       	ldi	r30, 0xC0	; 192
     f7a:	f7 e0       	ldi	r31, 0x07	; 7
     f7c:	0c 94 65 0b 	jmp	0x16ca	; 0x16ca <__prologue_saves__>
     f80:	69 83       	std	Y+1, r22	; 0x01
     f82:	7a 83       	std	Y+2, r23	; 0x02
     f84:	8b 83       	std	Y+3, r24	; 0x03
     f86:	9c 83       	std	Y+4, r25	; 0x04
     f88:	2d 83       	std	Y+5, r18	; 0x05
     f8a:	3e 83       	std	Y+6, r19	; 0x06
     f8c:	4f 83       	std	Y+7, r20	; 0x07
     f8e:	58 87       	std	Y+8, r21	; 0x08
     f90:	ce 01       	movw	r24, r28
     f92:	01 96       	adiw	r24, 0x01	; 1
     f94:	be 01       	movw	r22, r28
     f96:	67 5f       	subi	r22, 0xF7	; 247
     f98:	7f 4f       	sbci	r23, 0xFF	; 255
     f9a:	0e 94 6d 0a 	call	0x14da	; 0x14da <__unpack_f>
     f9e:	ce 01       	movw	r24, r28
     fa0:	05 96       	adiw	r24, 0x05	; 5
     fa2:	be 01       	movw	r22, r28
     fa4:	6f 5e       	subi	r22, 0xEF	; 239
     fa6:	7f 4f       	sbci	r23, 0xFF	; 255
     fa8:	0e 94 6d 0a 	call	0x14da	; 0x14da <__unpack_f>
     fac:	99 85       	ldd	r25, Y+9	; 0x09
     fae:	92 30       	cpi	r25, 0x02	; 2
     fb0:	88 f0       	brcs	.+34     	; 0xfd4 <__mulsf3+0x60>
     fb2:	89 89       	ldd	r24, Y+17	; 0x11
     fb4:	82 30       	cpi	r24, 0x02	; 2
     fb6:	c8 f0       	brcs	.+50     	; 0xfea <__mulsf3+0x76>
     fb8:	94 30       	cpi	r25, 0x04	; 4
     fba:	19 f4       	brne	.+6      	; 0xfc2 <__mulsf3+0x4e>
     fbc:	82 30       	cpi	r24, 0x02	; 2
     fbe:	51 f4       	brne	.+20     	; 0xfd4 <__mulsf3+0x60>
     fc0:	04 c0       	rjmp	.+8      	; 0xfca <__mulsf3+0x56>
     fc2:	84 30       	cpi	r24, 0x04	; 4
     fc4:	29 f4       	brne	.+10     	; 0xfd0 <__mulsf3+0x5c>
     fc6:	92 30       	cpi	r25, 0x02	; 2
     fc8:	81 f4       	brne	.+32     	; 0xfea <__mulsf3+0x76>
     fca:	80 e6       	ldi	r24, 0x60	; 96
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	c6 c0       	rjmp	.+396    	; 0x115c <__mulsf3+0x1e8>
     fd0:	92 30       	cpi	r25, 0x02	; 2
     fd2:	49 f4       	brne	.+18     	; 0xfe6 <__mulsf3+0x72>
     fd4:	20 e0       	ldi	r18, 0x00	; 0
     fd6:	9a 85       	ldd	r25, Y+10	; 0x0a
     fd8:	8a 89       	ldd	r24, Y+18	; 0x12
     fda:	98 13       	cpse	r25, r24
     fdc:	21 e0       	ldi	r18, 0x01	; 1
     fde:	2a 87       	std	Y+10, r18	; 0x0a
     fe0:	ce 01       	movw	r24, r28
     fe2:	09 96       	adiw	r24, 0x09	; 9
     fe4:	bb c0       	rjmp	.+374    	; 0x115c <__mulsf3+0x1e8>
     fe6:	82 30       	cpi	r24, 0x02	; 2
     fe8:	49 f4       	brne	.+18     	; 0xffc <__mulsf3+0x88>
     fea:	20 e0       	ldi	r18, 0x00	; 0
     fec:	9a 85       	ldd	r25, Y+10	; 0x0a
     fee:	8a 89       	ldd	r24, Y+18	; 0x12
     ff0:	98 13       	cpse	r25, r24
     ff2:	21 e0       	ldi	r18, 0x01	; 1
     ff4:	2a 8b       	std	Y+18, r18	; 0x12
     ff6:	ce 01       	movw	r24, r28
     ff8:	41 96       	adiw	r24, 0x11	; 17
     ffa:	b0 c0       	rjmp	.+352    	; 0x115c <__mulsf3+0x1e8>
     ffc:	2d 84       	ldd	r2, Y+13	; 0x0d
     ffe:	3e 84       	ldd	r3, Y+14	; 0x0e
    1000:	4f 84       	ldd	r4, Y+15	; 0x0f
    1002:	58 88       	ldd	r5, Y+16	; 0x10
    1004:	6d 88       	ldd	r6, Y+21	; 0x15
    1006:	7e 88       	ldd	r7, Y+22	; 0x16
    1008:	8f 88       	ldd	r8, Y+23	; 0x17
    100a:	98 8c       	ldd	r9, Y+24	; 0x18
    100c:	ee 24       	eor	r14, r14
    100e:	ff 24       	eor	r15, r15
    1010:	87 01       	movw	r16, r14
    1012:	aa 24       	eor	r10, r10
    1014:	bb 24       	eor	r11, r11
    1016:	65 01       	movw	r12, r10
    1018:	40 e0       	ldi	r20, 0x00	; 0
    101a:	50 e0       	ldi	r21, 0x00	; 0
    101c:	60 e0       	ldi	r22, 0x00	; 0
    101e:	70 e0       	ldi	r23, 0x00	; 0
    1020:	e0 e0       	ldi	r30, 0x00	; 0
    1022:	f0 e0       	ldi	r31, 0x00	; 0
    1024:	c1 01       	movw	r24, r2
    1026:	81 70       	andi	r24, 0x01	; 1
    1028:	90 70       	andi	r25, 0x00	; 0
    102a:	89 2b       	or	r24, r25
    102c:	e9 f0       	breq	.+58     	; 0x1068 <__mulsf3+0xf4>
    102e:	e6 0c       	add	r14, r6
    1030:	f7 1c       	adc	r15, r7
    1032:	08 1d       	adc	r16, r8
    1034:	19 1d       	adc	r17, r9
    1036:	9a 01       	movw	r18, r20
    1038:	ab 01       	movw	r20, r22
    103a:	2a 0d       	add	r18, r10
    103c:	3b 1d       	adc	r19, r11
    103e:	4c 1d       	adc	r20, r12
    1040:	5d 1d       	adc	r21, r13
    1042:	80 e0       	ldi	r24, 0x00	; 0
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	a0 e0       	ldi	r26, 0x00	; 0
    1048:	b0 e0       	ldi	r27, 0x00	; 0
    104a:	e6 14       	cp	r14, r6
    104c:	f7 04       	cpc	r15, r7
    104e:	08 05       	cpc	r16, r8
    1050:	19 05       	cpc	r17, r9
    1052:	20 f4       	brcc	.+8      	; 0x105c <__mulsf3+0xe8>
    1054:	81 e0       	ldi	r24, 0x01	; 1
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	a0 e0       	ldi	r26, 0x00	; 0
    105a:	b0 e0       	ldi	r27, 0x00	; 0
    105c:	ba 01       	movw	r22, r20
    105e:	a9 01       	movw	r20, r18
    1060:	48 0f       	add	r20, r24
    1062:	59 1f       	adc	r21, r25
    1064:	6a 1f       	adc	r22, r26
    1066:	7b 1f       	adc	r23, r27
    1068:	aa 0c       	add	r10, r10
    106a:	bb 1c       	adc	r11, r11
    106c:	cc 1c       	adc	r12, r12
    106e:	dd 1c       	adc	r13, r13
    1070:	97 fe       	sbrs	r9, 7
    1072:	08 c0       	rjmp	.+16     	; 0x1084 <__mulsf3+0x110>
    1074:	81 e0       	ldi	r24, 0x01	; 1
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	a0 e0       	ldi	r26, 0x00	; 0
    107a:	b0 e0       	ldi	r27, 0x00	; 0
    107c:	a8 2a       	or	r10, r24
    107e:	b9 2a       	or	r11, r25
    1080:	ca 2a       	or	r12, r26
    1082:	db 2a       	or	r13, r27
    1084:	31 96       	adiw	r30, 0x01	; 1
    1086:	e0 32       	cpi	r30, 0x20	; 32
    1088:	f1 05       	cpc	r31, r1
    108a:	49 f0       	breq	.+18     	; 0x109e <__mulsf3+0x12a>
    108c:	66 0c       	add	r6, r6
    108e:	77 1c       	adc	r7, r7
    1090:	88 1c       	adc	r8, r8
    1092:	99 1c       	adc	r9, r9
    1094:	56 94       	lsr	r5
    1096:	47 94       	ror	r4
    1098:	37 94       	ror	r3
    109a:	27 94       	ror	r2
    109c:	c3 cf       	rjmp	.-122    	; 0x1024 <__mulsf3+0xb0>
    109e:	fa 85       	ldd	r31, Y+10	; 0x0a
    10a0:	ea 89       	ldd	r30, Y+18	; 0x12
    10a2:	2b 89       	ldd	r18, Y+19	; 0x13
    10a4:	3c 89       	ldd	r19, Y+20	; 0x14
    10a6:	8b 85       	ldd	r24, Y+11	; 0x0b
    10a8:	9c 85       	ldd	r25, Y+12	; 0x0c
    10aa:	28 0f       	add	r18, r24
    10ac:	39 1f       	adc	r19, r25
    10ae:	2e 5f       	subi	r18, 0xFE	; 254
    10b0:	3f 4f       	sbci	r19, 0xFF	; 255
    10b2:	17 c0       	rjmp	.+46     	; 0x10e2 <__mulsf3+0x16e>
    10b4:	ca 01       	movw	r24, r20
    10b6:	81 70       	andi	r24, 0x01	; 1
    10b8:	90 70       	andi	r25, 0x00	; 0
    10ba:	89 2b       	or	r24, r25
    10bc:	61 f0       	breq	.+24     	; 0x10d6 <__mulsf3+0x162>
    10be:	16 95       	lsr	r17
    10c0:	07 95       	ror	r16
    10c2:	f7 94       	ror	r15
    10c4:	e7 94       	ror	r14
    10c6:	80 e0       	ldi	r24, 0x00	; 0
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	a0 e0       	ldi	r26, 0x00	; 0
    10cc:	b0 e8       	ldi	r27, 0x80	; 128
    10ce:	e8 2a       	or	r14, r24
    10d0:	f9 2a       	or	r15, r25
    10d2:	0a 2b       	or	r16, r26
    10d4:	1b 2b       	or	r17, r27
    10d6:	76 95       	lsr	r23
    10d8:	67 95       	ror	r22
    10da:	57 95       	ror	r21
    10dc:	47 95       	ror	r20
    10de:	2f 5f       	subi	r18, 0xFF	; 255
    10e0:	3f 4f       	sbci	r19, 0xFF	; 255
    10e2:	77 fd       	sbrc	r23, 7
    10e4:	e7 cf       	rjmp	.-50     	; 0x10b4 <__mulsf3+0x140>
    10e6:	0c c0       	rjmp	.+24     	; 0x1100 <__mulsf3+0x18c>
    10e8:	44 0f       	add	r20, r20
    10ea:	55 1f       	adc	r21, r21
    10ec:	66 1f       	adc	r22, r22
    10ee:	77 1f       	adc	r23, r23
    10f0:	17 fd       	sbrc	r17, 7
    10f2:	41 60       	ori	r20, 0x01	; 1
    10f4:	ee 0c       	add	r14, r14
    10f6:	ff 1c       	adc	r15, r15
    10f8:	00 1f       	adc	r16, r16
    10fa:	11 1f       	adc	r17, r17
    10fc:	21 50       	subi	r18, 0x01	; 1
    10fe:	30 40       	sbci	r19, 0x00	; 0
    1100:	40 30       	cpi	r20, 0x00	; 0
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	59 07       	cpc	r21, r25
    1106:	90 e0       	ldi	r25, 0x00	; 0
    1108:	69 07       	cpc	r22, r25
    110a:	90 e4       	ldi	r25, 0x40	; 64
    110c:	79 07       	cpc	r23, r25
    110e:	60 f3       	brcs	.-40     	; 0x10e8 <__mulsf3+0x174>
    1110:	2b 8f       	std	Y+27, r18	; 0x1b
    1112:	3c 8f       	std	Y+28, r19	; 0x1c
    1114:	db 01       	movw	r26, r22
    1116:	ca 01       	movw	r24, r20
    1118:	8f 77       	andi	r24, 0x7F	; 127
    111a:	90 70       	andi	r25, 0x00	; 0
    111c:	a0 70       	andi	r26, 0x00	; 0
    111e:	b0 70       	andi	r27, 0x00	; 0
    1120:	80 34       	cpi	r24, 0x40	; 64
    1122:	91 05       	cpc	r25, r1
    1124:	a1 05       	cpc	r26, r1
    1126:	b1 05       	cpc	r27, r1
    1128:	61 f4       	brne	.+24     	; 0x1142 <__mulsf3+0x1ce>
    112a:	47 fd       	sbrc	r20, 7
    112c:	0a c0       	rjmp	.+20     	; 0x1142 <__mulsf3+0x1ce>
    112e:	e1 14       	cp	r14, r1
    1130:	f1 04       	cpc	r15, r1
    1132:	01 05       	cpc	r16, r1
    1134:	11 05       	cpc	r17, r1
    1136:	29 f0       	breq	.+10     	; 0x1142 <__mulsf3+0x1ce>
    1138:	40 5c       	subi	r20, 0xC0	; 192
    113a:	5f 4f       	sbci	r21, 0xFF	; 255
    113c:	6f 4f       	sbci	r22, 0xFF	; 255
    113e:	7f 4f       	sbci	r23, 0xFF	; 255
    1140:	40 78       	andi	r20, 0x80	; 128
    1142:	1a 8e       	std	Y+26, r1	; 0x1a
    1144:	fe 17       	cp	r31, r30
    1146:	11 f0       	breq	.+4      	; 0x114c <__mulsf3+0x1d8>
    1148:	81 e0       	ldi	r24, 0x01	; 1
    114a:	8a 8f       	std	Y+26, r24	; 0x1a
    114c:	4d 8f       	std	Y+29, r20	; 0x1d
    114e:	5e 8f       	std	Y+30, r21	; 0x1e
    1150:	6f 8f       	std	Y+31, r22	; 0x1f
    1152:	78 a3       	std	Y+32, r23	; 0x20
    1154:	83 e0       	ldi	r24, 0x03	; 3
    1156:	89 8f       	std	Y+25, r24	; 0x19
    1158:	ce 01       	movw	r24, r28
    115a:	49 96       	adiw	r24, 0x19	; 25
    115c:	0e 94 98 09 	call	0x1330	; 0x1330 <__pack_f>
    1160:	a0 96       	adiw	r28, 0x20	; 32
    1162:	e2 e1       	ldi	r30, 0x12	; 18
    1164:	0c 94 81 0b 	jmp	0x1702	; 0x1702 <__epilogue_restores__>

00001168 <__gtsf2>:
    1168:	a8 e1       	ldi	r26, 0x18	; 24
    116a:	b0 e0       	ldi	r27, 0x00	; 0
    116c:	ea eb       	ldi	r30, 0xBA	; 186
    116e:	f8 e0       	ldi	r31, 0x08	; 8
    1170:	0c 94 71 0b 	jmp	0x16e2	; 0x16e2 <__prologue_saves__+0x18>
    1174:	69 83       	std	Y+1, r22	; 0x01
    1176:	7a 83       	std	Y+2, r23	; 0x02
    1178:	8b 83       	std	Y+3, r24	; 0x03
    117a:	9c 83       	std	Y+4, r25	; 0x04
    117c:	2d 83       	std	Y+5, r18	; 0x05
    117e:	3e 83       	std	Y+6, r19	; 0x06
    1180:	4f 83       	std	Y+7, r20	; 0x07
    1182:	58 87       	std	Y+8, r21	; 0x08
    1184:	89 e0       	ldi	r24, 0x09	; 9
    1186:	e8 2e       	mov	r14, r24
    1188:	f1 2c       	mov	r15, r1
    118a:	ec 0e       	add	r14, r28
    118c:	fd 1e       	adc	r15, r29
    118e:	ce 01       	movw	r24, r28
    1190:	01 96       	adiw	r24, 0x01	; 1
    1192:	b7 01       	movw	r22, r14
    1194:	0e 94 6d 0a 	call	0x14da	; 0x14da <__unpack_f>
    1198:	8e 01       	movw	r16, r28
    119a:	0f 5e       	subi	r16, 0xEF	; 239
    119c:	1f 4f       	sbci	r17, 0xFF	; 255
    119e:	ce 01       	movw	r24, r28
    11a0:	05 96       	adiw	r24, 0x05	; 5
    11a2:	b8 01       	movw	r22, r16
    11a4:	0e 94 6d 0a 	call	0x14da	; 0x14da <__unpack_f>
    11a8:	89 85       	ldd	r24, Y+9	; 0x09
    11aa:	82 30       	cpi	r24, 0x02	; 2
    11ac:	40 f0       	brcs	.+16     	; 0x11be <__gtsf2+0x56>
    11ae:	89 89       	ldd	r24, Y+17	; 0x11
    11b0:	82 30       	cpi	r24, 0x02	; 2
    11b2:	28 f0       	brcs	.+10     	; 0x11be <__gtsf2+0x56>
    11b4:	c7 01       	movw	r24, r14
    11b6:	b8 01       	movw	r22, r16
    11b8:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__fpcmp_parts_f>
    11bc:	01 c0       	rjmp	.+2      	; 0x11c0 <__gtsf2+0x58>
    11be:	8f ef       	ldi	r24, 0xFF	; 255
    11c0:	68 96       	adiw	r28, 0x18	; 24
    11c2:	e6 e0       	ldi	r30, 0x06	; 6
    11c4:	0c 94 8d 0b 	jmp	0x171a	; 0x171a <__epilogue_restores__+0x18>

000011c8 <__gesf2>:
    11c8:	a8 e1       	ldi	r26, 0x18	; 24
    11ca:	b0 e0       	ldi	r27, 0x00	; 0
    11cc:	ea ee       	ldi	r30, 0xEA	; 234
    11ce:	f8 e0       	ldi	r31, 0x08	; 8
    11d0:	0c 94 71 0b 	jmp	0x16e2	; 0x16e2 <__prologue_saves__+0x18>
    11d4:	69 83       	std	Y+1, r22	; 0x01
    11d6:	7a 83       	std	Y+2, r23	; 0x02
    11d8:	8b 83       	std	Y+3, r24	; 0x03
    11da:	9c 83       	std	Y+4, r25	; 0x04
    11dc:	2d 83       	std	Y+5, r18	; 0x05
    11de:	3e 83       	std	Y+6, r19	; 0x06
    11e0:	4f 83       	std	Y+7, r20	; 0x07
    11e2:	58 87       	std	Y+8, r21	; 0x08
    11e4:	89 e0       	ldi	r24, 0x09	; 9
    11e6:	e8 2e       	mov	r14, r24
    11e8:	f1 2c       	mov	r15, r1
    11ea:	ec 0e       	add	r14, r28
    11ec:	fd 1e       	adc	r15, r29
    11ee:	ce 01       	movw	r24, r28
    11f0:	01 96       	adiw	r24, 0x01	; 1
    11f2:	b7 01       	movw	r22, r14
    11f4:	0e 94 6d 0a 	call	0x14da	; 0x14da <__unpack_f>
    11f8:	8e 01       	movw	r16, r28
    11fa:	0f 5e       	subi	r16, 0xEF	; 239
    11fc:	1f 4f       	sbci	r17, 0xFF	; 255
    11fe:	ce 01       	movw	r24, r28
    1200:	05 96       	adiw	r24, 0x05	; 5
    1202:	b8 01       	movw	r22, r16
    1204:	0e 94 6d 0a 	call	0x14da	; 0x14da <__unpack_f>
    1208:	89 85       	ldd	r24, Y+9	; 0x09
    120a:	82 30       	cpi	r24, 0x02	; 2
    120c:	40 f0       	brcs	.+16     	; 0x121e <__gesf2+0x56>
    120e:	89 89       	ldd	r24, Y+17	; 0x11
    1210:	82 30       	cpi	r24, 0x02	; 2
    1212:	28 f0       	brcs	.+10     	; 0x121e <__gesf2+0x56>
    1214:	c7 01       	movw	r24, r14
    1216:	b8 01       	movw	r22, r16
    1218:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__fpcmp_parts_f>
    121c:	01 c0       	rjmp	.+2      	; 0x1220 <__gesf2+0x58>
    121e:	8f ef       	ldi	r24, 0xFF	; 255
    1220:	68 96       	adiw	r28, 0x18	; 24
    1222:	e6 e0       	ldi	r30, 0x06	; 6
    1224:	0c 94 8d 0b 	jmp	0x171a	; 0x171a <__epilogue_restores__+0x18>

00001228 <__ltsf2>:
    1228:	a8 e1       	ldi	r26, 0x18	; 24
    122a:	b0 e0       	ldi	r27, 0x00	; 0
    122c:	ea e1       	ldi	r30, 0x1A	; 26
    122e:	f9 e0       	ldi	r31, 0x09	; 9
    1230:	0c 94 71 0b 	jmp	0x16e2	; 0x16e2 <__prologue_saves__+0x18>
    1234:	69 83       	std	Y+1, r22	; 0x01
    1236:	7a 83       	std	Y+2, r23	; 0x02
    1238:	8b 83       	std	Y+3, r24	; 0x03
    123a:	9c 83       	std	Y+4, r25	; 0x04
    123c:	2d 83       	std	Y+5, r18	; 0x05
    123e:	3e 83       	std	Y+6, r19	; 0x06
    1240:	4f 83       	std	Y+7, r20	; 0x07
    1242:	58 87       	std	Y+8, r21	; 0x08
    1244:	89 e0       	ldi	r24, 0x09	; 9
    1246:	e8 2e       	mov	r14, r24
    1248:	f1 2c       	mov	r15, r1
    124a:	ec 0e       	add	r14, r28
    124c:	fd 1e       	adc	r15, r29
    124e:	ce 01       	movw	r24, r28
    1250:	01 96       	adiw	r24, 0x01	; 1
    1252:	b7 01       	movw	r22, r14
    1254:	0e 94 6d 0a 	call	0x14da	; 0x14da <__unpack_f>
    1258:	8e 01       	movw	r16, r28
    125a:	0f 5e       	subi	r16, 0xEF	; 239
    125c:	1f 4f       	sbci	r17, 0xFF	; 255
    125e:	ce 01       	movw	r24, r28
    1260:	05 96       	adiw	r24, 0x05	; 5
    1262:	b8 01       	movw	r22, r16
    1264:	0e 94 6d 0a 	call	0x14da	; 0x14da <__unpack_f>
    1268:	89 85       	ldd	r24, Y+9	; 0x09
    126a:	82 30       	cpi	r24, 0x02	; 2
    126c:	40 f0       	brcs	.+16     	; 0x127e <__ltsf2+0x56>
    126e:	89 89       	ldd	r24, Y+17	; 0x11
    1270:	82 30       	cpi	r24, 0x02	; 2
    1272:	28 f0       	brcs	.+10     	; 0x127e <__ltsf2+0x56>
    1274:	c7 01       	movw	r24, r14
    1276:	b8 01       	movw	r22, r16
    1278:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__fpcmp_parts_f>
    127c:	01 c0       	rjmp	.+2      	; 0x1280 <__ltsf2+0x58>
    127e:	81 e0       	ldi	r24, 0x01	; 1
    1280:	68 96       	adiw	r28, 0x18	; 24
    1282:	e6 e0       	ldi	r30, 0x06	; 6
    1284:	0c 94 8d 0b 	jmp	0x171a	; 0x171a <__epilogue_restores__+0x18>

00001288 <__fixsfsi>:
    1288:	ac e0       	ldi	r26, 0x0C	; 12
    128a:	b0 e0       	ldi	r27, 0x00	; 0
    128c:	ea e4       	ldi	r30, 0x4A	; 74
    128e:	f9 e0       	ldi	r31, 0x09	; 9
    1290:	0c 94 75 0b 	jmp	0x16ea	; 0x16ea <__prologue_saves__+0x20>
    1294:	69 83       	std	Y+1, r22	; 0x01
    1296:	7a 83       	std	Y+2, r23	; 0x02
    1298:	8b 83       	std	Y+3, r24	; 0x03
    129a:	9c 83       	std	Y+4, r25	; 0x04
    129c:	ce 01       	movw	r24, r28
    129e:	01 96       	adiw	r24, 0x01	; 1
    12a0:	be 01       	movw	r22, r28
    12a2:	6b 5f       	subi	r22, 0xFB	; 251
    12a4:	7f 4f       	sbci	r23, 0xFF	; 255
    12a6:	0e 94 6d 0a 	call	0x14da	; 0x14da <__unpack_f>
    12aa:	8d 81       	ldd	r24, Y+5	; 0x05
    12ac:	82 30       	cpi	r24, 0x02	; 2
    12ae:	61 f1       	breq	.+88     	; 0x1308 <__fixsfsi+0x80>
    12b0:	82 30       	cpi	r24, 0x02	; 2
    12b2:	50 f1       	brcs	.+84     	; 0x1308 <__fixsfsi+0x80>
    12b4:	84 30       	cpi	r24, 0x04	; 4
    12b6:	21 f4       	brne	.+8      	; 0x12c0 <__fixsfsi+0x38>
    12b8:	8e 81       	ldd	r24, Y+6	; 0x06
    12ba:	88 23       	and	r24, r24
    12bc:	51 f1       	breq	.+84     	; 0x1312 <__fixsfsi+0x8a>
    12be:	2e c0       	rjmp	.+92     	; 0x131c <__fixsfsi+0x94>
    12c0:	2f 81       	ldd	r18, Y+7	; 0x07
    12c2:	38 85       	ldd	r19, Y+8	; 0x08
    12c4:	37 fd       	sbrc	r19, 7
    12c6:	20 c0       	rjmp	.+64     	; 0x1308 <__fixsfsi+0x80>
    12c8:	6e 81       	ldd	r22, Y+6	; 0x06
    12ca:	2f 31       	cpi	r18, 0x1F	; 31
    12cc:	31 05       	cpc	r19, r1
    12ce:	1c f0       	brlt	.+6      	; 0x12d6 <__fixsfsi+0x4e>
    12d0:	66 23       	and	r22, r22
    12d2:	f9 f0       	breq	.+62     	; 0x1312 <__fixsfsi+0x8a>
    12d4:	23 c0       	rjmp	.+70     	; 0x131c <__fixsfsi+0x94>
    12d6:	8e e1       	ldi	r24, 0x1E	; 30
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	82 1b       	sub	r24, r18
    12dc:	93 0b       	sbc	r25, r19
    12de:	29 85       	ldd	r18, Y+9	; 0x09
    12e0:	3a 85       	ldd	r19, Y+10	; 0x0a
    12e2:	4b 85       	ldd	r20, Y+11	; 0x0b
    12e4:	5c 85       	ldd	r21, Y+12	; 0x0c
    12e6:	04 c0       	rjmp	.+8      	; 0x12f0 <__fixsfsi+0x68>
    12e8:	56 95       	lsr	r21
    12ea:	47 95       	ror	r20
    12ec:	37 95       	ror	r19
    12ee:	27 95       	ror	r18
    12f0:	8a 95       	dec	r24
    12f2:	d2 f7       	brpl	.-12     	; 0x12e8 <__fixsfsi+0x60>
    12f4:	66 23       	and	r22, r22
    12f6:	b1 f0       	breq	.+44     	; 0x1324 <__fixsfsi+0x9c>
    12f8:	50 95       	com	r21
    12fa:	40 95       	com	r20
    12fc:	30 95       	com	r19
    12fe:	21 95       	neg	r18
    1300:	3f 4f       	sbci	r19, 0xFF	; 255
    1302:	4f 4f       	sbci	r20, 0xFF	; 255
    1304:	5f 4f       	sbci	r21, 0xFF	; 255
    1306:	0e c0       	rjmp	.+28     	; 0x1324 <__fixsfsi+0x9c>
    1308:	20 e0       	ldi	r18, 0x00	; 0
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	40 e0       	ldi	r20, 0x00	; 0
    130e:	50 e0       	ldi	r21, 0x00	; 0
    1310:	09 c0       	rjmp	.+18     	; 0x1324 <__fixsfsi+0x9c>
    1312:	2f ef       	ldi	r18, 0xFF	; 255
    1314:	3f ef       	ldi	r19, 0xFF	; 255
    1316:	4f ef       	ldi	r20, 0xFF	; 255
    1318:	5f e7       	ldi	r21, 0x7F	; 127
    131a:	04 c0       	rjmp	.+8      	; 0x1324 <__fixsfsi+0x9c>
    131c:	20 e0       	ldi	r18, 0x00	; 0
    131e:	30 e0       	ldi	r19, 0x00	; 0
    1320:	40 e0       	ldi	r20, 0x00	; 0
    1322:	50 e8       	ldi	r21, 0x80	; 128
    1324:	b9 01       	movw	r22, r18
    1326:	ca 01       	movw	r24, r20
    1328:	2c 96       	adiw	r28, 0x0c	; 12
    132a:	e2 e0       	ldi	r30, 0x02	; 2
    132c:	0c 94 91 0b 	jmp	0x1722	; 0x1722 <__epilogue_restores__+0x20>

00001330 <__pack_f>:
    1330:	df 92       	push	r13
    1332:	ef 92       	push	r14
    1334:	ff 92       	push	r15
    1336:	0f 93       	push	r16
    1338:	1f 93       	push	r17
    133a:	fc 01       	movw	r30, r24
    133c:	e4 80       	ldd	r14, Z+4	; 0x04
    133e:	f5 80       	ldd	r15, Z+5	; 0x05
    1340:	06 81       	ldd	r16, Z+6	; 0x06
    1342:	17 81       	ldd	r17, Z+7	; 0x07
    1344:	d1 80       	ldd	r13, Z+1	; 0x01
    1346:	80 81       	ld	r24, Z
    1348:	82 30       	cpi	r24, 0x02	; 2
    134a:	48 f4       	brcc	.+18     	; 0x135e <__pack_f+0x2e>
    134c:	80 e0       	ldi	r24, 0x00	; 0
    134e:	90 e0       	ldi	r25, 0x00	; 0
    1350:	a0 e1       	ldi	r26, 0x10	; 16
    1352:	b0 e0       	ldi	r27, 0x00	; 0
    1354:	e8 2a       	or	r14, r24
    1356:	f9 2a       	or	r15, r25
    1358:	0a 2b       	or	r16, r26
    135a:	1b 2b       	or	r17, r27
    135c:	a5 c0       	rjmp	.+330    	; 0x14a8 <__pack_f+0x178>
    135e:	84 30       	cpi	r24, 0x04	; 4
    1360:	09 f4       	brne	.+2      	; 0x1364 <__pack_f+0x34>
    1362:	9f c0       	rjmp	.+318    	; 0x14a2 <__pack_f+0x172>
    1364:	82 30       	cpi	r24, 0x02	; 2
    1366:	21 f4       	brne	.+8      	; 0x1370 <__pack_f+0x40>
    1368:	ee 24       	eor	r14, r14
    136a:	ff 24       	eor	r15, r15
    136c:	87 01       	movw	r16, r14
    136e:	05 c0       	rjmp	.+10     	; 0x137a <__pack_f+0x4a>
    1370:	e1 14       	cp	r14, r1
    1372:	f1 04       	cpc	r15, r1
    1374:	01 05       	cpc	r16, r1
    1376:	11 05       	cpc	r17, r1
    1378:	19 f4       	brne	.+6      	; 0x1380 <__pack_f+0x50>
    137a:	e0 e0       	ldi	r30, 0x00	; 0
    137c:	f0 e0       	ldi	r31, 0x00	; 0
    137e:	96 c0       	rjmp	.+300    	; 0x14ac <__pack_f+0x17c>
    1380:	62 81       	ldd	r22, Z+2	; 0x02
    1382:	73 81       	ldd	r23, Z+3	; 0x03
    1384:	9f ef       	ldi	r25, 0xFF	; 255
    1386:	62 38       	cpi	r22, 0x82	; 130
    1388:	79 07       	cpc	r23, r25
    138a:	0c f0       	brlt	.+2      	; 0x138e <__pack_f+0x5e>
    138c:	5b c0       	rjmp	.+182    	; 0x1444 <__pack_f+0x114>
    138e:	22 e8       	ldi	r18, 0x82	; 130
    1390:	3f ef       	ldi	r19, 0xFF	; 255
    1392:	26 1b       	sub	r18, r22
    1394:	37 0b       	sbc	r19, r23
    1396:	2a 31       	cpi	r18, 0x1A	; 26
    1398:	31 05       	cpc	r19, r1
    139a:	2c f0       	brlt	.+10     	; 0x13a6 <__pack_f+0x76>
    139c:	20 e0       	ldi	r18, 0x00	; 0
    139e:	30 e0       	ldi	r19, 0x00	; 0
    13a0:	40 e0       	ldi	r20, 0x00	; 0
    13a2:	50 e0       	ldi	r21, 0x00	; 0
    13a4:	2a c0       	rjmp	.+84     	; 0x13fa <__pack_f+0xca>
    13a6:	b8 01       	movw	r22, r16
    13a8:	a7 01       	movw	r20, r14
    13aa:	02 2e       	mov	r0, r18
    13ac:	04 c0       	rjmp	.+8      	; 0x13b6 <__pack_f+0x86>
    13ae:	76 95       	lsr	r23
    13b0:	67 95       	ror	r22
    13b2:	57 95       	ror	r21
    13b4:	47 95       	ror	r20
    13b6:	0a 94       	dec	r0
    13b8:	d2 f7       	brpl	.-12     	; 0x13ae <__pack_f+0x7e>
    13ba:	81 e0       	ldi	r24, 0x01	; 1
    13bc:	90 e0       	ldi	r25, 0x00	; 0
    13be:	a0 e0       	ldi	r26, 0x00	; 0
    13c0:	b0 e0       	ldi	r27, 0x00	; 0
    13c2:	04 c0       	rjmp	.+8      	; 0x13cc <__pack_f+0x9c>
    13c4:	88 0f       	add	r24, r24
    13c6:	99 1f       	adc	r25, r25
    13c8:	aa 1f       	adc	r26, r26
    13ca:	bb 1f       	adc	r27, r27
    13cc:	2a 95       	dec	r18
    13ce:	d2 f7       	brpl	.-12     	; 0x13c4 <__pack_f+0x94>
    13d0:	01 97       	sbiw	r24, 0x01	; 1
    13d2:	a1 09       	sbc	r26, r1
    13d4:	b1 09       	sbc	r27, r1
    13d6:	8e 21       	and	r24, r14
    13d8:	9f 21       	and	r25, r15
    13da:	a0 23       	and	r26, r16
    13dc:	b1 23       	and	r27, r17
    13de:	00 97       	sbiw	r24, 0x00	; 0
    13e0:	a1 05       	cpc	r26, r1
    13e2:	b1 05       	cpc	r27, r1
    13e4:	21 f0       	breq	.+8      	; 0x13ee <__pack_f+0xbe>
    13e6:	81 e0       	ldi	r24, 0x01	; 1
    13e8:	90 e0       	ldi	r25, 0x00	; 0
    13ea:	a0 e0       	ldi	r26, 0x00	; 0
    13ec:	b0 e0       	ldi	r27, 0x00	; 0
    13ee:	9a 01       	movw	r18, r20
    13f0:	ab 01       	movw	r20, r22
    13f2:	28 2b       	or	r18, r24
    13f4:	39 2b       	or	r19, r25
    13f6:	4a 2b       	or	r20, r26
    13f8:	5b 2b       	or	r21, r27
    13fa:	da 01       	movw	r26, r20
    13fc:	c9 01       	movw	r24, r18
    13fe:	8f 77       	andi	r24, 0x7F	; 127
    1400:	90 70       	andi	r25, 0x00	; 0
    1402:	a0 70       	andi	r26, 0x00	; 0
    1404:	b0 70       	andi	r27, 0x00	; 0
    1406:	80 34       	cpi	r24, 0x40	; 64
    1408:	91 05       	cpc	r25, r1
    140a:	a1 05       	cpc	r26, r1
    140c:	b1 05       	cpc	r27, r1
    140e:	39 f4       	brne	.+14     	; 0x141e <__pack_f+0xee>
    1410:	27 ff       	sbrs	r18, 7
    1412:	09 c0       	rjmp	.+18     	; 0x1426 <__pack_f+0xf6>
    1414:	20 5c       	subi	r18, 0xC0	; 192
    1416:	3f 4f       	sbci	r19, 0xFF	; 255
    1418:	4f 4f       	sbci	r20, 0xFF	; 255
    141a:	5f 4f       	sbci	r21, 0xFF	; 255
    141c:	04 c0       	rjmp	.+8      	; 0x1426 <__pack_f+0xf6>
    141e:	21 5c       	subi	r18, 0xC1	; 193
    1420:	3f 4f       	sbci	r19, 0xFF	; 255
    1422:	4f 4f       	sbci	r20, 0xFF	; 255
    1424:	5f 4f       	sbci	r21, 0xFF	; 255
    1426:	e0 e0       	ldi	r30, 0x00	; 0
    1428:	f0 e0       	ldi	r31, 0x00	; 0
    142a:	20 30       	cpi	r18, 0x00	; 0
    142c:	a0 e0       	ldi	r26, 0x00	; 0
    142e:	3a 07       	cpc	r19, r26
    1430:	a0 e0       	ldi	r26, 0x00	; 0
    1432:	4a 07       	cpc	r20, r26
    1434:	a0 e4       	ldi	r26, 0x40	; 64
    1436:	5a 07       	cpc	r21, r26
    1438:	10 f0       	brcs	.+4      	; 0x143e <__pack_f+0x10e>
    143a:	e1 e0       	ldi	r30, 0x01	; 1
    143c:	f0 e0       	ldi	r31, 0x00	; 0
    143e:	79 01       	movw	r14, r18
    1440:	8a 01       	movw	r16, r20
    1442:	27 c0       	rjmp	.+78     	; 0x1492 <__pack_f+0x162>
    1444:	60 38       	cpi	r22, 0x80	; 128
    1446:	71 05       	cpc	r23, r1
    1448:	64 f5       	brge	.+88     	; 0x14a2 <__pack_f+0x172>
    144a:	fb 01       	movw	r30, r22
    144c:	e1 58       	subi	r30, 0x81	; 129
    144e:	ff 4f       	sbci	r31, 0xFF	; 255
    1450:	d8 01       	movw	r26, r16
    1452:	c7 01       	movw	r24, r14
    1454:	8f 77       	andi	r24, 0x7F	; 127
    1456:	90 70       	andi	r25, 0x00	; 0
    1458:	a0 70       	andi	r26, 0x00	; 0
    145a:	b0 70       	andi	r27, 0x00	; 0
    145c:	80 34       	cpi	r24, 0x40	; 64
    145e:	91 05       	cpc	r25, r1
    1460:	a1 05       	cpc	r26, r1
    1462:	b1 05       	cpc	r27, r1
    1464:	39 f4       	brne	.+14     	; 0x1474 <__pack_f+0x144>
    1466:	e7 fe       	sbrs	r14, 7
    1468:	0d c0       	rjmp	.+26     	; 0x1484 <__pack_f+0x154>
    146a:	80 e4       	ldi	r24, 0x40	; 64
    146c:	90 e0       	ldi	r25, 0x00	; 0
    146e:	a0 e0       	ldi	r26, 0x00	; 0
    1470:	b0 e0       	ldi	r27, 0x00	; 0
    1472:	04 c0       	rjmp	.+8      	; 0x147c <__pack_f+0x14c>
    1474:	8f e3       	ldi	r24, 0x3F	; 63
    1476:	90 e0       	ldi	r25, 0x00	; 0
    1478:	a0 e0       	ldi	r26, 0x00	; 0
    147a:	b0 e0       	ldi	r27, 0x00	; 0
    147c:	e8 0e       	add	r14, r24
    147e:	f9 1e       	adc	r15, r25
    1480:	0a 1f       	adc	r16, r26
    1482:	1b 1f       	adc	r17, r27
    1484:	17 ff       	sbrs	r17, 7
    1486:	05 c0       	rjmp	.+10     	; 0x1492 <__pack_f+0x162>
    1488:	16 95       	lsr	r17
    148a:	07 95       	ror	r16
    148c:	f7 94       	ror	r15
    148e:	e7 94       	ror	r14
    1490:	31 96       	adiw	r30, 0x01	; 1
    1492:	87 e0       	ldi	r24, 0x07	; 7
    1494:	16 95       	lsr	r17
    1496:	07 95       	ror	r16
    1498:	f7 94       	ror	r15
    149a:	e7 94       	ror	r14
    149c:	8a 95       	dec	r24
    149e:	d1 f7       	brne	.-12     	; 0x1494 <__pack_f+0x164>
    14a0:	05 c0       	rjmp	.+10     	; 0x14ac <__pack_f+0x17c>
    14a2:	ee 24       	eor	r14, r14
    14a4:	ff 24       	eor	r15, r15
    14a6:	87 01       	movw	r16, r14
    14a8:	ef ef       	ldi	r30, 0xFF	; 255
    14aa:	f0 e0       	ldi	r31, 0x00	; 0
    14ac:	6e 2f       	mov	r22, r30
    14ae:	67 95       	ror	r22
    14b0:	66 27       	eor	r22, r22
    14b2:	67 95       	ror	r22
    14b4:	90 2f       	mov	r25, r16
    14b6:	9f 77       	andi	r25, 0x7F	; 127
    14b8:	d7 94       	ror	r13
    14ba:	dd 24       	eor	r13, r13
    14bc:	d7 94       	ror	r13
    14be:	8e 2f       	mov	r24, r30
    14c0:	86 95       	lsr	r24
    14c2:	49 2f       	mov	r20, r25
    14c4:	46 2b       	or	r20, r22
    14c6:	58 2f       	mov	r21, r24
    14c8:	5d 29       	or	r21, r13
    14ca:	b7 01       	movw	r22, r14
    14cc:	ca 01       	movw	r24, r20
    14ce:	1f 91       	pop	r17
    14d0:	0f 91       	pop	r16
    14d2:	ff 90       	pop	r15
    14d4:	ef 90       	pop	r14
    14d6:	df 90       	pop	r13
    14d8:	08 95       	ret

000014da <__unpack_f>:
    14da:	fc 01       	movw	r30, r24
    14dc:	db 01       	movw	r26, r22
    14de:	40 81       	ld	r20, Z
    14e0:	51 81       	ldd	r21, Z+1	; 0x01
    14e2:	22 81       	ldd	r18, Z+2	; 0x02
    14e4:	62 2f       	mov	r22, r18
    14e6:	6f 77       	andi	r22, 0x7F	; 127
    14e8:	70 e0       	ldi	r23, 0x00	; 0
    14ea:	22 1f       	adc	r18, r18
    14ec:	22 27       	eor	r18, r18
    14ee:	22 1f       	adc	r18, r18
    14f0:	93 81       	ldd	r25, Z+3	; 0x03
    14f2:	89 2f       	mov	r24, r25
    14f4:	88 0f       	add	r24, r24
    14f6:	82 2b       	or	r24, r18
    14f8:	28 2f       	mov	r18, r24
    14fa:	30 e0       	ldi	r19, 0x00	; 0
    14fc:	99 1f       	adc	r25, r25
    14fe:	99 27       	eor	r25, r25
    1500:	99 1f       	adc	r25, r25
    1502:	11 96       	adiw	r26, 0x01	; 1
    1504:	9c 93       	st	X, r25
    1506:	11 97       	sbiw	r26, 0x01	; 1
    1508:	21 15       	cp	r18, r1
    150a:	31 05       	cpc	r19, r1
    150c:	a9 f5       	brne	.+106    	; 0x1578 <__unpack_f+0x9e>
    150e:	41 15       	cp	r20, r1
    1510:	51 05       	cpc	r21, r1
    1512:	61 05       	cpc	r22, r1
    1514:	71 05       	cpc	r23, r1
    1516:	11 f4       	brne	.+4      	; 0x151c <__unpack_f+0x42>
    1518:	82 e0       	ldi	r24, 0x02	; 2
    151a:	37 c0       	rjmp	.+110    	; 0x158a <__unpack_f+0xb0>
    151c:	82 e8       	ldi	r24, 0x82	; 130
    151e:	9f ef       	ldi	r25, 0xFF	; 255
    1520:	13 96       	adiw	r26, 0x03	; 3
    1522:	9c 93       	st	X, r25
    1524:	8e 93       	st	-X, r24
    1526:	12 97       	sbiw	r26, 0x02	; 2
    1528:	9a 01       	movw	r18, r20
    152a:	ab 01       	movw	r20, r22
    152c:	67 e0       	ldi	r22, 0x07	; 7
    152e:	22 0f       	add	r18, r18
    1530:	33 1f       	adc	r19, r19
    1532:	44 1f       	adc	r20, r20
    1534:	55 1f       	adc	r21, r21
    1536:	6a 95       	dec	r22
    1538:	d1 f7       	brne	.-12     	; 0x152e <__unpack_f+0x54>
    153a:	83 e0       	ldi	r24, 0x03	; 3
    153c:	8c 93       	st	X, r24
    153e:	0d c0       	rjmp	.+26     	; 0x155a <__unpack_f+0x80>
    1540:	22 0f       	add	r18, r18
    1542:	33 1f       	adc	r19, r19
    1544:	44 1f       	adc	r20, r20
    1546:	55 1f       	adc	r21, r21
    1548:	12 96       	adiw	r26, 0x02	; 2
    154a:	8d 91       	ld	r24, X+
    154c:	9c 91       	ld	r25, X
    154e:	13 97       	sbiw	r26, 0x03	; 3
    1550:	01 97       	sbiw	r24, 0x01	; 1
    1552:	13 96       	adiw	r26, 0x03	; 3
    1554:	9c 93       	st	X, r25
    1556:	8e 93       	st	-X, r24
    1558:	12 97       	sbiw	r26, 0x02	; 2
    155a:	20 30       	cpi	r18, 0x00	; 0
    155c:	80 e0       	ldi	r24, 0x00	; 0
    155e:	38 07       	cpc	r19, r24
    1560:	80 e0       	ldi	r24, 0x00	; 0
    1562:	48 07       	cpc	r20, r24
    1564:	80 e4       	ldi	r24, 0x40	; 64
    1566:	58 07       	cpc	r21, r24
    1568:	58 f3       	brcs	.-42     	; 0x1540 <__unpack_f+0x66>
    156a:	14 96       	adiw	r26, 0x04	; 4
    156c:	2d 93       	st	X+, r18
    156e:	3d 93       	st	X+, r19
    1570:	4d 93       	st	X+, r20
    1572:	5c 93       	st	X, r21
    1574:	17 97       	sbiw	r26, 0x07	; 7
    1576:	08 95       	ret
    1578:	2f 3f       	cpi	r18, 0xFF	; 255
    157a:	31 05       	cpc	r19, r1
    157c:	79 f4       	brne	.+30     	; 0x159c <__unpack_f+0xc2>
    157e:	41 15       	cp	r20, r1
    1580:	51 05       	cpc	r21, r1
    1582:	61 05       	cpc	r22, r1
    1584:	71 05       	cpc	r23, r1
    1586:	19 f4       	brne	.+6      	; 0x158e <__unpack_f+0xb4>
    1588:	84 e0       	ldi	r24, 0x04	; 4
    158a:	8c 93       	st	X, r24
    158c:	08 95       	ret
    158e:	64 ff       	sbrs	r22, 4
    1590:	03 c0       	rjmp	.+6      	; 0x1598 <__unpack_f+0xbe>
    1592:	81 e0       	ldi	r24, 0x01	; 1
    1594:	8c 93       	st	X, r24
    1596:	12 c0       	rjmp	.+36     	; 0x15bc <__unpack_f+0xe2>
    1598:	1c 92       	st	X, r1
    159a:	10 c0       	rjmp	.+32     	; 0x15bc <__unpack_f+0xe2>
    159c:	2f 57       	subi	r18, 0x7F	; 127
    159e:	30 40       	sbci	r19, 0x00	; 0
    15a0:	13 96       	adiw	r26, 0x03	; 3
    15a2:	3c 93       	st	X, r19
    15a4:	2e 93       	st	-X, r18
    15a6:	12 97       	sbiw	r26, 0x02	; 2
    15a8:	83 e0       	ldi	r24, 0x03	; 3
    15aa:	8c 93       	st	X, r24
    15ac:	87 e0       	ldi	r24, 0x07	; 7
    15ae:	44 0f       	add	r20, r20
    15b0:	55 1f       	adc	r21, r21
    15b2:	66 1f       	adc	r22, r22
    15b4:	77 1f       	adc	r23, r23
    15b6:	8a 95       	dec	r24
    15b8:	d1 f7       	brne	.-12     	; 0x15ae <__unpack_f+0xd4>
    15ba:	70 64       	ori	r23, 0x40	; 64
    15bc:	14 96       	adiw	r26, 0x04	; 4
    15be:	4d 93       	st	X+, r20
    15c0:	5d 93       	st	X+, r21
    15c2:	6d 93       	st	X+, r22
    15c4:	7c 93       	st	X, r23
    15c6:	17 97       	sbiw	r26, 0x07	; 7
    15c8:	08 95       	ret

000015ca <__fpcmp_parts_f>:
    15ca:	1f 93       	push	r17
    15cc:	dc 01       	movw	r26, r24
    15ce:	fb 01       	movw	r30, r22
    15d0:	9c 91       	ld	r25, X
    15d2:	92 30       	cpi	r25, 0x02	; 2
    15d4:	08 f4       	brcc	.+2      	; 0x15d8 <__fpcmp_parts_f+0xe>
    15d6:	47 c0       	rjmp	.+142    	; 0x1666 <__fpcmp_parts_f+0x9c>
    15d8:	80 81       	ld	r24, Z
    15da:	82 30       	cpi	r24, 0x02	; 2
    15dc:	08 f4       	brcc	.+2      	; 0x15e0 <__fpcmp_parts_f+0x16>
    15de:	43 c0       	rjmp	.+134    	; 0x1666 <__fpcmp_parts_f+0x9c>
    15e0:	94 30       	cpi	r25, 0x04	; 4
    15e2:	51 f4       	brne	.+20     	; 0x15f8 <__fpcmp_parts_f+0x2e>
    15e4:	11 96       	adiw	r26, 0x01	; 1
    15e6:	1c 91       	ld	r17, X
    15e8:	84 30       	cpi	r24, 0x04	; 4
    15ea:	99 f5       	brne	.+102    	; 0x1652 <__fpcmp_parts_f+0x88>
    15ec:	81 81       	ldd	r24, Z+1	; 0x01
    15ee:	68 2f       	mov	r22, r24
    15f0:	70 e0       	ldi	r23, 0x00	; 0
    15f2:	61 1b       	sub	r22, r17
    15f4:	71 09       	sbc	r23, r1
    15f6:	3f c0       	rjmp	.+126    	; 0x1676 <__fpcmp_parts_f+0xac>
    15f8:	84 30       	cpi	r24, 0x04	; 4
    15fa:	21 f0       	breq	.+8      	; 0x1604 <__fpcmp_parts_f+0x3a>
    15fc:	92 30       	cpi	r25, 0x02	; 2
    15fe:	31 f4       	brne	.+12     	; 0x160c <__fpcmp_parts_f+0x42>
    1600:	82 30       	cpi	r24, 0x02	; 2
    1602:	b9 f1       	breq	.+110    	; 0x1672 <__fpcmp_parts_f+0xa8>
    1604:	81 81       	ldd	r24, Z+1	; 0x01
    1606:	88 23       	and	r24, r24
    1608:	89 f1       	breq	.+98     	; 0x166c <__fpcmp_parts_f+0xa2>
    160a:	2d c0       	rjmp	.+90     	; 0x1666 <__fpcmp_parts_f+0x9c>
    160c:	11 96       	adiw	r26, 0x01	; 1
    160e:	1c 91       	ld	r17, X
    1610:	11 97       	sbiw	r26, 0x01	; 1
    1612:	82 30       	cpi	r24, 0x02	; 2
    1614:	f1 f0       	breq	.+60     	; 0x1652 <__fpcmp_parts_f+0x88>
    1616:	81 81       	ldd	r24, Z+1	; 0x01
    1618:	18 17       	cp	r17, r24
    161a:	d9 f4       	brne	.+54     	; 0x1652 <__fpcmp_parts_f+0x88>
    161c:	12 96       	adiw	r26, 0x02	; 2
    161e:	2d 91       	ld	r18, X+
    1620:	3c 91       	ld	r19, X
    1622:	13 97       	sbiw	r26, 0x03	; 3
    1624:	82 81       	ldd	r24, Z+2	; 0x02
    1626:	93 81       	ldd	r25, Z+3	; 0x03
    1628:	82 17       	cp	r24, r18
    162a:	93 07       	cpc	r25, r19
    162c:	94 f0       	brlt	.+36     	; 0x1652 <__fpcmp_parts_f+0x88>
    162e:	28 17       	cp	r18, r24
    1630:	39 07       	cpc	r19, r25
    1632:	bc f0       	brlt	.+46     	; 0x1662 <__fpcmp_parts_f+0x98>
    1634:	14 96       	adiw	r26, 0x04	; 4
    1636:	8d 91       	ld	r24, X+
    1638:	9d 91       	ld	r25, X+
    163a:	0d 90       	ld	r0, X+
    163c:	bc 91       	ld	r27, X
    163e:	a0 2d       	mov	r26, r0
    1640:	24 81       	ldd	r18, Z+4	; 0x04
    1642:	35 81       	ldd	r19, Z+5	; 0x05
    1644:	46 81       	ldd	r20, Z+6	; 0x06
    1646:	57 81       	ldd	r21, Z+7	; 0x07
    1648:	28 17       	cp	r18, r24
    164a:	39 07       	cpc	r19, r25
    164c:	4a 07       	cpc	r20, r26
    164e:	5b 07       	cpc	r21, r27
    1650:	18 f4       	brcc	.+6      	; 0x1658 <__fpcmp_parts_f+0x8e>
    1652:	11 23       	and	r17, r17
    1654:	41 f0       	breq	.+16     	; 0x1666 <__fpcmp_parts_f+0x9c>
    1656:	0a c0       	rjmp	.+20     	; 0x166c <__fpcmp_parts_f+0xa2>
    1658:	82 17       	cp	r24, r18
    165a:	93 07       	cpc	r25, r19
    165c:	a4 07       	cpc	r26, r20
    165e:	b5 07       	cpc	r27, r21
    1660:	40 f4       	brcc	.+16     	; 0x1672 <__fpcmp_parts_f+0xa8>
    1662:	11 23       	and	r17, r17
    1664:	19 f0       	breq	.+6      	; 0x166c <__fpcmp_parts_f+0xa2>
    1666:	61 e0       	ldi	r22, 0x01	; 1
    1668:	70 e0       	ldi	r23, 0x00	; 0
    166a:	05 c0       	rjmp	.+10     	; 0x1676 <__fpcmp_parts_f+0xac>
    166c:	6f ef       	ldi	r22, 0xFF	; 255
    166e:	7f ef       	ldi	r23, 0xFF	; 255
    1670:	02 c0       	rjmp	.+4      	; 0x1676 <__fpcmp_parts_f+0xac>
    1672:	60 e0       	ldi	r22, 0x00	; 0
    1674:	70 e0       	ldi	r23, 0x00	; 0
    1676:	cb 01       	movw	r24, r22
    1678:	1f 91       	pop	r17
    167a:	08 95       	ret

0000167c <__divmodhi4>:
    167c:	97 fb       	bst	r25, 7
    167e:	09 2e       	mov	r0, r25
    1680:	07 26       	eor	r0, r23
    1682:	0a d0       	rcall	.+20     	; 0x1698 <__divmodhi4_neg1>
    1684:	77 fd       	sbrc	r23, 7
    1686:	04 d0       	rcall	.+8      	; 0x1690 <__divmodhi4_neg2>
    1688:	0c d0       	rcall	.+24     	; 0x16a2 <__udivmodhi4>
    168a:	06 d0       	rcall	.+12     	; 0x1698 <__divmodhi4_neg1>
    168c:	00 20       	and	r0, r0
    168e:	1a f4       	brpl	.+6      	; 0x1696 <__divmodhi4_exit>

00001690 <__divmodhi4_neg2>:
    1690:	70 95       	com	r23
    1692:	61 95       	neg	r22
    1694:	7f 4f       	sbci	r23, 0xFF	; 255

00001696 <__divmodhi4_exit>:
    1696:	08 95       	ret

00001698 <__divmodhi4_neg1>:
    1698:	f6 f7       	brtc	.-4      	; 0x1696 <__divmodhi4_exit>
    169a:	90 95       	com	r25
    169c:	81 95       	neg	r24
    169e:	9f 4f       	sbci	r25, 0xFF	; 255
    16a0:	08 95       	ret

000016a2 <__udivmodhi4>:
    16a2:	aa 1b       	sub	r26, r26
    16a4:	bb 1b       	sub	r27, r27
    16a6:	51 e1       	ldi	r21, 0x11	; 17
    16a8:	07 c0       	rjmp	.+14     	; 0x16b8 <__udivmodhi4_ep>

000016aa <__udivmodhi4_loop>:
    16aa:	aa 1f       	adc	r26, r26
    16ac:	bb 1f       	adc	r27, r27
    16ae:	a6 17       	cp	r26, r22
    16b0:	b7 07       	cpc	r27, r23
    16b2:	10 f0       	brcs	.+4      	; 0x16b8 <__udivmodhi4_ep>
    16b4:	a6 1b       	sub	r26, r22
    16b6:	b7 0b       	sbc	r27, r23

000016b8 <__udivmodhi4_ep>:
    16b8:	88 1f       	adc	r24, r24
    16ba:	99 1f       	adc	r25, r25
    16bc:	5a 95       	dec	r21
    16be:	a9 f7       	brne	.-22     	; 0x16aa <__udivmodhi4_loop>
    16c0:	80 95       	com	r24
    16c2:	90 95       	com	r25
    16c4:	bc 01       	movw	r22, r24
    16c6:	cd 01       	movw	r24, r26
    16c8:	08 95       	ret

000016ca <__prologue_saves__>:
    16ca:	2f 92       	push	r2
    16cc:	3f 92       	push	r3
    16ce:	4f 92       	push	r4
    16d0:	5f 92       	push	r5
    16d2:	6f 92       	push	r6
    16d4:	7f 92       	push	r7
    16d6:	8f 92       	push	r8
    16d8:	9f 92       	push	r9
    16da:	af 92       	push	r10
    16dc:	bf 92       	push	r11
    16de:	cf 92       	push	r12
    16e0:	df 92       	push	r13
    16e2:	ef 92       	push	r14
    16e4:	ff 92       	push	r15
    16e6:	0f 93       	push	r16
    16e8:	1f 93       	push	r17
    16ea:	cf 93       	push	r28
    16ec:	df 93       	push	r29
    16ee:	cd b7       	in	r28, 0x3d	; 61
    16f0:	de b7       	in	r29, 0x3e	; 62
    16f2:	ca 1b       	sub	r28, r26
    16f4:	db 0b       	sbc	r29, r27
    16f6:	0f b6       	in	r0, 0x3f	; 63
    16f8:	f8 94       	cli
    16fa:	de bf       	out	0x3e, r29	; 62
    16fc:	0f be       	out	0x3f, r0	; 63
    16fe:	cd bf       	out	0x3d, r28	; 61
    1700:	09 94       	ijmp

00001702 <__epilogue_restores__>:
    1702:	2a 88       	ldd	r2, Y+18	; 0x12
    1704:	39 88       	ldd	r3, Y+17	; 0x11
    1706:	48 88       	ldd	r4, Y+16	; 0x10
    1708:	5f 84       	ldd	r5, Y+15	; 0x0f
    170a:	6e 84       	ldd	r6, Y+14	; 0x0e
    170c:	7d 84       	ldd	r7, Y+13	; 0x0d
    170e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1710:	9b 84       	ldd	r9, Y+11	; 0x0b
    1712:	aa 84       	ldd	r10, Y+10	; 0x0a
    1714:	b9 84       	ldd	r11, Y+9	; 0x09
    1716:	c8 84       	ldd	r12, Y+8	; 0x08
    1718:	df 80       	ldd	r13, Y+7	; 0x07
    171a:	ee 80       	ldd	r14, Y+6	; 0x06
    171c:	fd 80       	ldd	r15, Y+5	; 0x05
    171e:	0c 81       	ldd	r16, Y+4	; 0x04
    1720:	1b 81       	ldd	r17, Y+3	; 0x03
    1722:	aa 81       	ldd	r26, Y+2	; 0x02
    1724:	b9 81       	ldd	r27, Y+1	; 0x01
    1726:	ce 0f       	add	r28, r30
    1728:	d1 1d       	adc	r29, r1
    172a:	0f b6       	in	r0, 0x3f	; 63
    172c:	f8 94       	cli
    172e:	de bf       	out	0x3e, r29	; 62
    1730:	0f be       	out	0x3f, r0	; 63
    1732:	cd bf       	out	0x3d, r28	; 61
    1734:	ed 01       	movw	r28, r26
    1736:	08 95       	ret

00001738 <itoa>:
    1738:	e6 2f       	mov	r30, r22
    173a:	f7 2f       	mov	r31, r23
    173c:	2e 2f       	mov	r18, r30
    173e:	3f 2f       	mov	r19, r31
    1740:	e8 94       	clt
    1742:	42 30       	cpi	r20, 0x02	; 2
    1744:	c4 f0       	brlt	.+48     	; 0x1776 <itoa+0x3e>
    1746:	45 32       	cpi	r20, 0x25	; 37
    1748:	b4 f4       	brge	.+44     	; 0x1776 <itoa+0x3e>
    174a:	4a 30       	cpi	r20, 0x0A	; 10
    174c:	29 f4       	brne	.+10     	; 0x1758 <itoa+0x20>
    174e:	97 fb       	bst	r25, 7
    1750:	1e f4       	brtc	.+6      	; 0x1758 <itoa+0x20>
    1752:	90 95       	com	r25
    1754:	81 95       	neg	r24
    1756:	9f 4f       	sbci	r25, 0xFF	; 255
    1758:	64 2f       	mov	r22, r20
    175a:	77 27       	eor	r23, r23
    175c:	a2 df       	rcall	.-188    	; 0x16a2 <__udivmodhi4>
    175e:	80 5d       	subi	r24, 0xD0	; 208
    1760:	8a 33       	cpi	r24, 0x3A	; 58
    1762:	0c f0       	brlt	.+2      	; 0x1766 <itoa+0x2e>
    1764:	89 5d       	subi	r24, 0xD9	; 217
    1766:	81 93       	st	Z+, r24
    1768:	86 2f       	mov	r24, r22
    176a:	97 2f       	mov	r25, r23
    176c:	00 97       	sbiw	r24, 0x00	; 0
    176e:	a1 f7       	brne	.-24     	; 0x1758 <itoa+0x20>
    1770:	16 f4       	brtc	.+4      	; 0x1776 <itoa+0x3e>
    1772:	5d e2       	ldi	r21, 0x2D	; 45
    1774:	51 93       	st	Z+, r21
    1776:	10 82       	st	Z, r1
    1778:	82 2f       	mov	r24, r18
    177a:	93 2f       	mov	r25, r19
    177c:	00 c0       	rjmp	.+0      	; 0x177e <strrev>

0000177e <strrev>:
    177e:	a8 2f       	mov	r26, r24
    1780:	b9 2f       	mov	r27, r25
    1782:	e8 2f       	mov	r30, r24
    1784:	f9 2f       	mov	r31, r25
    1786:	67 2f       	mov	r22, r23
    1788:	71 91       	ld	r23, Z+
    178a:	77 23       	and	r23, r23
    178c:	e1 f7       	brne	.-8      	; 0x1786 <strrev+0x8>
    178e:	32 97       	sbiw	r30, 0x02	; 2
    1790:	04 c0       	rjmp	.+8      	; 0x179a <strrev+0x1c>
    1792:	7c 91       	ld	r23, X
    1794:	6d 93       	st	X+, r22
    1796:	70 83       	st	Z, r23
    1798:	62 91       	ld	r22, -Z
    179a:	ae 17       	cp	r26, r30
    179c:	bf 07       	cpc	r27, r31
    179e:	c8 f3       	brcs	.-14     	; 0x1792 <strrev+0x14>
    17a0:	08 95       	ret

000017a2 <_exit>:
    17a2:	f8 94       	cli

000017a4 <__stop_program>:
    17a4:	ff cf       	rjmp	.-2      	; 0x17a4 <__stop_program>
