
bin\Debug\IO_interface.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000126  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .fuse         00000002  00820000  00820000  0000019a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000020  00000000  00000000  0000019c  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000038  00000000  00000000  000001bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000123  00000000  00000000  000001f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000000c3  00000000  00000000  00000317  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000012d  00000000  00000000  000003da  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000020  00000000  00000000  00000508  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000bd  00000000  00000000  00000528  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 91 00 	jmp	0x122	; 0x122 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

#include <avr/io.h>
#include <util/delay.h> // to use delay function

int main(void)
{   //unsigned char arr[]={};
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	0f 92       	push	r0
  72:	cd b7       	in	r28, 0x3d	; 61
  74:	de b7       	in	r29, 0x3e	; 62
     unsigned char i=0;
  76:	19 82       	std	Y+1, r1	; 0x01
	DDRD = DDRD | (1<<PD0) | (1<<PD1) |(1<<PD2) |(1<<PD3)  ;
  78:	a1 e3       	ldi	r26, 0x31	; 49
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	e1 e3       	ldi	r30, 0x31	; 49
  7e:	f0 e0       	ldi	r31, 0x00	; 0
  80:	80 81       	ld	r24, Z
  82:	8f 60       	ori	r24, 0x0F	; 15
  84:	8c 93       	st	X, r24
	//DDRC |= 0x0F;
    DDRA = DDRA  & (~(1<<PA0)) & (~(1<<PA1));
  86:	aa e3       	ldi	r26, 0x3A	; 58
  88:	b0 e0       	ldi	r27, 0x00	; 0
  8a:	ea e3       	ldi	r30, 0x3A	; 58
  8c:	f0 e0       	ldi	r31, 0x00	; 0
  8e:	80 81       	ld	r24, Z
  90:	8c 7f       	andi	r24, 0xFC	; 252
  92:	8c 93       	st	X, r24
    while(1)
    {
        if (PINA &(1<<PA0))
  94:	e9 e3       	ldi	r30, 0x39	; 57
  96:	f0 e0       	ldi	r31, 0x00	; 0
  98:	80 81       	ld	r24, Z
  9a:	88 2f       	mov	r24, r24
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	81 70       	andi	r24, 0x01	; 1
  a0:	90 70       	andi	r25, 0x00	; 0
  a2:	88 23       	and	r24, r24
  a4:	e9 f0       	breq	.+58     	; 0xe0 <main+0x74>
        {
            if(i<9)
  a6:	89 81       	ldd	r24, Y+1	; 0x01
  a8:	89 30       	cpi	r24, 0x09	; 9
  aa:	20 f4       	brcc	.+8      	; 0xb4 <main+0x48>
                i++;
  ac:	89 81       	ldd	r24, Y+1	; 0x01
  ae:	8f 5f       	subi	r24, 0xFF	; 255
  b0:	89 83       	std	Y+1, r24	; 0x01
  b2:	01 c0       	rjmp	.+2      	; 0xb6 <main+0x4a>
            else
                i=0;
  b4:	19 82       	std	Y+1, r1	; 0x01
           PORTD = (PORTD & 0xF0) |  (i&0x0F);
  b6:	a2 e3       	ldi	r26, 0x32	; 50
  b8:	b0 e0       	ldi	r27, 0x00	; 0
  ba:	e2 e3       	ldi	r30, 0x32	; 50
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	80 81       	ld	r24, Z
  c0:	98 2f       	mov	r25, r24
  c2:	90 7f       	andi	r25, 0xF0	; 240
  c4:	89 81       	ldd	r24, Y+1	; 0x01
  c6:	8f 70       	andi	r24, 0x0F	; 15
  c8:	89 2b       	or	r24, r25
  ca:	8c 93       	st	X, r24
            while(PINA &(1<<PA0));
  cc:	e9 e3       	ldi	r30, 0x39	; 57
  ce:	f0 e0       	ldi	r31, 0x00	; 0
  d0:	80 81       	ld	r24, Z
  d2:	88 2f       	mov	r24, r24
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	81 70       	andi	r24, 0x01	; 1
  d8:	90 70       	andi	r25, 0x00	; 0
  da:	88 23       	and	r24, r24
  dc:	b9 f7       	brne	.-18     	; 0xcc <main+0x60>
  de:	da cf       	rjmp	.-76     	; 0x94 <main+0x28>

        }
        else if (PINA &(1<<PA1))
  e0:	e9 e3       	ldi	r30, 0x39	; 57
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
  e6:	88 2f       	mov	r24, r24
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	82 70       	andi	r24, 0x02	; 2
  ec:	90 70       	andi	r25, 0x00	; 0
  ee:	00 97       	sbiw	r24, 0x00	; 0
  f0:	89 f2       	breq	.-94     	; 0x94 <main+0x28>
        {
            i--;
  f2:	89 81       	ldd	r24, Y+1	; 0x01
  f4:	81 50       	subi	r24, 0x01	; 1
  f6:	89 83       	std	Y+1, r24	; 0x01
           PORTD = (PORTD & 0xF0) |  (i&0x0F);
  f8:	a2 e3       	ldi	r26, 0x32	; 50
  fa:	b0 e0       	ldi	r27, 0x00	; 0
  fc:	e2 e3       	ldi	r30, 0x32	; 50
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	80 81       	ld	r24, Z
 102:	98 2f       	mov	r25, r24
 104:	90 7f       	andi	r25, 0xF0	; 240
 106:	89 81       	ldd	r24, Y+1	; 0x01
 108:	8f 70       	andi	r24, 0x0F	; 15
 10a:	89 2b       	or	r24, r25
 10c:	8c 93       	st	X, r24
            while(PINA &(1<<PA1));
 10e:	e9 e3       	ldi	r30, 0x39	; 57
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	80 81       	ld	r24, Z
 114:	88 2f       	mov	r24, r24
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	82 70       	andi	r24, 0x02	; 2
 11a:	90 70       	andi	r25, 0x00	; 0
 11c:	00 97       	sbiw	r24, 0x00	; 0
 11e:	b9 f7       	brne	.-18     	; 0x10e <main+0xa2>
 120:	b9 cf       	rjmp	.-142    	; 0x94 <main+0x28>

00000122 <_exit>:
 122:	f8 94       	cli

00000124 <__stop_program>:
 124:	ff cf       	rjmp	.-2      	; 0x124 <__stop_program>
